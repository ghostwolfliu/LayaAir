{"version":3,"file":"laya.ani.js","sources":["../../../src/layaAir/laya/ani/AniLibPack.ts","../../../src/layaAir/laya/ani/AnimationContent.ts","../../../src/layaAir/laya/ani/AnimationNodeContent.ts","../../../src/layaAir/laya/ani/KeyFramesContent.ts","../../../src/layaAir/laya/ani/AnimationParser01.ts","../../../src/layaAir/laya/ani/AnimationParser02.ts","../../../src/layaAir/laya/ani/AnimationState.ts","../../../src/layaAir/laya/ani/AnimationPlayer.ts","../../../src/layaAir/laya/ani/math/BezierLerp.ts","../../../src/layaAir/laya/ani/AnimationTemplet.ts","../../../src/layaAir/laya/ani/GraphicsAni.ts","../../../src/layaAir/laya/ani/bone/Transform.ts","../../../src/layaAir/laya/ani/bone/Bone.ts","../../../src/layaAir/laya/ani/bone/UVTools.ts","../../../src/layaAir/laya/ani/bone/canvasmesh/MeshData.ts","../../../src/layaAir/laya/ani/bone/canvasmesh/SkinMeshForGraphic.ts","../../../src/layaAir/laya/ani/bone/BoneSlot.ts","../../../src/layaAir/laya/ani/bone/DeformAniData.ts","../../../src/layaAir/laya/ani/bone/DeformSlotData.ts","../../../src/layaAir/laya/ani/bone/DeformSlotDisplayData.ts","../../../src/layaAir/laya/ani/bone/DrawOrderData.ts","../../../src/layaAir/laya/ani/bone/EventData.ts","../../../src/layaAir/laya/ani/bone/IkConstraint.ts","../../../src/layaAir/laya/ani/bone/IkConstraintData.ts","../../../src/layaAir/laya/ani/bone/PathConstraint.ts","../../../src/layaAir/laya/ani/bone/PathConstraintData.ts","../../../src/layaAir/laya/ani/bone/TfConstraint.ts","../../../src/layaAir/laya/ani/bone/Skeleton.ts","../../../src/layaAir/laya/ani/bone/SkinData.ts","../../../src/layaAir/laya/ani/bone/SkinSlotDisplayData.ts","../../../src/layaAir/laya/ani/bone/SlotData.ts","../../../src/layaAir/laya/ani/bone/TfConstraintData.ts","../../../src/layaAir/laya/ani/bone/Templet.ts","../../../src/layaAir/laya/ani/swf/MovieClip.ts"],"sourcesContent":["import { Skeleton } from \"./bone/Skeleton\";\r\nimport { AnimationTemplet } from \"./AnimationTemplet\";\r\nimport { Templet } from \"./bone/Templet\";\r\n\r\nexport class IAniLib {\r\n    static Skeleton: typeof Skeleton = null;\r\n    static AnimationTemplet: typeof AnimationTemplet = null;\r\n    static Templet: typeof Templet = null;\r\n}\r\n","import { AnimationNodeContent } from \"./AnimationNodeContent\";\r\n/**\r\n * @internal\r\n * @author ...\r\n */\r\nexport class AnimationContent {\r\n\tnodes: AnimationNodeContent[];\r\n\tname: string;\r\n\tplayTime: number;\r\n\tbone3DMap: any;\r\n\ttotalKeyframeDatasLength: number;\r\n}\r\n\r\n","import { KeyFramesContent } from \"./KeyFramesContent\";\r\n/**\r\n * @internal\r\n */\r\nexport class AnimationNodeContent {\r\n\tname: string;\r\n\tparentIndex: number;\r\n\tparent: AnimationNodeContent;\r\n\tkeyframeWidth: number;\r\n\tlerpType: number;\r\n\tinterpolationMethod: any[];\r\n\tchilds: any[];\r\n\tkeyFrame: KeyFramesContent[];// = new Vector.<KeyFramesContent>;\r\n\tplayTime: number;\r\n\textenData: ArrayBuffer;\r\n\tdataOffset: number;\r\n}\r\n\r\n","\r\nexport class KeyFramesContent {\r\n\t//TODO 这个对内存影响较大，建议减少一下\r\n\tstartTime: number;\r\n\tduration: number;\r\n\tinterpolationData: any[];//私有插值方式 [type0(插值类型),Data0(插值数据,可为空)，type1(插值类型),Data1(插值数据,可为空)] 注意：254全线性插值，255全不插值\r\n\tdata: Float32Array;//= new Float32Array();\t数据\r\n\tdData: Float32Array;//= new Float32Array();\t数据变化量\r\n\tnextData: Float32Array;//= new Float32Array();\r\n\r\n}\r\n\r\n\r\n","import { AnimationTemplet } from \"./AnimationTemplet\";\r\nimport { AnimationContent } from \"./AnimationContent\";\r\nimport { AnimationNodeContent } from \"./AnimationNodeContent\";\r\nimport { KeyFramesContent } from \"./KeyFramesContent\";\r\nimport { IAniLib } from \"./AniLibPack\";\r\nimport { Byte } from \"../utils/Byte\";\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class AnimationParser01 {\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tstatic parse(templet: AnimationTemplet, reader: Byte): void {\r\n\t\tvar data: ArrayBuffer = reader.__getBuffer();\r\n\t\tvar i: number, j: number, k: number, n: number, l: number, m: number, o: number;\r\n\t\t//if (head != KeyframesAniTemplet.LAYA_ANIMATION_VISION)\r\n\t\t//{\r\n\t\t//trace(\"[Error] Version \" + _aniVersion + \" The engine is inconsistent, update to the version \" + KeyframesAniTemplet.LAYA_ANIMATION_VISION + \" please.\");\r\n\t\t//return;\r\n\t\t//}\r\n\t\tvar aniClassName: string = reader.readUTFString();//字符串(动画播放器类名，缺省为ANI)\r\n\t\ttemplet._aniClassName = aniClassName;\r\n\t\tvar strList: any[] = reader.readUTFString().split(\"\\n\");//字符串(\\n分割 UTF8 )\r\n\t\tvar aniCount: number = reader.getUint8();//动画块数:Uint8\r\n\r\n\t\tvar publicDataPos: number = reader.getUint32();//公用数据POS\t\r\n\t\tvar publicExtDataPos: number = reader.getUint32();//公用扩展数据POS\r\n\r\n\t\tvar publicData: ArrayBuffer;//获取公用数据\r\n\t\tif (publicDataPos > 0)\r\n\t\t\tpublicData = data.slice(publicDataPos, publicExtDataPos);\r\n\t\tvar publicRead: Byte = new Byte(publicData);\r\n\r\n\t\tif (publicExtDataPos > 0)//获取公用扩展数据\r\n\t\t\ttemplet._publicExtData = data.slice(publicExtDataPos, data.byteLength);\r\n\r\n\t\ttemplet._useParent = !!reader.getUint8();\r\n\t\ttemplet._anis.length = aniCount;\r\n\r\n\t\tfor (i = 0; i < aniCount; i++) {\r\n\t\t\tvar ani: AnimationContent = templet._anis[i] = new AnimationContent();\r\n\t\t\t//[IF-SCRIPT] {};//不要删除\r\n\t\t\tani.nodes = [];\r\n\t\t\tvar name: string = ani.name = strList[reader.getUint16()];//获得骨骼名字\r\n\r\n\t\t\ttemplet._aniMap[name] = i;//按名字可以取得动画索引\r\n\t\t\tani.bone3DMap = {};\r\n\t\t\tani.playTime = reader.getFloat32();//本骨骼播放时间\r\n\t\t\tvar boneCount: number = ani.nodes.length = reader.getUint8();//得到本动画骨骼数目\r\n\r\n\t\t\tani.totalKeyframeDatasLength = 0;\r\n\r\n\t\t\tfor (j = 0; j < boneCount; j++) {\r\n\t\t\t\tvar node: AnimationNodeContent = ani.nodes[j] = new AnimationNodeContent();\r\n\t\t\t\t//[IF-SCRIPT] {};//不要删除\r\n\t\t\t\tnode.childs = [];\r\n\r\n\t\t\t\tvar nameIndex: number = reader.getInt16();\r\n\t\t\t\tif (nameIndex >= 0) {\r\n\t\t\t\t\tnode.name = strList[nameIndex];//骨骼名字\r\n\t\t\t\t\tani.bone3DMap[node.name] = j;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnode.keyFrame = [];\r\n\t\t\t\tnode.parentIndex = reader.getInt16();//父对象编号，相对本动画(INT16,-1表示没有)\r\n\t\t\t\tnode.parentIndex == -1 ? node.parent = null : node.parent = ani.nodes[node.parentIndex]\r\n\r\n\t\t\t\tnode.lerpType = reader.getUint8();//该节点插值类型:0为不插值，1为逐节点插值，2为私有插值\r\n\r\n\t\t\t\tvar keyframeParamsOffset: number = reader.getUint32();//相对于数据扩展区的偏移地址\r\n\t\t\t\tpublicRead.pos = keyframeParamsOffset;//切换到数据区偏移地址\r\n\r\n\t\t\t\tvar keyframeDataCount: number = node.keyframeWidth = publicRead.getUint16();//keyframe数据宽度:Uint8\t\t\r\n\t\t\t\tani.totalKeyframeDatasLength += keyframeDataCount;\r\n\t\t\t\t//每个数据的插值方式:Uint8*keyframe数据宽度\r\n\t\t\t\tif (node.lerpType === 0 || node.lerpType === 1)//是否逐节点插值\r\n\t\t\t\t{\r\n\t\t\t\t\tnode.interpolationMethod = [];\r\n\t\t\t\t\tnode.interpolationMethod.length = keyframeDataCount;\r\n\t\t\t\t\tfor (k = 0; k < keyframeDataCount; k++)\r\n\t\t\t\t\t\tnode.interpolationMethod[k] = IAniLib.AnimationTemplet.interpolation[publicRead.getUint8()];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (node.parent != null)\r\n\t\t\t\t\tnode.parent.childs.push(node);\r\n\r\n\t\t\t\tvar privateDataLen: number = reader.getUint16();//\"UINT16\", [1],//私有数据长度\r\n\t\t\t\tif (privateDataLen > 0) {\r\n\t\t\t\t\t//\"BYTE\", [1],//私有数据\r\n\t\t\t\t\tnode.extenData = data.slice(reader.pos, reader.pos + privateDataLen);\r\n\t\t\t\t\treader.pos += privateDataLen;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar keyframeCount: number = reader.getUint16();\r\n\t\t\t\tnode.keyFrame.length = keyframeCount;\r\n\t\t\t\tvar startTime: number = 0;\r\n\t\t\t\tvar keyFrame: KeyFramesContent;\r\n\t\t\t\tfor (k = 0, n = keyframeCount; k < n; k++) {\r\n\t\t\t\t\tkeyFrame = node.keyFrame[k] = new KeyFramesContent();\r\n\t\t\t\t\t//[IF-SCRIPT] {};//不要删除\r\n\t\t\t\t\tkeyFrame.duration = reader.getFloat32();\r\n\t\t\t\t\tkeyFrame.startTime = startTime;\r\n\r\n\t\t\t\t\tif (node.lerpType === 2)//是否逐帧插值\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tkeyFrame.interpolationData = [];\r\n\t\t\t\t\t\tvar interDataLength: number = reader.getUint8();//插值数据长度\r\n\t\t\t\t\t\tvar lerpType: number;\r\n\t\t\t\t\t\tlerpType = reader.getFloat32();\r\n\t\t\t\t\t\tswitch (lerpType) {\r\n\t\t\t\t\t\t\tcase 254: //全线性插值\r\n\t\t\t\t\t\t\t\tkeyFrame.interpolationData.length = keyframeDataCount;\r\n\t\t\t\t\t\t\t\tfor (o = 0; o < keyframeDataCount; o++)\r\n\t\t\t\t\t\t\t\t\tkeyFrame.interpolationData[o] = 0;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 255: //全不插值\r\n\t\t\t\t\t\t\t\tkeyFrame.interpolationData.length = keyframeDataCount;\r\n\t\t\t\t\t\t\t\tfor (o = 0; o < keyframeDataCount; o++)\r\n\t\t\t\t\t\t\t\t\tkeyFrame.interpolationData[o] = 5;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\tkeyFrame.interpolationData.push(lerpType);\r\n\t\t\t\t\t\t\t\tfor (m = 1; m < interDataLength; m++) {\r\n\t\t\t\t\t\t\t\t\tkeyFrame.interpolationData.push(reader.getFloat32());\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//for (m = 0; m < interDataLength; m++) {\r\n\t\t\t\t\t\t//var lerpData:int = read.getFloat32();//插值数据\r\n\t\t\t\t\t\t//switch (lerpData) {\r\n\t\t\t\t\t\t//case 254: //全线性插值\r\n\t\t\t\t\t\t//keyFrame.interpolationData.length = keyframeDataCount;\r\n\t\t\t\t\t\t//for (o = 0; o < keyframeDataCount; o++)\r\n\t\t\t\t\t\t//keyFrame.interpolationData[o] = 0;\r\n\t\t\t\t\t\t//break;\r\n\t\t\t\t\t\t//case 255: //全不插值\r\n\t\t\t\t\t\t//\r\n\t\t\t\t\t\t//keyFrame.interpolationData.length = keyframeDataCount;\r\n\t\t\t\t\t\t//for (o = 0; o < keyframeDataCount; o++)\r\n\t\t\t\t\t\t//keyFrame.interpolationData[o] = 5;\r\n\t\t\t\t\t\t//break;\r\n\t\t\t\t\t\t//default: \r\n\t\t\t\t\t\t//keyFrame.interpolationData.push(lerpData);\r\n\t\t\t\t\t\t//}\r\n\t\t\t\t\t\t//}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tkeyFrame.data = new Float32Array(keyframeDataCount);\r\n\t\t\t\t\tkeyFrame.dData = new Float32Array(keyframeDataCount);\r\n\t\t\t\t\tkeyFrame.nextData = new Float32Array(keyframeDataCount);\r\n\t\t\t\t\tfor (l = 0; l < keyframeDataCount; l++) {\r\n\t\t\t\t\t\tkeyFrame.data[l] = reader.getFloat32();\r\n\t\t\t\t\t\tif (keyFrame.data[l] > -0.00000001 && keyFrame.data[l] < 0.00000001) keyFrame.data[l] = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tstartTime += keyFrame.duration;\r\n\t\t\t\t}\r\n\t\t\t\tkeyFrame.startTime = ani.playTime;//因工具BUG，矫正最后一帧startTime\r\n\t\t\t\tnode.playTime = ani.playTime;//节点总时间可能比总时长大，次处修正\r\n\t\t\t\ttemplet._calculateKeyFrame(node, keyframeCount, keyframeDataCount);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n","import { AnimationTemplet } from \"./AnimationTemplet\";\r\nimport { AnimationContent } from \"./AnimationContent\";\r\nimport { AnimationNodeContent } from \"./AnimationNodeContent\";\r\nimport { KeyFramesContent } from \"./KeyFramesContent\";\r\nimport { IAniLib } from \"./AniLibPack\";\r\nimport { Byte } from \"../utils/Byte\";\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class AnimationParser02 {\r\n\t/**@internal */\r\n\tprivate static _templet: AnimationTemplet;\r\n\t/**@internal */\r\n\tprivate static _reader: Byte;\r\n\t/**@internal */\r\n\tprivate static _strings: any[] = [];\r\n\t/**@internal */\r\n\tprivate static _BLOCK: any = { count: 0 };\r\n\t/**@internal */\r\n\tprivate static _DATA: any = { offset: 0, size: 0 };\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate static READ_DATA(): void {\r\n\t\tAnimationParser02._DATA.offset = AnimationParser02._reader.getUint32();\r\n\t\tAnimationParser02._DATA.size = AnimationParser02._reader.getUint32();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\t//TODO:coverage\r\n\tprivate static READ_BLOCK(): void {\r\n\t\tvar count: number = AnimationParser02._BLOCK.count = AnimationParser02._reader.getUint16();\r\n\t\tvar blockStarts: any[] = AnimationParser02._BLOCK.blockStarts = [];\r\n\t\tvar blockLengths: any[] = AnimationParser02._BLOCK.blockLengths = [];\r\n\t\tfor (var i: number = 0; i < count; i++) {\r\n\t\t\tblockStarts.push(AnimationParser02._reader.getUint32());\r\n\t\t\tblockLengths.push(AnimationParser02._reader.getUint32());\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\t//TODO:coverage\r\n\tprivate static READ_STRINGS(): void {\r\n\t\tvar offset: number = AnimationParser02._reader.getUint32();\r\n\t\tvar count: number = AnimationParser02._reader.getUint16();\r\n\t\tvar prePos: number = AnimationParser02._reader.pos;\r\n\t\tAnimationParser02._reader.pos = offset + AnimationParser02._DATA.offset;\r\n\r\n\t\tfor (var i: number = 0; i < count; i++)\r\n\t\t\tAnimationParser02._strings[i] = AnimationParser02._reader.readUTFString();\r\n\r\n\t\tAnimationParser02._reader.pos = prePos;\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\t//TODO:coverage\r\n\tstatic parse(templet: AnimationTemplet, reader: Byte): void {\r\n\t\tAnimationParser02._templet = templet;\r\n\t\tAnimationParser02._reader = reader;\r\n\t\tvar arrayBuffer: ArrayBuffer = reader.__getBuffer();\r\n\t\tAnimationParser02.READ_DATA();\r\n\t\tAnimationParser02.READ_BLOCK();\r\n\t\tAnimationParser02.READ_STRINGS();\r\n\t\tfor (var i: number = 0, n: number = AnimationParser02._BLOCK.count; i < n; i++) {\r\n\t\t\tvar index: number = reader.getUint16();\r\n\t\t\tvar blockName: string = AnimationParser02._strings[index];\r\n\t\t\tvar fn: Function = AnimationParser02[\"READ_\" + blockName];\r\n\t\t\tif (fn == null)\r\n\t\t\t\tthrow new Error(\"model file err,no this function:\" + index + \" \" + blockName);\r\n\t\t\telse\r\n\t\t\t\tfn.call(null);\r\n\t\t}\r\n\t}\r\n\r\n\t//TODO:coverage\r\n\tstatic READ_ANIMATIONS(): void {\r\n\t\tvar reader: Byte = AnimationParser02._reader;\r\n\t\tvar arrayBuffer: ArrayBuffer = reader.__getBuffer();\r\n\t\tvar i: number, j: number, k: number, n: number, l: number;\r\n\t\tvar keyframeWidth: number = reader.getUint16();\r\n\t\tvar interpolationMethod: any[] = [];\r\n\t\tinterpolationMethod.length = keyframeWidth;\r\n\t\tfor (i = 0; i < keyframeWidth; i++)\r\n\t\t\tinterpolationMethod[i] = IAniLib.AnimationTemplet.interpolation[reader.getByte()];\r\n\r\n\t\tvar aniCount: number = reader.getUint8();\r\n\t\tAnimationParser02._templet._anis.length = aniCount;\r\n\r\n\t\tfor (i = 0; i < aniCount; i++) {\r\n\t\t\tvar ani: AnimationContent = AnimationParser02._templet._anis[i] = new AnimationContent();\r\n\t\t\tani.nodes = [];\r\n\t\t\tvar aniName: string = ani.name = AnimationParser02._strings[reader.getUint16()];\r\n\t\t\tAnimationParser02._templet._aniMap[aniName] = i;//按名字可以取得动画索引\r\n\t\t\tani.bone3DMap = {};\r\n\t\t\tani.playTime = reader.getFloat32();\r\n\t\t\tvar boneCount: number = ani.nodes.length = reader.getInt16();\r\n\t\t\tani.totalKeyframeDatasLength = 0;\r\n\t\t\tfor (j = 0; j < boneCount; j++) {\r\n\t\t\t\tvar node: AnimationNodeContent = ani.nodes[j] = new AnimationNodeContent();\r\n\t\t\t\tnode.keyframeWidth = keyframeWidth;//TODO:存在骨骼里是否合并，需要优化到动画中更合理。\r\n\t\t\t\tnode.childs = [];\r\n\r\n\t\t\t\tvar nameIndex: number = reader.getUint16();\r\n\t\t\t\tif (nameIndex >= 0) {\r\n\t\t\t\t\tnode.name = AnimationParser02._strings[nameIndex];//骨骼名字\r\n\t\t\t\t\tani.bone3DMap[node.name] = j;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnode.keyFrame = [];\r\n\t\t\t\tnode.parentIndex = reader.getInt16();//父对象编号，相对本动画(INT16,-1表示没有)\r\n\t\t\t\tnode.parentIndex == -1 ? node.parent = null : node.parent = ani.nodes[node.parentIndex]\r\n\r\n\t\t\t\tani.totalKeyframeDatasLength += keyframeWidth;\r\n\r\n\t\t\t\tnode.interpolationMethod = interpolationMethod;//TODO:\r\n\r\n\t\t\t\tif (node.parent != null)\r\n\t\t\t\t\tnode.parent.childs.push(node);\r\n\r\n\t\t\t\tvar keyframeCount: number = reader.getUint16();\r\n\t\t\t\tnode.keyFrame.length = keyframeCount;\r\n\t\t\t\tvar keyFrame: KeyFramesContent = null, lastKeyFrame: KeyFramesContent = null;\r\n\t\t\t\tfor (k = 0, n = keyframeCount; k < n; k++) {\r\n\t\t\t\t\tkeyFrame = node.keyFrame[k] = new KeyFramesContent();\r\n\t\t\t\t\tkeyFrame.startTime = reader.getFloat32();\r\n\r\n\t\t\t\t\t(lastKeyFrame) && (lastKeyFrame.duration = keyFrame.startTime - lastKeyFrame.startTime);\r\n\r\n\t\t\t\t\tkeyFrame.dData = new Float32Array(keyframeWidth);\r\n\t\t\t\t\tkeyFrame.nextData = new Float32Array(keyframeWidth);\r\n\r\n\t\t\t\t\tvar offset: number = AnimationParser02._DATA.offset;\r\n\r\n\t\t\t\t\tvar keyframeDataOffset: number = reader.getUint32();\r\n\t\t\t\t\tvar keyframeDataLength: number = keyframeWidth * 4;\r\n\t\t\t\t\tvar keyframeArrayBuffer: ArrayBuffer = arrayBuffer.slice(offset + keyframeDataOffset, offset + keyframeDataOffset + keyframeDataLength);\r\n\t\t\t\t\tkeyFrame.data = new Float32Array(keyframeArrayBuffer);\r\n\t\t\t\t\tlastKeyFrame = keyFrame;\r\n\t\t\t\t}\r\n\t\t\t\tkeyFrame.duration = 0;\r\n\r\n\t\t\t\tnode.playTime = ani.playTime;//节点总时间可能比总时长大，次处修正\r\n\t\t\t\tAnimationParser02._templet._calculateKeyFrame(node, keyframeCount, keyframeWidth);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n\r\n","/**\r\n * @internal\r\n */\r\nexport class AnimationState {\r\n\tstatic stopped: number = 0;\r\n\tstatic paused: number = 1;\r\n\tstatic playing: number = 2;\r\n\r\n\tconstructor() {\r\n\r\n\t}\r\n}\r\n\r\n","import { AnimationTemplet } from \"./AnimationTemplet\";\r\nimport { AnimationState } from \"./AnimationState\";\r\nimport { Stat } from \"../utils/Stat\";\r\nimport { Event } from \"../events/Event\";\r\nimport { IDestroy } from \"../resource/IDestroy\";\r\nimport { EventDispatcher } from \"../events/EventDispatcher\";\r\n\r\n\r\n/**开始播放时调度。\r\n * @eventType Event.PLAYED\r\n * */\r\n/*[Event(name = \"played\", type = \"laya.events.Event\")]*/\r\n/**暂停时调度。\r\n * @eventType Event.PAUSED\r\n * */\r\n/*[Event(name = \"paused\", type = \"laya.events.Event\")]*/\r\n/**完成一次循环时调度。\r\n * @eventType Event.COMPLETE\r\n * */\r\n/*[Event(name = \"complete\", type = \"laya.events.Event\")]*/\r\n/**停止时调度。\r\n * @eventType Event.STOPPED\r\n * */\r\n/*[Event(name = \"stopped\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * <code>AnimationPlayer</code> 类用于动画播放器。\r\n */\r\nexport class AnimationPlayer extends EventDispatcher implements IDestroy {\r\n\t/**@internal */\r\n\tprivate _destroyed: boolean;\r\n\t/** @internal 数据模板*/\r\n\tprivate _templet: AnimationTemplet;\r\n\t/** @internal 当前精确时间，不包括重播时间*/\r\n\tprivate _currentTime: number;\r\n\t/** @internal 当前帧时间，不包括重播时间*/\r\n\tprivate _currentFrameTime: number;\t// 这个是根据当前帧数反向计算的时间。\r\n\t/** @internal 动画播放的起始时间位置*/\r\n\tprivate _playStart: number;\r\n\t/** @internal 动画播放的结束时间位置*/\r\n\tprivate _playEnd: number;\r\n\t/** @internal 动画播放一次的总时间*/\r\n\tprivate _playDuration: number;\r\n\t/** @internal 动画播放总时间*/\r\n\tprivate _overallDuration: number;\r\n\t/** @internal 是否在一次动画结束时停止。 设置这个标志后就不会再发送complete事件了*/\r\n\tprivate _stopWhenCircleFinish: boolean;\r\n\t/**@internal 已播放时间，包括重播时间*/\r\n\t_elapsedPlaybackTime: number;\r\n\t/** @internal 播放时帧数*/\r\n\tprivate _startUpdateLoopCount: number;\r\n\t/** @internal 当前动画索引*/\r\n\tprivate _currentAnimationClipIndex: number;\r\n\t/** @internal 当前帧数*/\r\n\tprivate _currentKeyframeIndex: number;\r\n\t/** @internal 是否暂停*/\r\n\tprivate _paused: boolean;\r\n\t/** @internal 默认帧率,必须大于0*/\r\n\tprivate _cacheFrameRate: number;\r\n\t/** @internal 帧率间隔时间*/\r\n\tprivate _cacheFrameRateInterval: number;\r\n\t/** @internal 缓存播放速率*/\r\n\tprivate _cachePlayRate: number;\r\n\r\n\t/**是否缓存*/\r\n\tisCache: boolean = true;\r\n\t/** 播放速率*/\r\n\tplaybackRate: number = 1.0;\r\n\t/** 停止时是否归零*/\r\n\treturnToZeroStopped: boolean;\r\n\r\n\t/**\r\n\t * 获取动画数据模板\r\n\t * @param\tvalue 动画数据模板\r\n\t */\r\n\tget templet(): AnimationTemplet {\r\n\t\treturn this._templet;\r\n\t}\r\n\r\n\t/**\r\n\t * 设置动画数据模板,注意：修改此值会有计算开销。\r\n\t * @param\tvalue 动画数据模板\r\n\t */\r\n\tset templet(value: AnimationTemplet) {\r\n\t\tif (!(this.state === AnimationState.stopped))\r\n\t\t\tthis.stop(true);\r\n\r\n\t\tif (this._templet !== value) {\r\n\t\t\tthis._templet = value;\r\n\t\t\t//if (value.loaded)\r\n\t\t\tthis._computeFullKeyframeIndices();\r\n\t\t\t//else\r\n\t\t\t//value.once(Event.LOADED, this, _onTempletLoadedComputeFullKeyframeIndices, [_cachePlayRate, _cacheFrameRate]);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 动画播放的起始时间位置。\r\n\t * @return\t 起始时间位置。\r\n\t */\r\n\tget playStart(): number {\r\n\t\treturn this._playStart;\r\n\t}\r\n\r\n\t/**\r\n\t * 动画播放的结束时间位置。\r\n\t * @return\t 结束时间位置。\r\n\t */\r\n\tget playEnd(): number {\r\n\t\treturn this._playEnd;\r\n\t}\r\n\r\n\t/**\r\n\t * 获取动画播放一次的总时间\r\n\t * @return\t 动画播放一次的总时间\r\n\t */\r\n\tget playDuration(): number {\r\n\t\treturn this._playDuration;\r\n\t}\r\n\r\n\t/**\r\n\t * 获取动画播放的总总时间\r\n\t * @return\t 动画播放的总时间\r\n\t */\r\n\tget overallDuration(): number {\r\n\t\treturn this._overallDuration;\r\n\t}\r\n\r\n\t/**\r\n\t * 获取当前动画索引\r\n\t * @return\tvalue 当前动画索引\r\n\t */\r\n\tget currentAnimationClipIndex(): number {\r\n\t\treturn this._currentAnimationClipIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * 获取当前帧数\r\n\t * @return\t 当前帧数\r\n\t */\r\n\tget currentKeyframeIndex(): number {\r\n\t\treturn this._currentKeyframeIndex;\r\n\t}\r\n\r\n\t/**\r\n\t *  获取当前精确时间，不包括重播时间\r\n\t * @return\tvalue 当前时间\r\n\t */\r\n\tget currentPlayTime(): number {\r\n\t\treturn this._currentTime + this._playStart;\r\n\t}\r\n\r\n\t/**\r\n\t *  获取当前帧时间，不包括重播时间\r\n\t * @return\tvalue 当前时间\r\n\t */\r\n\tget currentFrameTime(): number {\r\n\t\treturn this._currentFrameTime;\r\n\t}\r\n\r\n\t/**\r\n\t *  获取缓存播放速率。*\r\n\t * @return\t 缓存播放速率。\r\n\t */\r\n\tget cachePlayRate(): number {\r\n\t\treturn this._cachePlayRate;\r\n\t}\r\n\r\n\t/**\r\n\t *  设置缓存播放速率,默认值为1.0,注意：修改此值会有计算开销。*\r\n\t * @return\tvalue 缓存播放速率。\r\n\t */\r\n\tset cachePlayRate(value: number) {\r\n\t\tif (this._cachePlayRate !== value) {\r\n\t\t\tthis._cachePlayRate = value;\r\n\t\t\tif (this._templet)\r\n\t\t\t\t//if (_templet.loaded)\r\n\t\t\t\tthis._computeFullKeyframeIndices();\r\n\t\t\t//else\r\n\t\t\t//_templet.once(Event.LOADED, this, _onTempletLoadedComputeFullKeyframeIndices, [value, _cacheFrameRate]);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *  获取默认帧率*\r\n\t * @return\tvalue 默认帧率\r\n\t */\r\n\tget cacheFrameRate(): number {\r\n\t\treturn this._cacheFrameRate;\r\n\t}\r\n\r\n\t/**\r\n\t *  设置默认帧率,每秒60帧,注意：修改此值会有计算开销。*\r\n\t * @return\tvalue 缓存帧率\r\n\t */\r\n\tset cacheFrameRate(value: number) {\r\n\t\tif (this._cacheFrameRate !== value) {\r\n\t\t\tthis._cacheFrameRate = value;\r\n\t\t\tthis._cacheFrameRateInterval = 1000.0 / this._cacheFrameRate;\r\n\t\t\tif (this._templet)\r\n\t\t\t\t//if (_templet.loaded)\r\n\t\t\t\tthis._computeFullKeyframeIndices();\r\n\t\t\t//else\r\n\t\t\t//_templet.once(Event.LOADED, this, _onTempletLoadedComputeFullKeyframeIndices, [_cachePlayRate, value]);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 设置当前播放位置\r\n\t * @param\tvalue 当前时间\r\n\t */\r\n\tset currentTime(value: number) {\r\n\t\tif (this._currentAnimationClipIndex === -1 || !this._templet /*|| !_templet.loaded*/)\r\n\t\t\treturn;\r\n\r\n\t\tif (value < this._playStart || value > this._playEnd)\r\n\t\t\tthrow new Error(\"AnimationPlayer:value must large than playStartTime,small than playEndTime.\");\r\n\r\n\t\tthis._startUpdateLoopCount = Stat.loopCount;\r\n\t\tvar cacheFrameInterval: number = this._cacheFrameRateInterval * this._cachePlayRate;\r\n\t\tthis._currentTime = value /*% playDuration*/;\r\n\t\tthis._currentKeyframeIndex = Math.floor(this.currentPlayTime / cacheFrameInterval);\r\n\t\tthis._currentFrameTime = this._currentKeyframeIndex * cacheFrameInterval;\r\n\t}\r\n\r\n\t/**\r\n\t * 获取当前是否暂停\r\n\t * @return\t是否暂停\r\n\t */\r\n\tget paused(): boolean {\r\n\t\treturn this._paused;\r\n\t}\r\n\r\n\t/**\r\n\t * 设置是否暂停\r\n\t * @param\tvalue 是否暂停\r\n\t */\r\n\tset paused(value: boolean) {\r\n\t\tthis._paused = value;\r\n\t\tvalue && this.event(Event.PAUSED);\r\n\t}\r\n\r\n\t/**\r\n\t * 获取缓存帧率间隔时间\r\n\t * @return\t缓存帧率间隔时间\r\n\t */\r\n\tget cacheFrameRateInterval(): number {\r\n\t\treturn this._cacheFrameRateInterval;\r\n\t}\r\n\r\n\t/**\r\n\t * 获取当前播放状态\r\n\t * @return\t当前播放状态\r\n\t */\r\n\tget state(): number {\r\n\t\tif (this._currentAnimationClipIndex === -1)\r\n\t\t\treturn AnimationState.stopped;\r\n\t\tif (this._paused)\r\n\t\t\treturn AnimationState.paused;\r\n\t\treturn AnimationState.playing;\r\n\t}\r\n\r\n\t/**\r\n\t * 获取是否已销毁。\r\n\t * @return 是否已销毁。\r\n\t */\r\n\tget destroyed(): boolean {\r\n\t\treturn this._destroyed;\r\n\t}\r\n\r\n\t/**\r\n\t * 创建一个 <code>AnimationPlayer</code> 实例。\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis._destroyed = false;\r\n\t\tthis._currentAnimationClipIndex = -1;\r\n\t\tthis._currentKeyframeIndex = -1;\r\n\t\tthis._currentTime = 0.0;\r\n\t\tthis._overallDuration = Number.MAX_VALUE;\r\n\t\tthis._stopWhenCircleFinish = false;\r\n\t\tthis._elapsedPlaybackTime = 0;\r\n\t\tthis._startUpdateLoopCount = -1;\r\n\t\tthis._cachePlayRate = 1.0;\r\n\t\tthis.cacheFrameRate = 60;\r\n\t\tthis.returnToZeroStopped = false;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\t_onTempletLoadedComputeFullKeyframeIndices(cachePlayRate: number, cacheFrameRate: number, templet: AnimationTemplet): void {\r\n\t\tif (this._templet === templet && this._cachePlayRate === cachePlayRate && this._cacheFrameRate === cacheFrameRate)\r\n\t\t\tthis._computeFullKeyframeIndices();\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tprivate _computeFullKeyframeIndices(): void {\r\n\t\treturn;// 先改成实时计算了。否则占用内存太多\r\n\t\tvar templet: AnimationTemplet = this._templet;\r\n\t\tif (templet._fullFrames)\r\n\t\t\treturn;\r\n\r\n\r\n\r\n\t\tvar anifullFrames: any[] = this._templet._fullFrames = [];\r\n\r\n\t\tvar cacheFrameInterval: number = this._cacheFrameRateInterval * this._cachePlayRate;\r\n\r\n\t\tfor (var i: number = 0, iNum: number = templet.getAnimationCount(); i < iNum; i++) {\r\n\t\t\tvar aniFullFrame: any[] = [];\r\n\t\t\tif (!templet.getAnimation(i).nodes) {\r\n\t\t\t\tanifullFrames.push(aniFullFrame);\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tfor (var j: number = 0, jNum: number = templet.getAnimation(i).nodes.length; j < jNum; j++) {\r\n\t\t\t\tvar node: any = templet.getAnimation(i).nodes[j];\r\n\t\t\t\tvar frameCount: number = Math.round(node.playTime / cacheFrameInterval);\r\n\t\t\t\tvar nodeFullFrames: Uint16Array = new Uint16Array(frameCount + 1);//本骨骼对应的全帧关键帧编号\r\n\t\t\t\t// 先把关键帧所在的位置填上\r\n\t\t\t\tvar stidx: number = -1;// 第一帧的位置，应该是0\r\n\t\t\t\tvar nodeframes: any[] = node.keyFrame;\r\n\t\t\t\tfor (var n: number = 0, nNum: number = nodeframes.length; n < nNum; n++) {\r\n\t\t\t\t\tvar keyFrame: any = nodeframes[n];\r\n\t\t\t\t\tvar pos: number = Math.round(keyFrame.startTime / cacheFrameInterval);\r\n\t\t\t\t\tif (stidx < 0 && pos > 0) {\r\n\t\t\t\t\t\tstidx = pos;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (pos <= frameCount) {// 实际大小是frameCount+1\r\n\t\t\t\t\t\tnodeFullFrames[pos] = n;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// 再把空隙填满\r\n\t\t\t\tvar cf: number = 0;\r\n\t\t\t\tfor (n = stidx; n < frameCount; n++) {\t// 实际大小是frameCount+1 \r\n\t\t\t\t\tif (nodeFullFrames[n] == 0) {\r\n\t\t\t\t\t\tnodeFullFrames[n] = cf;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcf = nodeFullFrames[n]; \t// 新的开始\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\taniFullFrame.push(nodeFullFrames);\r\n\t\t\t}\r\n\t\t\tanifullFrames.push(aniFullFrame);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tprivate _onAnimationTempletLoaded(): void {\r\n\t\t(this.destroyed) || (this._calculatePlayDuration());\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tprivate _calculatePlayDuration(): void {\r\n\t\tif (this.state !== AnimationState.stopped) {//防止动画已停止，异步回调导致BUG\r\n\t\t\tvar oriDuration: number = this._templet.getAniDuration(this._currentAnimationClipIndex);\r\n\t\t\t(this._playEnd === 0) && (this._playEnd = oriDuration);\r\n\r\n\t\t\tif (this._playEnd > oriDuration)//以毫秒为最小时间单位,取整。FillTextureSprite\r\n\t\t\t\tthis._playEnd = oriDuration;\r\n\r\n\t\t\tthis._playDuration = this._playEnd - this._playStart;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate _setPlayParams(time: number, cacheFrameInterval: number): void {\r\n\t\tthis._currentTime = time;\r\n\t\tthis._currentKeyframeIndex = Math.floor((this.currentPlayTime) / cacheFrameInterval + 0.01);\r\n\t\tthis._currentFrameTime = this._currentKeyframeIndex * cacheFrameInterval;\r\n\t}\r\n\r\n\t/**\r\n\t * 动画停止了对应的参数。目前都是设置时间为最后\r\n\t * @private\r\n\t */\r\n\tprivate _setPlayParamsWhenStop(currentAniClipPlayDuration: number, cacheFrameInterval: number, playEnd: number = -1): void {\r\n\t\tthis._currentTime = currentAniClipPlayDuration;\r\n\t\tvar endTime: number = playEnd > 0 ? playEnd : currentAniClipPlayDuration;\r\n\t\tthis._currentKeyframeIndex = Math.floor(endTime / cacheFrameInterval + 0.01);\r\n\t\tthis._currentKeyframeIndex = Math.floor(currentAniClipPlayDuration / cacheFrameInterval + 0.01);\r\n\t\tthis._currentFrameTime = this._currentKeyframeIndex * cacheFrameInterval;\r\n\t\tthis._currentAnimationClipIndex = -1;//动画结束\t\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\t_update(elapsedTime: number): void {\r\n\t\tif (this._currentAnimationClipIndex === -1 || this._paused || !this._templet /*|| !_templet.loaded*/)//动画停止或暂停，不更新\r\n\t\t\treturn;\r\n\r\n\t\tvar cacheFrameInterval: number = this._cacheFrameRateInterval * this._cachePlayRate;\r\n\t\tvar time: number = 0;\t// 时间间隔\r\n\t\t// 计算经过的时间\r\n\t\t(this._startUpdateLoopCount !== Stat.loopCount) && (time = elapsedTime * this.playbackRate, this._elapsedPlaybackTime += time);//elapsedTime为距离上一帧时间,首帧播放如果_startPlayLoopCount===Stat.loopCount，则不累加时间\r\n\r\n\t\tvar currentAniClipPlayDuration: number = this.playDuration;\r\n\t\t// 如果设置了总播放时间，并且超过总播放时间了，就发送stop事件\r\n\t\t// 如果没有设置_overallDuration，且播放时间超过的动画总时间，也发送stop事件？  也就是说单次播放不会发出complete事件？\r\n\t\t// 如果设置了loop播放，则会设置 _overallDuration \r\n\t\ttime += this._currentTime;\r\n\t\tif ((this._overallDuration !== 0 && this._elapsedPlaybackTime >= this._overallDuration) || (this._overallDuration === 0 && this._elapsedPlaybackTime >= currentAniClipPlayDuration\r\n\t\t\t|| (this._overallDuration === 0 && time >= this.playEnd))) {\r\n\t\t\tthis._setPlayParamsWhenStop(currentAniClipPlayDuration, cacheFrameInterval, this.playEnd);\t// (总播放时间,缓存帧的时间间隔(33.33))\r\n\t\t\tthis.event(Event.STOPPED);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (currentAniClipPlayDuration > 0) {// 如果设置了 总动画时间，一般都设置了把，就是动画文件本身记录的时间\r\n\t\t\tif (time >= currentAniClipPlayDuration) {\t// 如果超出了总动画时间\r\n\t\t\t\tif (this._stopWhenCircleFinish) {// 如果只播放一次，就发送stop事件\r\n\t\t\t\t\tthis._setPlayParamsWhenStop(currentAniClipPlayDuration, cacheFrameInterval);// (总播放时间,缓存帧的时间间隔(33.33))\r\n\t\t\t\t\tthis._stopWhenCircleFinish = false;\r\n\t\t\t\t\tthis.event(Event.STOPPED);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// 如果多次播放,发送complete事件\r\n\t\t\t\t\ttime = time % currentAniClipPlayDuration;\r\n\t\t\t\t\tthis._setPlayParams(time, cacheFrameInterval);\r\n\t\t\t\t\tthis.event(Event.COMPLETE);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis._setPlayParams(time, cacheFrameInterval);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this._stopWhenCircleFinish) {\r\n\t\t\t\tthis._setPlayParamsWhenStop(currentAniClipPlayDuration, cacheFrameInterval);\r\n\t\t\t\tthis._stopWhenCircleFinish = false;\r\n\t\t\t\tthis.event(Event.STOPPED);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis._currentTime = this._currentFrameTime = this._currentKeyframeIndex = 0;\r\n\t\t\tthis.event(Event.COMPLETE);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\t_destroy(): void {\r\n\t\tthis.offAll();\r\n\t\tthis._templet = null;\r\n\t\t//_fullFrames = null;\r\n\t\tthis._destroyed = true;\r\n\t}\r\n\r\n\t/**\r\n\t * 播放动画。\r\n\t * @param\tindex 动画索引。\r\n\t * @param\tplaybackRate 播放速率。\r\n\t * @param\tduration 播放时长（0为1次,Number.MAX_VALUE为循环播放）。\r\n\t * @param\tplayStart 播放的起始时间位置。\r\n\t * @param\tplayEnd 播放的结束时间位置。（0为动画一次循环的最长结束时间位置）。\r\n\t */\r\n\tplay(index: number = 0, playbackRate: number = 1.0, overallDuration: number = /*int.MAX_VALUE*/ 2147483647, playStart: number = 0, playEnd: number = 0): void {\r\n\t\tif (!this._templet)\r\n\t\t\tthrow new Error(\"AnimationPlayer:templet must not be null,maybe you need to set url.\");\r\n\r\n\t\tif (overallDuration < 0 || playStart < 0 || playEnd < 0)\r\n\t\t\tthrow new Error(\"AnimationPlayer:overallDuration,playStart and playEnd must large than zero.\");\r\n\r\n\t\tif ((playEnd !== 0) && (playStart > playEnd))\r\n\t\t\tthrow new Error(\"AnimationPlayer:start must less than end.\");\r\n\r\n\t\tthis._currentTime = 0;\r\n\t\tthis._currentFrameTime = 0;\r\n\t\tthis._elapsedPlaybackTime = 0;\r\n\t\tthis.playbackRate = playbackRate;\r\n\t\tthis._overallDuration = overallDuration;\r\n\t\tthis._playStart = playStart;\r\n\t\tthis._playEnd = playEnd;\r\n\t\tthis._paused = false;\r\n\t\tthis._currentAnimationClipIndex = index;\r\n\t\tthis._currentKeyframeIndex = 0;\r\n\t\tthis._startUpdateLoopCount = Stat.loopCount;\r\n\t\tthis.event(Event.PLAYED);\r\n\r\n\t\t//if (_templet.loaded)\r\n\t\tthis._calculatePlayDuration();\r\n\t\t//else\r\n\t\t//_templet.once(Event.LOADED, this, _onAnimationTempletLoaded);\r\n\r\n\t\tthis._update(0);//如果分段播放,可修正帧率\r\n\t}\r\n\r\n\t/**\r\n\t * 播放动画。\r\n\t * @param\tindex 动画索引。\r\n\t * @param\tplaybackRate 播放速率。\r\n\t * @param\tduration 播放时长（0为1次,Number.MAX_VALUE为循环播放）。\r\n\t * @param\tplayStartFrame 播放的原始起始帧率位置。\r\n\t * @param\tplayEndFrame 播放的原始结束帧率位置。（0为动画一次循环的最长结束时间位置）。\r\n\t */\r\n\tplayByFrame(index: number = 0, playbackRate: number = 1.0, overallDuration: number = /*int.MAX_VALUE*/ 2147483647, playStartFrame: number = 0, playEndFrame: number = 0, fpsIn3DBuilder: number = 30): void {\r\n\t\tvar interval: number = 1000.0 / fpsIn3DBuilder;\r\n\t\tthis.play(index, playbackRate, overallDuration, playStartFrame * interval, playEndFrame * interval);\r\n\t}\r\n\r\n\t/**\r\n\t * 停止播放当前动画\r\n\t * 如果不是立即停止就等待动画播放完成后再停止\r\n\t * @param\timmediate 是否立即停止\r\n\t */\r\n\tstop(immediate: boolean = true): void {\r\n\t\tif (immediate) {\r\n\t\t\tthis._currentTime = this._currentFrameTime = this._currentKeyframeIndex = 0;\r\n\t\t\tthis._currentAnimationClipIndex = -1;\r\n\t\t\tthis.event(Event.STOPPED);\r\n\t\t} else {\r\n\t\t\tthis._stopWhenCircleFinish = true;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tdestroy(): void {\r\n\r\n\t}\r\n\r\n}\r\n\r\n","import { Bezier } from \"../../maths/Bezier\";\r\n\r\n/**\r\n * @internal\r\n * ...\r\n * @author ww\r\n */\r\nexport class BezierLerp {\r\n\r\n\tconstructor() {\r\n\r\n\t}\r\n\t/**@internal */\r\n\tprivate static _bezierResultCache: any = {};\r\n\t/**@internal */\r\n\tprivate static _bezierPointsCache: any = {};\r\n\r\n\t//TODO:coverage\r\n\tstatic getBezierRate(t: number, px0: number, py0: number, px1: number, py1: number): number {\r\n\t\tvar key: number = BezierLerp._getBezierParamKey(px0, py0, px1, py1);\r\n\t\tvar vKey: number = key * 100 + t;\r\n\t\tif (BezierLerp._bezierResultCache[vKey]) return BezierLerp._bezierResultCache[vKey];\r\n\t\tvar points: any[] = BezierLerp._getBezierPoints(px0, py0, px1, py1, key);\r\n\t\tvar i: number, len: number;\r\n\t\tlen = points.length;\r\n\t\tfor (i = 0; i < len; i += 2) {\r\n\t\t\tif (t <= points[i]) {\r\n\t\t\t\tBezierLerp._bezierResultCache[vKey] = points[i + 1];\r\n\t\t\t\treturn points[i + 1];\r\n\t\t\t}\r\n\t\t}\r\n\t\tBezierLerp._bezierResultCache[vKey] = 1;\r\n\t\treturn 1;\r\n\t}\r\n\r\n\t//TODO:coverage\r\n\t/**@internal */\r\n\tprivate static _getBezierParamKey(px0: number, py0: number, px1: number, py1: number): number {\r\n\t\treturn (((px0 * 100 + py0) * 100 + px1) * 100 + py1) * 100;\r\n\t}\r\n\r\n\t//TODO:coverage\r\n\t/**@internal */\r\n\tprivate static _getBezierPoints(px0: number, py0: number, px1: number, py1: number, key: number): any[] {\r\n\t\tif (BezierLerp._bezierPointsCache[key]) return BezierLerp._bezierPointsCache[key];\r\n\t\tvar controlPoints: any[];\r\n\t\tcontrolPoints = [0, 0, px0, py0, px1, py1, 1, 1];\r\n\t\tvar bz: Bezier;\r\n\t\tbz = new Bezier();\r\n\t\tvar points: any[];\r\n\t\tpoints = bz.getBezierPoints(controlPoints, 100, 3);\r\n\t\tBezierLerp._bezierPointsCache[key] = points;\r\n\t\treturn points;\r\n\t}\r\n}\r\n\r\n\r\n","import { AnimationNodeContent } from \"./AnimationNodeContent\";\r\nimport { AnimationContent } from \"./AnimationContent\";\r\nimport { KeyFramesContent } from \"./KeyFramesContent\";\r\nimport { AnimationParser01 } from \"./AnimationParser01\";\r\nimport { AnimationParser02 } from \"./AnimationParser02\";\r\nimport { Resource } from \"../resource/Resource\";\r\nimport { MathUtil } from \"../maths/MathUtil\";\r\nimport { IAniLib } from \"./AniLibPack\";\r\nimport { Byte } from \"../utils/Byte\";\r\nimport { BezierLerp } from \"./math/BezierLerp\";\r\n\r\n/**\r\n * <code>AnimationTemplet</code> 类用于动画模板资源。\r\n */\r\nexport class AnimationTemplet extends Resource {\r\n\tstatic interpolation: any[] = [AnimationTemplet._LinearInterpolation_0, AnimationTemplet._QuaternionInterpolation_1, AnimationTemplet._AngleInterpolation_2, AnimationTemplet._RadiansInterpolation_3, AnimationTemplet._Matrix4x4Interpolation_4, AnimationTemplet._NoInterpolation_5, AnimationTemplet._BezierInterpolation_6, AnimationTemplet._BezierInterpolation_7];\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\t//TODO:coverage\r\n\tprivate static _LinearInterpolation_0(bone: AnimationNodeContent, index: number, out: Float32Array, outOfs: number, data: Float32Array, dt: number, dData: Float32Array, duration: number, nextData: Float32Array, interData: any[] = null): number {\r\n\t\tout[outOfs] = data[index] + dt * dData[index];\r\n\t\treturn 1;\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\t//TODO:coverage\r\n\tprivate static _QuaternionInterpolation_1(bone: any, index: number, out: Float32Array, outOfs: number, data: Float32Array, dt: number, dData: Float32Array, duration: number, nextData: Float32Array, interData: any[] = null): number {\r\n\t\tvar amount: number = duration === 0 ? 0 : dt / duration;\r\n\t\tMathUtil.slerpQuaternionArray(data, index, nextData, index, amount, out, outOfs);//(dt/duration)为amount比例\r\n\t\treturn 4;\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\t//TODO:coverage\r\n\tprivate static _AngleInterpolation_2(bone: AnimationNodeContent, index: number, out: Float32Array, outOfs: number, data: Float32Array, dt: number, dData: Float32Array, duration: number, nextData: Float32Array, interData: any[] = null): number {\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\t//TODO:coverage\r\n\tprivate static _RadiansInterpolation_3(bone: AnimationNodeContent, index: number, out: Float32Array, outOfs: number, data: Float32Array, dt: number, dData: Float32Array, duration: number, nextData: Float32Array, interData: any[] = null): number {\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\t//TODO:coverage\r\n\tprivate static _Matrix4x4Interpolation_4(bone: any, index: number, out: Float32Array, outOfs: number, data: Float32Array, dt: number, dData: Float32Array, duration: number, nextData: Float32Array, interData: any[] = null): number {\r\n\t\tfor (var i: number = 0; i < 16; i++ , index++)\r\n\t\t\tout[outOfs + i] = data[index] + dt * dData[index];\r\n\t\treturn 16;\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\t//TODO:coverage\r\n\tprivate static _NoInterpolation_5(bone: AnimationNodeContent, index: number, out: Float32Array, outOfs: number, data: Float32Array, dt: number, dData: Float32Array, duration: number, nextData: Float32Array, interData: any[] = null): number {\r\n\t\tout[outOfs] = data[index];\r\n\t\treturn 1;\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\t//TODO:coverage\r\n\tprivate static _BezierInterpolation_6(bone: AnimationNodeContent, index: number, out: Float32Array, outOfs: number, data: Float32Array, dt: number, dData: Float32Array, duration: number, nextData: Float32Array, interData: any[] = null, offset: number = 0): number {\r\n\t\tout[outOfs] = data[index] + (nextData[index] - data[index]) * BezierLerp.getBezierRate(dt / duration, interData[offset], interData[offset + 1], interData[offset + 2], interData[offset + 3]);\r\n\t\treturn 5;\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\t//TODO:coverage\r\n\tprivate static _BezierInterpolation_7(bone: AnimationNodeContent, index: number, out: Float32Array, outOfs: number, data: Float32Array, dt: number, dData: Float32Array, duration: number, nextData: Float32Array, interData: any[] = null, offset: number = 0): number {\r\n\t\t//interData=[x0,y0,x1,y1,start,d,offTime,allTime]\r\n\t\tout[outOfs] = interData[offset + 4] + interData[offset + 5] * BezierLerp.getBezierRate((dt * 0.001 + interData[offset + 6]) / interData[offset + 7], interData[offset], interData[offset + 1], interData[offset + 2], interData[offset + 3]);\r\n\t\treturn 9;\r\n\t}\r\n\r\n\t/**\r\n\t * 加载动画模板。\r\n\t * @param url 动画模板地址。\r\n\t */\r\n\t//TODO:coverage\r\n\t//public static function load(url_load:String):AnimationTemplet {\r\n\t//return Laya.loader.create(url, null, null, AnimationTemplet);\r\n\t//}\r\n\r\n\t/**@internal */\r\n\t_aniVersion: string;\r\n\t/**@internal */\r\n\t_anis: AnimationContent[] = [];\r\n\t/**@internal */\r\n\t_aniMap: any = {};\r\n\t/**@internal */\r\n\t_publicExtData: ArrayBuffer;//公共扩展数据\r\n\t/**@internal */\r\n\t_useParent: boolean;//是否采用对象树数据格式\r\n\t/**@private */\r\n\tprotected unfixedCurrentFrameIndexes: Uint32Array;\r\n\t/**@private */\r\n\tprotected unfixedCurrentTimes: Float32Array;\r\n\t/**@private */\r\n\tprotected unfixedKeyframes: KeyFramesContent[];\r\n\t/**@private */\r\n\tprotected unfixedLastAniIndex: number = -1;\r\n\t/**@internal */\r\n\t_aniClassName: string;\r\n\t/**@internal */\r\n\t_animationDatasCache: any;\r\n\t/**@internal */\r\n\t_fullFrames: any[] = null;\r\n\r\n\t/**@private */\r\n\tprivate _boneCurKeyFrm: any[] = [];\t// 记录每个骨骼当前在动画的第几帧。这个是为了去掉缓存的帧索引数据。TODO 其实这个应该放到skeleton中\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tparse(data: ArrayBuffer): void {//兼容函数\r\n\t\tvar reader: Byte = new Byte(data);\r\n\t\tthis._aniVersion = reader.readUTFString();\r\n\t\tAnimationParser01.parse(this, reader);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\t_calculateKeyFrame(node: AnimationNodeContent, keyframeCount: number, keyframeDataCount: number): void {\r\n\t\tvar keyFrames: KeyFramesContent[] = node.keyFrame;\r\n\t\tkeyFrames[keyframeCount] = keyFrames[0];\r\n\t\tfor (var i: number = 0; i < keyframeCount; i++) {\r\n\t\t\tvar keyFrame: KeyFramesContent = keyFrames[i];\r\n\t\t\tfor (var j: number = 0; j < keyframeDataCount; j++) {\r\n\t\t\t\tkeyFrame.dData[j] = (keyFrame.duration === 0) ? 0 : (keyFrames[i + 1].data[j] - keyFrame.data[j]) / keyFrame.duration;//末帧dData数据为0\r\n\t\t\t\tkeyFrame.nextData[j] = keyFrames[i + 1].data[j];\r\n\t\t\t}\r\n\t\t}\r\n\t\tkeyFrames.length--;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\t//TODO:coverage\r\n\t_onAsynLoaded(data: any, propertyParams: any = null): void {\r\n\t\tvar reader: Byte = new Byte(data);\r\n\t\tthis._aniVersion = reader.readUTFString();\r\n\t\tswitch (this._aniVersion) {\r\n\t\t\tcase \"LAYAANIMATION:02\":\r\n\t\t\t\tAnimationParser02.parse(this, reader);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tAnimationParser01.parse(this, reader);\r\n\t\t}\r\n\t}\r\n\r\n\tgetAnimationCount(): number {\r\n\t\treturn this._anis.length;\r\n\t}\r\n\r\n\tgetAnimation(aniIndex: number): any {\r\n\t\treturn this._anis[aniIndex];\r\n\t}\r\n\r\n\tgetAniDuration(aniIndex: number): number {\r\n\t\treturn this._anis[aniIndex].playTime;\r\n\t}\r\n\r\n\t//TODO:coverage\r\n\tgetNodes(aniIndex: number): any {\r\n\t\treturn this._anis[aniIndex].nodes;\r\n\t}\r\n\r\n\tgetNodeIndexWithName(aniIndex: number, name: string): number {\r\n\t\treturn this._anis[aniIndex].bone3DMap[name];\r\n\t}\r\n\r\n\tgetNodeCount(aniIndex: number): number {\r\n\t\treturn this._anis[aniIndex].nodes.length;\r\n\t}\r\n\r\n\tgetTotalkeyframesLength(aniIndex: number): number {\r\n\t\treturn this._anis[aniIndex].totalKeyframeDatasLength;\r\n\t}\r\n\r\n\tgetPublicExtData(): ArrayBuffer {\r\n\t\treturn this._publicExtData;\r\n\t}\r\n\r\n\t//TODO:coverage\r\n\tgetAnimationDataWithCache(key: any, cacheDatas: any, aniIndex: number, frameIndex: number): Float32Array {\r\n\t\tvar aniDatas: any = cacheDatas[aniIndex];\r\n\t\tif (!aniDatas) {\r\n\t\t\treturn null;\r\n\t\t} else {\r\n\t\t\tvar keyDatas: any[] = aniDatas[key];\r\n\t\t\tif (!keyDatas)\r\n\t\t\t\treturn null;\r\n\t\t\telse {\r\n\t\t\t\treturn keyDatas[frameIndex];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//TODO:coverage\r\n\tsetAnimationDataWithCache(key: any, cacheDatas: any[], aniIndex: number, frameIndex: number, data: any): void {\r\n\t\tvar aniDatas: any = (cacheDatas[aniIndex]) || (cacheDatas[aniIndex] = {});\r\n\t\tvar aniDatasCache: any[] = (aniDatas[key]) || (aniDatas[key] = []);\r\n\t\taniDatasCache[frameIndex] = data;\r\n\t}\r\n\r\n\t/**\r\n\t * 计算当前时间应该对应关键帧的哪一帧\r\n\t * @param\tnodeframes\t当前骨骼的关键帧数据\r\n\t * @param\tnodeid\t\t骨骼id，因为要使用和更新 _boneCurKeyFrm\r\n\t * @param\ttm\r\n\t * @return\r\n\t * 问题\r\n\t * \t最后一帧有问题，例如倒数第二帧时间是0.033ms,则后两帧非常靠近，当实际给最后一帧的时候，根据帧数计算出的时间实际上落在倒数第二帧\r\n\t *  \t使用与AnimationPlayer一致的累积时间就行\r\n\t */\r\n\tgetNodeKeyFrame(nodeframes: KeyFramesContent[], nodeid: number, tm: number): number {\r\n\t\tvar cid: any = this._boneCurKeyFrm[nodeid];\r\n\t\tvar frmNum: number = nodeframes.length;\r\n\r\n\t\tif (cid == void 0 || cid >= frmNum) {\r\n\t\t\tcid = this._boneCurKeyFrm[nodeid] = 0;\r\n\t\t}\r\n\r\n\t\tvar kinfo: KeyFramesContent = nodeframes[cid];\r\n\r\n\t\tvar curFrmTm: number = kinfo.startTime;\r\n\t\tvar dt: number = tm - curFrmTm;\r\n\t\t// 缓存命中的情况\r\n\t\tif (dt == 0 || (dt > 0 && kinfo.duration > dt)) {\r\n\t\t\treturn cid;\r\n\t\t}\r\n\t\t// 否则就要前后判断在第几帧\r\n\t\tvar i: number = 0;\r\n\t\tif (dt > 0) {\r\n\t\t\t// 在后面\r\n\t\t\ttm = tm + 0.01;// 有个问题，由于浮点精度的问题可能导致 前后 st+duration  st+duration 接不上。导致cid+1的起始时间>tm，所以时间加上一点\r\n\t\t\tfor (i = cid + 1; i < frmNum; i++) {\r\n\t\t\t\tkinfo = nodeframes[i];\r\n\t\t\t\tif (kinfo.startTime <= tm && kinfo.startTime + kinfo.duration > tm) {\r\n\t\t\t\t\tthis._boneCurKeyFrm[nodeid] = i;\r\n\t\t\t\t\treturn i;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn frmNum - 1;\r\n\t\t} else {\r\n\t\t\t// 在前面\r\n\t\t\tfor (i = 0; i < cid; i++) {\r\n\t\t\t\tkinfo = nodeframes[i];\r\n\t\t\t\tif (kinfo.startTime <= tm && kinfo.startTime + kinfo.duration > tm) {\r\n\t\t\t\t\tthis._boneCurKeyFrm[nodeid] = i;\r\n\t\t\t\t\treturn i;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn cid;\t// 可能误差导致，返回最后一个\r\n\t\t}\r\n\t\treturn 0;\t// 这个怎么做\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t * @param\taniIndex\r\n\t * @param\toriginalData\r\n\t * @param\tnodesFrameIndices\r\n\t * @param\tframeIndex\r\n\t * @param\tplayCurTime\r\n\t */\r\n\tgetOriginalData(aniIndex: number, originalData: Float32Array, nodesFrameIndices: any[], frameIndex: number, playCurTime: number): void {\r\n\t\tvar oneAni: AnimationContent = this._anis[aniIndex];\r\n\r\n\t\tvar nodes: AnimationNodeContent[] = oneAni.nodes;\r\n\r\n\t\t// 当前帧缓存数组可能大小需要调整\r\n\t\tvar curKFrm: any[] = this._boneCurKeyFrm;\r\n\t\tif (curKFrm.length < nodes.length) {\r\n\t\t\tcurKFrm.length = nodes.length;\r\n\t\t}\r\n\t\t//playCurTime %= oneAni.playTime;\r\n\t\tvar j: number = 0;\r\n\t\tfor (var i: number = 0, n: number = nodes.length, outOfs: number = 0; i < n; i++) {\r\n\t\t\tvar node: AnimationNodeContent = nodes[i];\r\n\r\n\t\t\tvar key: KeyFramesContent;\r\n\t\t\t//key = node.keyFrame[nodesFrameIndices[i][frameIndex]];\r\n\t\t\tvar kfrm: KeyFramesContent[] = node.keyFrame;\r\n\t\t\tkey = kfrm[this.getNodeKeyFrame(kfrm, i, playCurTime)];\r\n\r\n\t\t\tnode.dataOffset = outOfs;\r\n\r\n\t\t\tvar dt: number = playCurTime - key.startTime;\r\n\r\n\t\t\tvar lerpType: number = node.lerpType;\r\n\t\t\tif (lerpType) {\r\n\t\t\t\tswitch (lerpType) {\r\n\t\t\t\t\tcase 0:\r\n\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\tfor (j = 0; j < node.keyframeWidth;)\r\n\t\t\t\t\t\t\tj += node.interpolationMethod[j](node, j, originalData, outOfs + j, key.data, dt, key.dData, key.duration, key.nextData);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\tvar interpolationData: any[] = key.interpolationData;\r\n\t\t\t\t\t\tvar interDataLen: number = interpolationData.length;\r\n\t\t\t\t\t\tvar dataIndex: number = 0;\r\n\t\t\t\t\t\tfor (j = 0; j < interDataLen;) {\r\n\t\t\t\t\t\t\tvar type: number = interpolationData[j];\r\n\t\t\t\t\t\t\tswitch (type) {\r\n\t\t\t\t\t\t\t\tcase 6:\r\n\t\t\t\t\t\t\t\t\tj += AnimationTemplet.interpolation[type](node, dataIndex, originalData, outOfs + dataIndex, key.data, dt, key.dData, key.duration, key.nextData, interpolationData, j + 1);\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tcase 7:\r\n\t\t\t\t\t\t\t\t\tj += AnimationTemplet.interpolation[type](node, dataIndex, originalData, outOfs + dataIndex, key.data, dt, key.dData, key.duration, key.nextData, interpolationData, j + 1);\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\tj += AnimationTemplet.interpolation[type](node, dataIndex, originalData, outOfs + dataIndex, key.data, dt, key.dData, key.duration, key.nextData);\r\n\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t//if (type === 6)\r\n\t\t\t\t\t\t\t//j += interpolation[type](node, dataIndex, originalData, outOfs + dataIndex, key.data, dt, key.dData, key.duration, key.nextData, interpolationData.slice(j+1, j + 5));\r\n\t\t\t\t\t\t\t//else\r\n\t\t\t\t\t\t\t//j += interpolation[type](node, dataIndex, originalData, outOfs + dataIndex, key.data, dt, key.dData, key.duration, key.nextData);\r\n\t\t\t\t\t\t\tdataIndex++;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tfor (j = 0; j < node.keyframeWidth;)\r\n\t\t\t\t\tj += node.interpolationMethod[j](node, j, originalData, outOfs + j, key.data, dt, key.dData, key.duration, key.nextData);\r\n\t\t\t}\r\n\r\n\t\t\toutOfs += node.keyframeWidth;\r\n\t\t}\r\n\t}\r\n\r\n\t//TODO:coverage\r\n\tgetNodesCurrentFrameIndex(aniIndex: number, playCurTime: number): Uint32Array {\r\n\t\tvar ani: AnimationContent = this._anis[aniIndex];\r\n\t\tvar nodes: AnimationNodeContent[] = ani.nodes;\r\n\r\n\t\tif (aniIndex !== this.unfixedLastAniIndex) {\r\n\t\t\tthis.unfixedCurrentFrameIndexes = new Uint32Array(nodes.length);\r\n\t\t\tthis.unfixedCurrentTimes = new Float32Array(nodes.length);\r\n\t\t\tthis.unfixedLastAniIndex = aniIndex;\r\n\t\t}\r\n\r\n\t\tfor (var i = 0, n = nodes.length; i < n; i++) {\r\n\t\t\tvar node = nodes[i];\r\n\t\t\tif (playCurTime < this.unfixedCurrentTimes[i])\r\n\t\t\t\tthis.unfixedCurrentFrameIndexes[i] = 0;\r\n\t\t\tthis.unfixedCurrentTimes[i] = playCurTime;\r\n\r\n\t\t\twhile ((this.unfixedCurrentFrameIndexes[i] < node.keyFrame.length)) {\r\n\t\t\t\tif (node.keyFrame[this.unfixedCurrentFrameIndexes[i]].startTime > this.unfixedCurrentTimes[i])\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tthis.unfixedCurrentFrameIndexes[i]++;\r\n\t\t\t}\r\n\t\t\tthis.unfixedCurrentFrameIndexes[i]--;\r\n\t\t}\r\n\t\treturn this.unfixedCurrentFrameIndexes;\r\n\t}\r\n\r\n\t//TODO:coverage\r\n\tgetOriginalDataUnfixedRate(aniIndex: number, originalData: Float32Array, playCurTime: number): void {\r\n\t\tvar oneAni: AnimationContent = this._anis[aniIndex];\r\n\r\n\t\tvar nodes: AnimationNodeContent[] = oneAni.nodes;\r\n\r\n\t\tif (aniIndex !== this.unfixedLastAniIndex) {\r\n\t\t\tthis.unfixedCurrentFrameIndexes = new Uint32Array(nodes.length);\r\n\t\t\tthis.unfixedCurrentTimes = new Float32Array(nodes.length);\r\n\t\t\tthis.unfixedKeyframes = [];\r\n\t\t\tthis.unfixedLastAniIndex = aniIndex;\r\n\t\t}\r\n\r\n\t\tvar j: number = 0;\r\n\t\tfor (var i: number = 0, n: number = nodes.length, outOfs: number = 0; i < n; i++) {\r\n\t\t\tvar node: AnimationNodeContent = nodes[i];\r\n\r\n\t\t\tif (playCurTime < this.unfixedCurrentTimes[i])\r\n\t\t\t\tthis.unfixedCurrentFrameIndexes[i] = 0;\r\n\r\n\t\t\tthis.unfixedCurrentTimes[i] = playCurTime;\r\n\r\n\t\t\twhile (this.unfixedCurrentFrameIndexes[i] < node.keyFrame.length) {\r\n\t\t\t\tif (node.keyFrame[this.unfixedCurrentFrameIndexes[i]].startTime > this.unfixedCurrentTimes[i])\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tthis.unfixedKeyframes[i] = node.keyFrame[this.unfixedCurrentFrameIndexes[i]];\r\n\t\t\t\tthis.unfixedCurrentFrameIndexes[i]++;\r\n\t\t\t}\r\n\r\n\t\t\tvar key: KeyFramesContent = this.unfixedKeyframes[i];\r\n\t\t\tnode.dataOffset = outOfs;\r\n\t\t\tvar dt: number = playCurTime - key.startTime;\r\n\t\t\tvar lerpType: number = node.lerpType;\r\n\t\t\tif (lerpType) {\r\n\t\t\t\tswitch (node.lerpType) {\r\n\t\t\t\t\tcase 0:\r\n\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\tfor (j = 0; j < node.keyframeWidth;)\r\n\t\t\t\t\t\t\tj += node.interpolationMethod[j](node, j, originalData, outOfs + j, key.data, dt, key.dData, key.duration, key.nextData);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\tvar interpolationData: any[] = key.interpolationData;\r\n\t\t\t\t\t\tvar interDataLen: number = interpolationData.length;\r\n\t\t\t\t\t\tvar dataIndex: number = 0;\r\n\t\t\t\t\t\tfor (j = 0; j < interDataLen;) {\r\n\t\t\t\t\t\t\tvar type: number = interpolationData[j];\r\n\t\t\t\t\t\t\tswitch (type) {\r\n\t\t\t\t\t\t\t\tcase 6:\r\n\t\t\t\t\t\t\t\t\tj += AnimationTemplet.interpolation[type](node, dataIndex, originalData, outOfs + dataIndex, key.data, dt, key.dData, key.duration, key.nextData, interpolationData, j + 1);\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tcase 7:\r\n\t\t\t\t\t\t\t\t\tj += AnimationTemplet.interpolation[type](node, dataIndex, originalData, outOfs + dataIndex, key.data, dt, key.dData, key.duration, key.nextData, interpolationData, j + 1);\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\tj += AnimationTemplet.interpolation[type](node, dataIndex, originalData, outOfs + dataIndex, key.data, dt, key.dData, key.duration, key.nextData);\r\n\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t//if (type === 6)\r\n\t\t\t\t\t\t\t//j += interpolation[type](node, dataIndex, originalData, outOfs + dataIndex, key.data, dt, key.dData, key.duration, key.nextData, interpolationData.slice(j+1, j + 5));\r\n\t\t\t\t\t\t\t//else\r\n\t\t\t\t\t\t\t//j += interpolation[type](node, dataIndex, originalData, outOfs + dataIndex, key.data, dt, key.dData, key.duration, key.nextData);\r\n\t\t\t\t\t\t\tdataIndex++;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tfor (j = 0; j < node.keyframeWidth;)\r\n\t\t\t\t\tj += node.interpolationMethod[j](node, j, originalData, outOfs + j, key.data, dt, key.dData, key.duration, key.nextData);\r\n\t\t\t}\r\n\r\n\t\t\toutOfs += node.keyframeWidth;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nIAniLib.AnimationTemplet = AnimationTemplet;","import { SkinMeshForGraphic } from \"./bone/canvasmesh/SkinMeshForGraphic\"\r\nimport { Matrix } from \"../maths/Matrix\";\r\nimport { Graphics } from \"../display/Graphics\";\r\n\r\nexport class GraphicsAni extends Graphics {\r\n\r\n\t/**\r\n\t * @private\r\n\t * 画自定义蒙皮动画\r\n\t * @param\tskin\r\n\t */\r\n\t//TODO:coverage\r\n\tdrawSkin(skinA: SkinMeshForGraphic, alpha: number): void {\r\n\t\tthis.drawTriangles(skinA.texture, 0, 0, (<Float32Array>skinA.vertices), (<Float32Array>skinA.uvs), (<Uint16Array>skinA.indexes), skinA.transform || Matrix.EMPTY, alpha);\r\n\t}\r\n\r\n\tprivate static _caches: any[] = [];\r\n\t//TODO:coverage\r\n\tstatic create(): GraphicsAni {\r\n\t\tvar rs: GraphicsAni = GraphicsAni._caches.pop();\r\n\t\treturn rs || new GraphicsAni();\r\n\t}\r\n\r\n\t//TODO:coverage\r\n\tstatic recycle(graphics: GraphicsAni): void {\r\n\t\tgraphics.clear();\r\n\t\tGraphicsAni._caches.push(graphics);\r\n\t}\r\n}\r\n\r\n\r\n","import { Matrix } from \"../../maths/Matrix\";\r\n\r\n\r\nexport class Transform {\r\n\r\n\tskX: number = 0;\t\t// 旋转？\r\n\tskY: number = 0;\t\t// 不知道干什么的\r\n\tscX: number = 1;\t\t// 缩放\r\n\tscY: number = 1;\r\n\tx: number = 0;\t\t// 偏移\r\n\ty: number = 0;\r\n\tskewX: number = 0;\t// skew\r\n\tskewY: number = 0;\r\n\tprivate mMatrix: Matrix;\r\n\r\n\t//TODO:coverage\r\n\tinitData(data: any): void {\r\n\t\tif (data.x != undefined) {\r\n\t\t\tthis.x = data.x;\r\n\t\t}\r\n\t\tif (data.y != undefined) {\r\n\t\t\tthis.y = data.y;\r\n\t\t}\r\n\t\tif (data.skX != undefined) {\r\n\t\t\tthis.skX = data.skX;\r\n\t\t}\r\n\t\tif (data.skY != undefined) {\r\n\t\t\tthis.skY = data.skY;\r\n\t\t}\r\n\t\tif (data.scX != undefined) {\r\n\t\t\tthis.scX = data.scX;\r\n\t\t}\r\n\t\tif (data.scY != undefined) {\r\n\t\t\tthis.scY = data.scY;\r\n\t\t}\r\n\t}\r\n\r\n\t//TODO:coverage\r\n\tgetMatrix(): Matrix {\r\n\t\tvar tMatrix: Matrix;\r\n\t\tif (this.mMatrix) {\r\n\t\t\ttMatrix = this.mMatrix;\r\n\t\t} else {\r\n\t\t\ttMatrix = this.mMatrix = new Matrix();\r\n\t\t}\r\n\r\n\t\ttMatrix.identity();\r\n\t\ttMatrix.scale(this.scX, this.scY);\r\n\t\tif (this.skewX || this.skewY) {\r\n\t\t\tthis.skew(tMatrix, this.skewX * Math.PI / 180, this.skewY * Math.PI / 180);\r\n\t\t}\r\n\t\ttMatrix.rotate(this.skX * Math.PI / 180);\r\n\t\ttMatrix.translate(this.x, this.y);\r\n\r\n\t\treturn tMatrix;\r\n\t}\r\n\r\n\t//TODO:coverage\r\n\tskew(m: Matrix, x: number, y: number): Matrix {\r\n\t\tvar sinX: number = Math.sin(y);\r\n\t\tvar cosX: number = Math.cos(y);\r\n\t\tvar sinY: number = Math.sin(x);\r\n\t\tvar cosY: number = Math.cos(x);\r\n\r\n\t\tm.setTo(m.a * cosY - m.b * sinX,\r\n\t\t\tm.a * sinY + m.b * cosX,\r\n\t\t\tm.c * cosY - m.d * sinX,\r\n\t\t\tm.c * sinY + m.d * cosX,\r\n\t\t\tm.tx * cosY - m.ty * sinX,\r\n\t\t\tm.tx * sinY + m.ty * cosX);\r\n\t\treturn m;\r\n\t}\r\n}\r\n\r\n","import { Transform } from \"./Transform\";\r\nimport { Sprite } from \"../../display/Sprite\";\r\nimport { Matrix } from \"../../maths/Matrix\";\r\nimport { ILaya } from \"../../../ILaya\";\r\n\r\n\r\n/**\r\n * @private\r\n */\r\nexport class Bone {\r\n    static ShowBones: any = {};\r\n    name: string;\r\n    root: Bone;\r\n    parentBone: Bone;\r\n    length: number = 10;\r\n    transform: Transform;\r\n    resultTransform: Transform = new Transform();\r\n    resultMatrix: Matrix = new Matrix();\r\n    inheritScale: boolean = true;\r\n    inheritRotation: boolean = true;\r\n\r\n    rotation: number;\r\n    resultRotation: number;\r\n    d: number = -1;\r\n\r\n    /**@internal */\r\n    private _tempMatrix: Matrix;\r\n    /**@internal */\r\n    private _children: Bone[] = [];\r\n    /**@internal */\r\n    private _sprite: Sprite;\r\n\r\n    constructor() {\r\n    }\r\n\r\n    setTempMatrix(matrix: Matrix): void {\r\n        this._tempMatrix = matrix;\r\n        var i: number = 0, n: number = 0;\r\n        var tBone: Bone;\r\n        for (i = 0, n = this._children.length; i < n; i++) {\r\n            tBone = this._children[i];\r\n            tBone.setTempMatrix(this._tempMatrix);\r\n        }\r\n    }\r\n\r\n    //TODO:coverage\r\n    update(pMatrix: Matrix|null = null): void {\r\n        this.rotation = this.transform.skX;\r\n        var tResultMatrix: Matrix;\r\n        if (pMatrix) {\r\n            tResultMatrix = this.resultTransform.getMatrix();\r\n            Matrix.mul(tResultMatrix, pMatrix, this.resultMatrix);\r\n            this.resultRotation = this.rotation;\r\n        }\r\n        else {\r\n            this.resultRotation = this.rotation + this.parentBone.resultRotation;\r\n            if (this.parentBone) {\r\n                if (this.inheritRotation && this.inheritScale) {\r\n                    tResultMatrix = this.resultTransform.getMatrix();\r\n                    Matrix.mul(tResultMatrix, this.parentBone.resultMatrix, this.resultMatrix);\r\n                }\r\n                else {\r\n                    var parent: Bone = this.parentBone;\r\n                    var tAngle: number;\r\n                    var cos: number;\r\n                    var sin: number;\r\n                    var tParentMatrix: Matrix = this.parentBone.resultMatrix;\r\n\r\n                    //var worldX:Number = tParentMatrix.a * transform.x + tParentMatrix.c * transform.y + tParentMatrix.tx;\r\n                    //var worldY:Number = tParentMatrix.b * transform.x + tParentMatrix.d * transform.y + tParentMatrix.ty;\r\n\r\n                    //out.tx = ba * atx + bc * aty + btx;\r\n                    //out.ty = bb * atx + bd * aty + bty;\r\n                    tResultMatrix = this.resultTransform.getMatrix();\r\n                    var worldX: number = tParentMatrix.a * tResultMatrix.tx + tParentMatrix.c * tResultMatrix.ty + tParentMatrix.tx;\r\n                    var worldY: number = tParentMatrix.b * tResultMatrix.tx + tParentMatrix.d * tResultMatrix.ty + tParentMatrix.ty;\r\n\r\n                    var tTestMatrix: Matrix = new Matrix();\r\n                    if (this.inheritRotation) {\r\n                        tAngle = Math.atan2(parent.resultMatrix.b, parent.resultMatrix.a);\r\n                        cos = Math.cos(tAngle), sin = Math.sin(tAngle);\r\n                        tTestMatrix.setTo(cos, sin, -sin, cos, 0, 0);\r\n                        Matrix.mul(this._tempMatrix, tTestMatrix, Matrix.TEMP);\r\n                        Matrix.TEMP.copyTo(tTestMatrix);\r\n                        tResultMatrix = this.resultTransform.getMatrix();\r\n                        Matrix.mul(tResultMatrix, tTestMatrix, this.resultMatrix);\r\n                        if (this.resultTransform.scX * this.resultTransform.scY < 0) {\r\n                            this.resultMatrix.rotate(Math.PI * 0.5);\r\n                        }\r\n                        this.resultMatrix.tx = worldX;\r\n                        this.resultMatrix.ty = worldY;\r\n                    }\r\n                    else if (this.inheritScale) {\r\n                        tResultMatrix = this.resultTransform.getMatrix();\r\n                        Matrix.TEMP.identity();\r\n                        Matrix.TEMP.d = this.d;\r\n                        Matrix.mul(tResultMatrix, Matrix.TEMP, this.resultMatrix);\r\n                        this.resultMatrix.tx = worldX;\r\n                        this.resultMatrix.ty = worldY;\r\n                    }\r\n                    else {\r\n                        tResultMatrix = this.resultTransform.getMatrix();\r\n                        Matrix.TEMP.identity();\r\n                        Matrix.TEMP.d = this.d;\r\n                        Matrix.mul(tResultMatrix, Matrix.TEMP, this.resultMatrix);\r\n                        this.resultMatrix.tx = worldX;\r\n                        this.resultMatrix.ty = worldY;\r\n                    }\r\n                }\r\n\r\n            }\r\n            else {\r\n                tResultMatrix = this.resultTransform.getMatrix();\r\n                tResultMatrix.copyTo(this.resultMatrix);\r\n            }\r\n        }\r\n        var i: number = 0, n: number = 0;\r\n        var tBone: Bone;\r\n        for (i = 0, n = this._children.length; i < n; i++) {\r\n            tBone = this._children[i];\r\n            tBone.update();\r\n        }\r\n    }\r\n\r\n    //TODO:coverage\r\n    updateChild(): void {\r\n        var i: number = 0, n: number = 0;\r\n        var tBone: Bone;\r\n        for (i = 0, n = this._children.length; i < n; i++) {\r\n            tBone = this._children[i];\r\n            tBone.update();\r\n        }\r\n    }\r\n\r\n    //TODO:coverage\r\n    setRotation(rd: number): void {\r\n        if (this._sprite) {\r\n            this._sprite.rotation = rd * 180 / Math.PI;\r\n        }\r\n    }\r\n\r\n    //TODO:coverage\r\n    updateDraw(x: number, y: number): void {\r\n        if (!Bone.ShowBones || Bone.ShowBones[this.name]) {\r\n            if (this._sprite) {\r\n                this._sprite.x = x + this.resultMatrix.tx;\r\n                this._sprite.y = y + this.resultMatrix.ty;\r\n            }\r\n            else {\r\n                this._sprite = new Sprite();\r\n                this._sprite.graphics.drawCircle(0, 0, 5, \"#ff0000\");\r\n                this._sprite.graphics.drawLine(0, 0, this.length, 0, \"#00ff00\");\r\n                this._sprite.graphics.fillText(this.name, 0, 0, \"20px Arial\", \"#00ff00\", \"center\");\r\n                ILaya.stage.addChild(this._sprite);\r\n                this._sprite.x = x + this.resultMatrix.tx;\r\n                this._sprite.y = y + this.resultMatrix.ty;\r\n            }\r\n\r\n        }\r\n        var i: number = 0, n: number = 0;\r\n        var tBone: Bone;\r\n        for (i = 0, n = this._children.length; i < n; i++) {\r\n            tBone = this._children[i];\r\n            tBone.updateDraw(x, y);\r\n        }\r\n    }\r\n\r\n    addChild(bone: Bone): void {\r\n        this._children.push(bone);\r\n        bone.parentBone = this;\r\n    }\r\n\r\n    //TODO:coverage\r\n    findBone(boneName: string): Bone|null {\r\n        if (this.name == boneName) {\r\n            return this;\r\n        }\r\n        else {\r\n            var i: number, n: number;\r\n            var tBone: Bone;\r\n            var tResult: Bone|null;\r\n            for (i = 0, n = this._children.length; i < n; i++) {\r\n                tBone = this._children[i];\r\n                tResult = tBone.findBone(boneName);\r\n                if (tResult) {\r\n                    return tResult;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    //TODO:coverage\r\n    localToWorld(local: number[]): void {\r\n        var localX: number = local[0];\r\n        var localY: number = local[1];\r\n        local[0] = localX * this.resultMatrix.a + localY * this.resultMatrix.c + this.resultMatrix.tx;\r\n        local[1] = localX * this.resultMatrix.b + localY * this.resultMatrix.d + this.resultMatrix.ty;\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Utils } from \"../../utils/Utils\";\r\n\r\n/**\r\n * 用于UV转换的工具类\r\n * @internal\r\n */\r\nexport class UVTools {\r\n\r\n\tconstructor() {\r\n\r\n\t}\r\n\t//[0, 0, 1.0, 0, 1.0, 1.0, 0, 1.0]\r\n\t/**\r\n\t * 将相对于大图图集的小UV转换成相对某个大图的UV\r\n\t * @param\tbigUV 某个大图的UV\r\n\t * @param\tsmallUV 大图图集中的UV\r\n\t * @return 相对于某个大图的UV\r\n\t */\r\n\t//TODO:coverage\r\n\tstatic getRelativeUV(bigUV: ArrayLike<number>, smallUV: any[], rst: any[] = null): any[] {\r\n\t\tvar startX: number = bigUV[0];\r\n\t\tvar width: number = bigUV[2] - bigUV[0];\r\n\t\tvar startY: number = bigUV[1];\r\n\t\tvar height: number = bigUV[5] - bigUV[1];\r\n\t\tif (!rst) rst = [];\r\n\t\trst.length = smallUV.length;\r\n\t\tvar i: number, len: number;\r\n\t\tlen = rst.length;\r\n\t\tvar dWidth: number = 1 / width;\r\n\t\tvar dHeight: number = 1 / height;\r\n\t\tfor (i = 0; i < len; i += 2) {\r\n\t\t\trst[i] = (smallUV[i] - startX) * dWidth;\r\n\t\t\trst[i + 1] = (smallUV[i + 1] - startY) * dHeight;\r\n\t\t}\r\n\t\treturn rst;\r\n\t}\r\n\t/**\r\n\t * 将相对于某个大图的UV转换成相对于大图图集的UV\r\n\t * @param\tbigUV 某个大图的UV\r\n\t * @param\tsmallUV 相对于某个大图的UV\r\n\t * @return 相对于大图图集的UV\r\n\t */\r\n\t//TODO:coverage\r\n\tstatic getAbsoluteUV(bigUV: ArrayLike<number>, smallUV: any[], rst: any[] = null): any[] {\r\n\t\tif (bigUV[0] == 0 && bigUV[1] == 0 && bigUV[4] == 1 && bigUV[5] == 1) {\r\n\t\t\tif (rst) {\r\n\t\t\t\tUtils.copyArray(rst, smallUV);\r\n\t\t\t\treturn rst;\r\n\t\t\t} else {\r\n\t\t\t\treturn smallUV;\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar startX: number = bigUV[0];\r\n\t\tvar width: number = bigUV[2] - bigUV[0];\r\n\t\tvar startY: number = bigUV[1];\r\n\t\tvar height: number = bigUV[5] - bigUV[1];\r\n\t\tif (!rst) rst = [];\r\n\t\trst.length = smallUV.length;\r\n\t\tvar i: number, len: number;\r\n\t\tlen = rst.length;\r\n\t\tfor (i = 0; i < len; i += 2) {\r\n\t\t\trst[i] = smallUV[i] * width + startX;\r\n\t\t\trst[i + 1] = smallUV[i + 1] * height + startY;\r\n\t\t}\r\n\t\treturn rst;\r\n\t}\r\n}\r\n\r\n\r\n","import { Texture } from \"../../../resource/Texture\";\r\nimport { Matrix } from \"../../../maths/Matrix\";\r\nimport { Rectangle } from \"../../../maths/Rectangle\";\r\n\r\n\r\n/**\r\n */\r\nexport class MeshData {\r\n\t/**\r\n\t * 纹理 \r\n\t */\r\n    texture: Texture;\r\n\r\n\t/**\r\n\t * uv数据 \r\n\t */\r\n    uvs: Float32Array = new Float32Array([0, 0, 1, 0, 1, 1, 0, 1]);\r\n\r\n\t/**\r\n\t * 顶点数据 \r\n\t */\r\n    vertices: Float32Array = new Float32Array([0, 0, 100, 0, 100, 100, 0, 100]);\r\n\r\n\t/**\r\n\t * 顶点索引 \r\n\t */\r\n    indexes: Uint16Array = new Uint16Array([0, 1, 3, 3, 1, 2]);\r\n\r\n\t/**\r\n\t * uv变换矩阵 \r\n\t */\r\n    uvTransform: Matrix;\r\n\r\n\t/**\r\n\t * 是否有uv变化矩阵\r\n\t */\r\n    useUvTransform: boolean = false;\r\n\r\n\t/**\r\n\t * 扩展像素,用来去除黑边 \r\n\t */\r\n    canvasPadding: number = 1;\r\n\r\n\t/**\r\n\t * 计算mesh的Bounds \r\n\t * @return \r\n\t * \r\n\t */\r\n    //TODO:coverage\r\n    getBounds(): Rectangle {\r\n        return Rectangle._getWrapRec(this.vertices);\r\n    }\r\n}\r\n\r\n\r\n","import { MeshData } from \"./MeshData\";\r\nimport { Matrix } from \"../../../maths/Matrix\";\r\nimport { Texture } from \"../../../resource/Texture\";\r\n\r\n\r\n\r\nexport class SkinMeshForGraphic extends MeshData {\r\n\r\n    //TODO:coverage\r\n    constructor() {\r\n        super();\r\n\r\n\r\n    }\r\n\t/**\r\n\t * 矩阵\r\n\t */\r\n    transform: Matrix|null;\r\n\r\n    init2(texture: Texture, ps: any[], verticles: any[], uvs: any[]): void {\r\n        if (this.transform) {\r\n            this.transform = null;\r\n        }\r\n        var _ps: any[] = ps || [0, 1, 3, 3, 1, 2];\r\n        this.texture = texture;\r\n\r\n        this.indexes = new Uint16Array(_ps);\r\n        this.vertices = new Float32Array(verticles);\r\n        this.uvs = new Float32Array(uvs);\r\n    }\r\n}\r\n\r\n\r\n","import { Templet } from \"./Templet\";\r\nimport { SlotData } from \"./SlotData\";\r\nimport { SkinSlotDisplayData } from \"./SkinSlotDisplayData\";\r\nimport { UVTools } from \"./UVTools\";\r\nimport { SkinMeshForGraphic } from \"./canvasmesh/SkinMeshForGraphic\"\r\nimport { ILaya } from \"../../../ILaya\";\r\nimport { GraphicsAni } from \"../GraphicsAni\";\r\nimport { Matrix } from \"../../maths/Matrix\";\r\nimport { Graphics } from \"../../display/Graphics\";\r\nimport { Texture } from \"../../resource/Texture\";\r\n\r\n\r\nexport class BoneSlot {\r\n\r\n\t/** 插槽名称 */\r\n\tname: string;\r\n\t/** 插槽绑定的骨骼名称 */\r\n\tparent: string;\r\n\t/** 插糟显示数据数据的名称 */\r\n\tattachmentName: string;\r\n\t/** 原始数据的索引 */\r\n\tsrcDisplayIndex: number = -1;\r\n\t/** 判断对象是否是原对象 */\r\n\ttype: string = \"src\";\r\n\t/** 模板的指针 */\r\n\ttemplet: Templet;\r\n\t/** 当前插槽对应的数据 */\r\n\tcurrSlotData: SlotData;\r\n\t/** 当前插槽显示的纹理 */\r\n\tcurrTexture: Texture|null;\r\n\t/** 显示对象对应的数据 */\r\n\tcurrDisplayData: SkinSlotDisplayData|null;\r\n\r\n\t/** 显示皮肤的索引 */\r\n\tdisplayIndex: number = -1;\r\n\t/** @private */\r\n\toriginalIndex: number = -1;\r\n\r\n\t/** 用户自定义的皮肤 */\r\n\t/**@internal */\r\n\tprivate _diyTexture: Texture|null;\r\n\t/**@internal */\r\n\tprivate _parentMatrix: Matrix;\t// 指向了骨骼的resultMatrix\r\n\t/**@internal */\r\n\tprivate _resultMatrix: Matrix;\t// 只有不使用缓冲时才使用\r\n\t/** @internal 索引替换表 */\r\n\tprivate _replaceDic: any = {};\r\n\t/** @internal 当前diyTexture的动画纹理 */\r\n\tprivate _curDiyUV: any[];\r\n\r\n\t/** @internal 实时模式下，复用使用 */\r\n\tprivate _skinSprite: any;\r\n\t/** @private 变形动画数据 */\r\n\tdeformData: any[];\r\n\r\n\t/**\r\n\t * 设置要显示的插槽数据\r\n\t * @param\tslotData\r\n\t * @param\tdisIndex\r\n\t * @param\tfreshIndex 是否重置纹理\r\n\t */\r\n\tshowSlotData(slotData: SlotData, freshIndex: boolean = true): void {\r\n\t\tthis.currSlotData = slotData;\r\n\t\tif (freshIndex)\r\n\t\t\tthis.displayIndex = this.srcDisplayIndex;\r\n\t\tthis.currDisplayData = null;\r\n\t\tthis.currTexture = null;\r\n\t}\r\n\r\n\t/**\r\n\t * 通过名字显示指定对象\r\n\t * @param\tname\r\n\t */\r\n\tshowDisplayByName(name: string): void {\r\n\t\tif (this.currSlotData) {\r\n\t\t\tthis.showDisplayByIndex(this.currSlotData.getDisplayByName(name));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 替换贴图名\r\n\t * @param\ttarName 要替换的贴图名\r\n\t * @param\tnewName 替换后的贴图名\r\n\t */\r\n\treplaceDisplayByName(tarName: string, newName: string): void {\r\n\t\tif (!this.currSlotData) return;\r\n\t\tvar preIndex: number;\r\n\t\tpreIndex = this.currSlotData.getDisplayByName(tarName);\r\n\t\tvar newIndex: number;\r\n\t\tnewIndex = this.currSlotData.getDisplayByName(newName);\r\n\t\tthis.replaceDisplayByIndex(preIndex, newIndex);\r\n\t}\r\n\r\n\t/**\r\n\t * 替换贴图索引\r\n\t * @param\ttarIndex 要替换的索引\r\n\t * @param\tnewIndex 替换后的索引\r\n\t */\r\n\treplaceDisplayByIndex(tarIndex: number, newIndex: number): void {\r\n\t\tif (!this.currSlotData) return;\r\n\t\tthis._replaceDic[tarIndex] = newIndex;\r\n\t\tif (this.originalIndex == tarIndex) {\r\n\t\t\tthis.showDisplayByIndex(tarIndex);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 指定显示对象\r\n\t * @param\tindex\r\n\t */\r\n\tshowDisplayByIndex(index: number): void {\r\n\t\tthis.originalIndex = index;\r\n\t\tif (this._replaceDic[index] != null) index = this._replaceDic[index];\r\n\t\tif (this.currSlotData && index > -1 && index < this.currSlotData.displayArr.length) {\r\n\t\t\tthis.displayIndex = index;\r\n\t\t\tthis.currDisplayData = this.currSlotData.displayArr[index];\r\n\t\t\tif (this.currDisplayData) {\r\n\t\t\t\tvar tName: string = this.currDisplayData.name;\r\n\t\t\t\tthis.currTexture = this.templet.getTexture(tName);\r\n\t\t\t\tif (this.currTexture && this.currDisplayData.type == 0 && this.currDisplayData.uvs) {\r\n\t\t\t\t\tthis.currTexture = this.currDisplayData.createTexture(this.currTexture);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.displayIndex = -1;\r\n\t\t\tthis.currDisplayData = null;\r\n\t\t\tthis.currTexture = null;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * 替换皮肤\r\n\t * @param\t_texture\r\n\t */\r\n\treplaceSkin(_texture: Texture): void {\r\n\t\tthis._diyTexture = _texture;\r\n\t\tif (this._curDiyUV) this._curDiyUV.length = 0;\r\n\t\tif (this.currDisplayData && this._diyTexture == this.currDisplayData.texture) {\r\n\t\t\tthis._diyTexture = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 保存父矩阵的索引\r\n\t * @param\tparentMatrix\r\n\t */\r\n\t//TODO:coverage\r\n\tsetParentMatrix(parentMatrix: Matrix): void {\r\n\t\tthis._parentMatrix = parentMatrix;\r\n\t}\r\n\r\n\tprivate _mVerticleArr: any[];\r\n\tprivate static _tempMatrix: Matrix = new Matrix();\r\n\r\n\t//TODO:coverage\r\n\tstatic createSkinMesh(): any {\r\n\t\treturn new SkinMeshForGraphic();\r\n\t}\r\n\r\n\t//TODO:coverage\r\n\tprivate static isSameArr(arrA: any[], arrB: any[]): boolean {\r\n\t\tif (arrA.length != arrB.length) return false;\r\n\t\tvar i: number, len: number;\r\n\t\tlen = arrA.length;\r\n\t\tfor (i = 0; i < len; i++) {\r\n\t\t\tif (arrA[i] != arrB[i]) return false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\t/**@internal */\r\n\tprivate static _tempResultMatrix: Matrix = new Matrix();\r\n\t/**@internal */\t\r\n\tprivate _preGraphicVerticle: any[];\r\n\r\n\t//TODO:coverage\r\n\tprivate getSaveVerticle(tArr: any[]): any[] {\r\n\t\tif (BoneSlot.useSameMatrixAndVerticle && this._preGraphicVerticle && BoneSlot.isSameArr(tArr, this._preGraphicVerticle)) {\r\n\t\t\ttArr = this._preGraphicVerticle;\r\n\t\t} else {\r\n\t\t\ttArr = ILaya.Utils.copyArray([], tArr);\r\n\t\t\tthis._preGraphicVerticle = tArr;\r\n\t\t}\r\n\t\treturn tArr;\r\n\t}\r\n\r\n\t//TODO:coverage\r\n\tstatic isSameMatrix(mtA: Matrix, mtB: Matrix): boolean {\r\n\t\treturn mtA.a == mtB.a && mtA.b == mtB.b && mtA.c == mtB.c && mtA.d == mtB.d && Math.abs(mtA.tx - mtB.tx) < 0.00001 && Math.abs(mtA.ty - mtB.ty) < 0.00001;\r\n\t}\r\n\r\n\tprivate _preGraphicMatrix: Matrix;\r\n\r\n\tprivate static useSameMatrixAndVerticle: boolean = true;\r\n\r\n\t//TODO:coverage\r\n\tprivate getSaveMatrix(tResultMatrix: Matrix): Matrix {\r\n\t\tif (BoneSlot.useSameMatrixAndVerticle && this._preGraphicMatrix && BoneSlot.isSameMatrix(tResultMatrix, this._preGraphicMatrix)) {\r\n\t\t\ttResultMatrix = this._preGraphicMatrix;\r\n\t\t} else {\r\n\t\t\tvar newMatrix: Matrix = tResultMatrix.clone();\r\n\t\t\ttResultMatrix = newMatrix;\r\n\t\t\tthis._preGraphicMatrix = tResultMatrix;\r\n\t\t}\r\n\t\treturn tResultMatrix;\r\n\t}\r\n\t/**\r\n\t * 把纹理画到Graphics上\r\n\t * @param\tgraphics\r\n\t * @param\tnoUseSave   不使用共享的矩阵对象 _tempResultMatrix，只有实时计算的时候才设置为true\r\n\t */\r\n\tdraw(graphics: GraphicsAni, boneMatrixArray: any[], noUseSave: boolean = false, alpha: number = 1): void {\r\n\t\tif ((this._diyTexture == null && this.currTexture == null) || this.currDisplayData == null) {\r\n\t\t\tif (!(this.currDisplayData && this.currDisplayData.type == 3)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar tTexture = this.currTexture;\r\n\t\tif (this._diyTexture) tTexture = this._diyTexture;\r\n\t\tvar tSkinSprite: any;\r\n\t\tswitch (this.currDisplayData.type) {\r\n\t\t\tcase 0:\r\n\t\t\t\tif (graphics) {\r\n\t\t\t\t\tvar tCurrentMatrix = this.getDisplayMatrix();\r\n\t\t\t\t\tif (this._parentMatrix) {\r\n\t\t\t\t\t\tvar tRotateKey: boolean = false;\t\t// 是否有旋转\r\n\t\t\t\t\t\tif (tCurrentMatrix) {\r\n\t\t\t\t\t\t\tMatrix.mul(tCurrentMatrix, this._parentMatrix, Matrix.TEMP);\r\n\t\t\t\t\t\t\tvar tResultMatrix: Matrix;\r\n\t\t\t\t\t\t\tif (noUseSave) {\r\n\t\t\t\t\t\t\t\tif (this._resultMatrix == null) this._resultMatrix = new Matrix();\r\n\t\t\t\t\t\t\t\ttResultMatrix = this._resultMatrix;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t//tResultMatrix = new Matrix();\r\n\t\t\t\t\t\t\t\ttResultMatrix = BoneSlot._tempResultMatrix;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (this._diyTexture && this.currDisplayData.uvs) {\r\n\t\t\t\t\t\t\t\tvar tTestMatrix: Matrix = BoneSlot._tempMatrix;\r\n\t\t\t\t\t\t\t\ttTestMatrix.identity();\r\n\t\t\t\t\t\t\t\t//判断是否上下反转。\r\n\t\t\t\t\t\t\t\tif (this.currDisplayData.uvs[1] > this.currDisplayData.uvs[5]) {\r\n\t\t\t\t\t\t\t\t\ttTestMatrix.d = -1;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t//判断是否旋转\r\n\t\t\t\t\t\t\t\tif (this.currDisplayData.uvs[0] > this.currDisplayData.uvs[4]\r\n\t\t\t\t\t\t\t\t\t&& this.currDisplayData.uvs[1] > this.currDisplayData.uvs[5]) {\r\n\t\t\t\t\t\t\t\t\ttRotateKey = true;\r\n\t\t\t\t\t\t\t\t\ttTestMatrix.rotate(-Math.PI / 2);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tMatrix.mul(tTestMatrix, Matrix.TEMP, tResultMatrix);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tMatrix.TEMP.copyTo(tResultMatrix);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (!noUseSave) {\r\n\t\t\t\t\t\t\t\ttResultMatrix = this.getSaveMatrix(tResultMatrix);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\ttResultMatrix._checkTransform();\r\n\t\t\t\t\t\t\tif (tRotateKey) {\r\n\t\t\t\t\t\t\t\tgraphics.drawTexture(tTexture, -this.currDisplayData.height / 2, -this.currDisplayData.width / 2, this.currDisplayData.height, this.currDisplayData.width, tResultMatrix, alpha);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tgraphics.drawTexture(tTexture, -this.currDisplayData.width / 2, -this.currDisplayData.height / 2, this.currDisplayData.width, this.currDisplayData.height, tResultMatrix, alpha);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1:\r\n\t\t\t\tif (noUseSave) {\r\n\t\t\t\t\tif (this._skinSprite == null) {\r\n\t\t\t\t\t\tthis._skinSprite = BoneSlot.createSkinMesh();\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttSkinSprite = this._skinSprite;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttSkinSprite = BoneSlot.createSkinMesh();\r\n\t\t\t\t}\r\n\t\t\t\tif (tSkinSprite == null) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tvar tIBArray: any[];\r\n\t\t\t\tif (this.currDisplayData.bones == null) {\r\n\t\t\t\t\tvar tVertices: any[] = this.currDisplayData.weights;\r\n\t\t\t\t\tif (this.deformData) {\r\n\t\t\t\t\t\ttVertices = this.deformData;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar tUVs: any[];\r\n\t\t\t\t\tif (this._diyTexture) {\r\n\t\t\t\t\t\tif (!this._curDiyUV) {\r\n\t\t\t\t\t\t\tthis._curDiyUV = [];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (this._curDiyUV.length == 0) {\r\n\t\t\t\t\t\t\tthis._curDiyUV = UVTools.getRelativeUV(this.currTexture.uv, this.currDisplayData.uvs, this._curDiyUV);\r\n\t\t\t\t\t\t\tthis._curDiyUV = UVTools.getAbsoluteUV(this._diyTexture.uv, this._curDiyUV, this._curDiyUV);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\ttUVs = this._curDiyUV;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttUVs = this.currDisplayData.uvs;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis._mVerticleArr = tVertices;\r\n\t\t\t\t\tvar tTriangleNum: number = this.currDisplayData.triangles.length / 3;\r\n\r\n\t\t\t\t\ttIBArray = this.currDisplayData.triangles;\r\n\r\n\r\n\t\t\t\t\tif (this.deformData) {\r\n\t\t\t\t\t\tif (!noUseSave) {\r\n\t\t\t\t\t\t\tthis._mVerticleArr = this.getSaveVerticle(this._mVerticleArr);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttSkinSprite.init2(tTexture, tIBArray, this._mVerticleArr, tUVs);\r\n\r\n\t\t\t\t\tvar tCurrentMatrix2 = this.getDisplayMatrix();\r\n\t\t\t\t\tif (this._parentMatrix) {\r\n\t\t\t\t\t\tif (tCurrentMatrix2) {\r\n\t\t\t\t\t\t\tMatrix.mul(tCurrentMatrix2, this._parentMatrix, Matrix.TEMP);\r\n\t\t\t\t\t\t\tvar tResultMatrix2: Matrix;\r\n\t\t\t\t\t\t\tif (noUseSave) {\r\n\t\t\t\t\t\t\t\tif (this._resultMatrix == null) this._resultMatrix = new Matrix();\r\n\t\t\t\t\t\t\t\ttResultMatrix2 = this._resultMatrix;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\ttResultMatrix2 = BoneSlot._tempResultMatrix;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tMatrix.TEMP.copyTo(tResultMatrix2);\r\n\r\n\t\t\t\t\t\t\tif (!noUseSave) {\r\n\t\t\t\t\t\t\t\ttResultMatrix2 = this.getSaveMatrix(tResultMatrix2);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\ttSkinSprite.transform = tResultMatrix2;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.skinMesh(boneMatrixArray, tSkinSprite);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgraphics.drawSkin(tSkinSprite, alpha);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tif (noUseSave) {\r\n\t\t\t\t\tif (this._skinSprite == null) {\r\n\t\t\t\t\t\tthis._skinSprite = BoneSlot.createSkinMesh();\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttSkinSprite = this._skinSprite;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttSkinSprite = BoneSlot.createSkinMesh();\r\n\t\t\t\t}\r\n\t\t\t\tif (tSkinSprite == null) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tthis.skinMesh(boneMatrixArray, tSkinSprite);\r\n\t\t\t\tgraphics.drawSkin(tSkinSprite, alpha);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**@internal */ \r\n\tprivate static _tempVerticleArr: any[] = [];\r\n\t/**\r\n\t * 显示蒙皮动画\r\n\t * @param\tboneMatrixArray 当前帧的骨骼矩阵\r\n\t */\r\n\tprivate skinMesh(boneMatrixArray: any[], skinSprite: any): void {\r\n\t\tvar tTexture: Texture = this.currTexture;\r\n\t\tvar tBones: any[] = this.currDisplayData.bones;\r\n\t\tvar tUvs: any[];\r\n\t\tif (this._diyTexture) {\r\n\t\t\ttTexture = this._diyTexture;\r\n\t\t\tif (!this._curDiyUV) {\r\n\t\t\t\tthis._curDiyUV = [];\r\n\t\t\t}\r\n\t\t\tif (this._curDiyUV.length == 0) {\r\n\t\t\t\tthis._curDiyUV = UVTools.getRelativeUV(this.currTexture.uv, this.currDisplayData.uvs, this._curDiyUV);\r\n\t\t\t\tthis._curDiyUV = UVTools.getAbsoluteUV(this._diyTexture.uv, this._curDiyUV, this._curDiyUV);\r\n\t\t\t}\r\n\t\t\ttUvs = this._curDiyUV;\r\n\t\t} else {\r\n\t\t\ttUvs = this.currDisplayData.uvs;\r\n\t\t}\r\n\r\n\t\tvar tWeights: any[] = this.currDisplayData.weights;\r\n\t\tvar tTriangles: any[] = this.currDisplayData.triangles;\r\n\t\tvar tIBArray: any[];\r\n\t\tvar tRx: number = 0;\r\n\t\tvar tRy: number = 0;\r\n\t\tvar nn: number = 0;\r\n\t\tvar tMatrix: Matrix;\r\n\t\tvar tX: number;\r\n\t\tvar tY: number;\r\n\t\tvar tB: number = 0;\r\n\t\tvar tWeight: number = 0;\r\n\t\tvar tVertices: any[];\r\n\t\tvar i: number = 0, j: number = 0, n: number = 0;\r\n\t\tvar tRed: number = 1;\r\n\t\tvar tGreed: number = 1;\r\n\t\tvar tBlue: number = 1;\r\n\t\tBoneSlot._tempVerticleArr.length = 0;\r\n\t\ttVertices = BoneSlot._tempVerticleArr;\r\n\t\tif (this.deformData && this.deformData.length > 0) {\r\n\t\t\tvar f: number = 0;\r\n\t\t\tfor (i = 0, n = tBones.length; i < n;) {\r\n\t\t\t\tnn = tBones[i++] + i;\r\n\t\t\t\ttRx = 0, tRy = 0;\r\n\t\t\t\tfor (; i < nn; i++) {\r\n\t\t\t\t\ttMatrix = boneMatrixArray[tBones[i]]\r\n\t\t\t\t\ttX = tWeights[tB] + this.deformData[f++];\r\n\t\t\t\t\ttY = tWeights[tB + 1] + this.deformData[f++];\r\n\t\t\t\t\ttWeight = tWeights[tB + 2];\r\n\t\t\t\t\ttRx += (tX * tMatrix.a + tY * tMatrix.c + tMatrix.tx) * tWeight;\r\n\t\t\t\t\ttRy += (tX * tMatrix.b + tY * tMatrix.d + tMatrix.ty) * tWeight;\r\n\t\t\t\t\ttB += 3;\r\n\t\t\t\t}\r\n\t\t\t\ttVertices.push(tRx, tRy);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tfor (i = 0, n = tBones.length; i < n;) {\r\n\t\t\t\tnn = tBones[i++] + i;\r\n\t\t\t\ttRx = 0, tRy = 0;\r\n\t\t\t\tfor (; i < nn; i++) {\r\n\t\t\t\t\ttMatrix = boneMatrixArray[tBones[i]]\r\n\t\t\t\t\ttX = tWeights[tB];\r\n\t\t\t\t\ttY = tWeights[tB + 1];\r\n\t\t\t\t\ttWeight = tWeights[tB + 2];\r\n\t\t\t\t\ttRx += (tX * tMatrix.a + tY * tMatrix.c + tMatrix.tx) * tWeight;\r\n\t\t\t\t\ttRy += (tX * tMatrix.b + tY * tMatrix.d + tMatrix.ty) * tWeight;\r\n\t\t\t\t\ttB += 3;\r\n\t\t\t\t}\r\n\t\t\t\ttVertices.push(tRx, tRy);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._mVerticleArr = tVertices;\r\n\t\ttIBArray = tTriangles;\r\n\t\tthis._mVerticleArr = this.getSaveVerticle(this._mVerticleArr);\r\n\t\tskinSprite.init2(tTexture, tIBArray, this._mVerticleArr, tUvs);\r\n\t}\r\n\r\n\t/**\r\n\t * 画骨骼的起始点，方便调试\r\n\t * @param\tgraphics\r\n\t */\r\n\tdrawBonePoint(graphics: Graphics): void {\r\n\t\tif (graphics && this._parentMatrix) {\r\n\t\t\tgraphics.drawCircle(this._parentMatrix.tx, this._parentMatrix.ty, 5, \"#ff0000\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 得到显示对象的矩阵\r\n\t * @return\r\n\t */\r\n\t//TODO:coverage\r\n\tprivate getDisplayMatrix(): Matrix|null {\r\n\t\tif (this.currDisplayData) {\r\n\t\t\treturn this.currDisplayData.transform.getMatrix();\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * 得到插糟的矩阵\r\n\t * @return\r\n\t */\r\n\tgetMatrix(): Matrix {\r\n\t\treturn this._resultMatrix;\r\n\t}\r\n\r\n\t/**\r\n\t * 用原始数据拷贝出一个\r\n\t * @return\r\n\t */\r\n\tcopy(): BoneSlot {\r\n\t\tvar tBoneSlot: BoneSlot = new BoneSlot();\r\n\t\ttBoneSlot.type = \"copy\";\r\n\t\ttBoneSlot.name = this.name;\r\n\t\ttBoneSlot.attachmentName = this.attachmentName;\r\n\t\ttBoneSlot.srcDisplayIndex = this.srcDisplayIndex;\r\n\t\ttBoneSlot.parent = this.parent;\r\n\t\ttBoneSlot.displayIndex = this.displayIndex;\r\n\t\ttBoneSlot.templet = this.templet;\r\n\t\ttBoneSlot.currSlotData = this.currSlotData;\r\n\t\ttBoneSlot.currTexture = this.currTexture;\r\n\t\ttBoneSlot.currDisplayData = this.currDisplayData;\r\n\t\treturn tBoneSlot;\r\n\t}\r\n}\r\n\r\n","import { DeformSlotData } from \"./DeformSlotData\";\r\n/**\r\n * @internal\r\n */\r\nexport class DeformAniData {\r\n\r\n\tskinName: string;\r\n\tdeformSlotDataList: DeformSlotData[] = [];\r\n\r\n\t//TODO:coverage\r\n\tconstructor() {\r\n\r\n\t}\r\n\r\n}\r\n\r\n\r\n","import { DeformSlotDisplayData } from \"./DeformSlotDisplayData\";\r\n/**\r\n * @internal\r\n */\r\nexport class DeformSlotData {\r\n\r\n\tdeformSlotDisplayList: DeformSlotDisplayData[] = [];\r\n\r\n\t//TODO:coverage\r\n\tconstructor() {\r\n\r\n\t}\r\n\r\n}\r\n\r\n\r\n","import { BoneSlot } from \"./BoneSlot\";\r\n/**\r\n * @internal\r\n */\r\nexport class DeformSlotDisplayData {\r\n\r\n\tboneSlot: BoneSlot;\r\n\tslotIndex: number = -1;\r\n\tattachment: string;\r\n\ttimeList: number[] = [];\r\n\tvectices: any[][] = [];\r\n\ttweenKeyList: boolean[] = [];\r\n\r\n\tdeformData: any[];\r\n\tframeIndex: number = 0;\r\n\r\n\t//TODO:coverage\r\n\tconstructor() {\r\n\r\n\t}\r\n\r\n\tprivate binarySearch1(values: number[], target: number): number {\r\n\t\tvar low: number = 0;\r\n\t\tvar high: number = values.length - 2;\r\n\t\tif (high == 0)\r\n\t\t\treturn 1;\r\n\t\tvar current: number = high >>> 1;\r\n\t\twhile (true) {\r\n\t\t\tif (values[Math.floor(current + 1)] <= target)\r\n\t\t\t\tlow = current + 1;\r\n\t\t\telse\r\n\t\t\t\thigh = current;\r\n\t\t\tif (low == high)\r\n\t\t\t\treturn low + 1;\r\n\t\t\tcurrent = (low + high) >>> 1;\r\n\t\t}\r\n\t\treturn 0; // Can't happen.\r\n\t}\r\n\r\n\t//TODO:coverage\r\n\tapply(time: number, boneSlot: BoneSlot, alpha: number = 1): void {\r\n\t\ttime += 0.05;\r\n\t\tif (this.timeList.length <= 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar i = 0;\r\n\t\tvar tTime = this.timeList[0];\r\n\t\tif (time < tTime) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar tVertexCount = this.vectices[0].length;\r\n\t\tvar tVertices: any[] = [];\r\n\t\tvar tFrameIndex = this.binarySearch1(this.timeList, time);\r\n\t\tthis.frameIndex = tFrameIndex;\r\n\t\tif (time >= this.timeList[this.timeList.length - 1]) {\r\n\t\t\tvar lastVertices: any[] = this.vectices[this.vectices.length - 1];\r\n\r\n\t\t\tif (alpha < 1) {\r\n\t\t\t\tfor (i = 0; i < tVertexCount; i++) {\r\n\t\t\t\t\ttVertices[i] += (lastVertices[i] - tVertices[i]) * alpha;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tfor (i = 0; i < tVertexCount; i++) {\r\n\t\t\t\t\ttVertices[i] = lastVertices[i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.deformData = tVertices;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//var tTweenKey: boolean = this.tweenKeyList[this.frameIndex];\r\n\t\tvar tPrevVertices = this.vectices[this.frameIndex - 1];\r\n\t\tvar tNextVertices = this.vectices[this.frameIndex];\r\n\t\tvar tPreFrameTime = this.timeList[this.frameIndex - 1];\r\n\t\tvar tFrameTime = this.timeList[this.frameIndex];\r\n\r\n\t\tif (this.tweenKeyList[tFrameIndex - 1]) {\r\n\t\t\talpha = (time - tPreFrameTime) / (tFrameTime - tPreFrameTime);\r\n\t\t} else {\r\n\t\t\talpha = 0;\r\n\t\t}\r\n\r\n\t\tvar tPrev: number;\r\n\t\tfor (i = 0; i < tVertexCount; i++) {\r\n\t\t\ttPrev = tPrevVertices[i];\r\n\t\t\ttVertices[i] = tPrev + (tNextVertices[i] - tPrev) * alpha;\r\n\t\t}\r\n\t\tthis.deformData = tVertices;\r\n\t}\r\n\r\n}\r\n\r\n\r\n","/**\r\n * @internal\r\n */\r\nexport class DrawOrderData {\r\n\ttime: number;\r\n\tdrawOrder: number[] = [];\r\n\r\n\t//TODO:coverage\r\n\tconstructor() {\r\n\t}\r\n}\r\n\r\n","\r\nexport class EventData {\r\n\r\n\tname: string;\r\n\tintValue: number;\r\n\tfloatValue: number;\r\n\tstringValue: string;\r\n\taudioValue: string;\r\n\ttime: number;\r\n\r\n\tconstructor() {\r\n\r\n\t}\r\n\r\n}\r\n\r\n\r\n","import { IkConstraintData } from \"./IkConstraintData\";\r\nimport { Bone } from \"./Bone\";\r\nimport { Matrix } from \"../../maths/Matrix\";\r\nimport { Sprite } from \"../../display/Sprite\";\r\nimport { ILaya } from \"../../../ILaya\";\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class IkConstraint {\r\n\r\n\t/**@internal */\r\n\tprivate _targetBone: Bone;\r\n\t/**@internal */\r\n\tprivate _bones: Bone[];\r\n\t/**@internal */\r\n\t//private _data: IkConstraintData;\r\n\tname: string;\r\n\tmix: number;\r\n\tbendDirection: number;\r\n\tisSpine: boolean = true;\r\n\tstatic radDeg: number = 180 / Math.PI;\r\n\tstatic degRad: number = Math.PI / 180;\r\n\t/**@internal */\r\n\tprivate static _tempMatrix: Matrix = new Matrix();\r\n\r\n\t//TODO:coverage\r\n\tconstructor(data: IkConstraintData, bones: Bone[]) {\r\n\t\t//this._data = data;\r\n\t\tthis._targetBone = bones[data.targetBoneIndex];\r\n\t\tthis.isSpine = data.isSpine;\r\n\t\tif (this._bones == null) this._bones = [];\r\n\t\tthis._bones.length = 0;\r\n\t\tfor (var i: number = 0, n: number = data.boneIndexs.length; i < n; i++) {\r\n\t\t\tthis._bones.push(bones[data.boneIndexs[i]]);\r\n\t\t}\r\n\t\tthis.name = data.name;\r\n\t\tthis.mix = data.mix;\r\n\t\tthis.bendDirection = data.bendDirection;\r\n\t}\r\n\r\n\tapply(): void {\r\n\t\tswitch (this._bones.length) {\r\n\t\t\tcase 1:\r\n\t\t\t\tthis._applyIk1(this._bones[0], this._targetBone.resultMatrix.tx, this._targetBone.resultMatrix.ty, this.mix);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tif (this.isSpine) {\r\n\t\t\t\t\tthis._applyIk2(this._bones[0], this._bones[1], this._targetBone.resultMatrix.tx, this._targetBone.resultMatrix.ty, this.bendDirection, this.mix);// tIkConstraintData.mix);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._applyIk3(this._bones[0], this._bones[1], this._targetBone.resultMatrix.tx, this._targetBone.resultMatrix.ty, this.bendDirection, this.mix);// tIkConstraintData.mix);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t//TODO:coverage\r\n\t/**@internal */\r\n\tprivate _applyIk1(bone: Bone, targetX: number, targetY: number, alpha: number): void {\r\n\t\tvar pp: Bone = bone.parentBone;\r\n\t\tvar id: number = 1 / (pp.resultMatrix.a * pp.resultMatrix.d - pp.resultMatrix.b * pp.resultMatrix.c);\r\n\t\tvar x: number = targetX - pp.resultMatrix.tx;\r\n\t\tvar y: number = targetY - pp.resultMatrix.ty;\r\n\t\tvar tx: number = (x * pp.resultMatrix.d - y * pp.resultMatrix.c) * id - bone.transform.x;\r\n\t\tvar ty: number = (y * pp.resultMatrix.a - x * pp.resultMatrix.b) * id - bone.transform.y;\r\n\t\tvar rotationIK: number = Math.atan2(ty, tx) * IkConstraint.radDeg - 0 - bone.transform.skX;\r\n\t\tif (bone.transform.scX < 0) rotationIK += 180;\r\n\t\tif (rotationIK > 180)\r\n\t\t\trotationIK -= 360;\r\n\t\telse if (rotationIK < -180) rotationIK += 360;\r\n\t\tbone.transform.skX = bone.transform.skY = bone.transform.skX + rotationIK * alpha;\r\n\t\tbone.update();\r\n\t}\r\n\r\n\t//debug相关代码\r\n\t/**@internal */\r\n\tprivate _sp: Sprite;\r\n\tprivate isDebug: boolean = false;\r\n\r\n\t//TODO:coverage\r\n\tupdatePos(x: number, y: number): void {\r\n\t\tif (this._sp) {\r\n\t\t\tthis._sp.pos(x, y);\r\n\t\t}\r\n\t}\r\n\r\n\t//TODO:coverage\r\n\t/**@internal */\r\n\tprivate _applyIk2(parent: Bone, child: Bone, targetX: number, targetY: number, bendDir: number, alpha: number): void {\r\n\t\tif (alpha == 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t//spine 双骨骼ik计算\r\n\t\tvar px: number = parent.resultTransform.x, py: number = parent.resultTransform.y;\r\n\t\tvar psx: number = parent.transform.scX, psy: number = parent.transform.scY;\r\n\t\tvar csx: number = child.transform.scX;\r\n\t\tvar os1: number, os2: number, s2: number;\r\n\t\tif (psx < 0) {\r\n\t\t\tpsx = -psx;\r\n\t\t\tos1 = 180;\r\n\t\t\ts2 = -1;\r\n\t\t} else {\r\n\t\t\tos1 = 0;\r\n\t\t\ts2 = 1;\r\n\t\t}\r\n\t\tif (psy < 0) {\r\n\t\t\tpsy = -psy;\r\n\t\t\ts2 = -s2;\r\n\t\t}\r\n\t\tif (csx < 0) {\r\n\t\t\tcsx = -csx;\r\n\t\t\tos2 = 180;\r\n\t\t} else {\r\n\t\t\tos2 = 0\r\n\t\t}\r\n\r\n\t\tvar cx: number = child.resultTransform.x, cy: number, cwx: number, cwy: number;\r\n\t\tvar a: number = parent.resultMatrix.a, b: number = parent.resultMatrix.c;\r\n\t\tvar c: number = parent.resultMatrix.b, d: number = parent.resultMatrix.d;\r\n\t\tvar u: boolean = Math.abs(psx - psy) <= 0.0001;\r\n\t\t//求子骨骼的世界坐标点\r\n\t\tif (!u) {\r\n\t\t\tcy = 0;\r\n\t\t\tcwx = a * cx + parent.resultMatrix.tx;\r\n\t\t\tcwy = c * cx + parent.resultMatrix.ty;\r\n\t\t} else {\r\n\t\t\tcy = child.resultTransform.y;\r\n\t\t\tcwx = a * cx + b * cy + parent.resultMatrix.tx;\r\n\t\t\tcwy = c * cx + d * cy + parent.resultMatrix.ty;\r\n\t\t}\r\n\t\t//cwx,cwy为子骨骼应该在的世界坐标\r\n\r\n\t\tif (this.isDebug) {\r\n\t\t\tif (!this._sp) {\r\n\t\t\t\tthis._sp = new Sprite();\r\n\t\t\t\tILaya.stage.addChild(this._sp);\r\n\t\t\t}\r\n\t\t\tthis._sp.graphics.clear();\r\n\t\t\tthis._sp.graphics.drawCircle(targetX, targetY, 15, \"#ffff00\");\r\n\r\n\t\t\tthis._sp.graphics.drawCircle(cwx, cwy, 15, \"#ff00ff\");\r\n\t\t}\r\n\t\tparent.setRotation(Math.atan2(cwy - parent.resultMatrix.ty, cwx - parent.resultMatrix.tx));\r\n\t\tvar pp: Bone = parent.parentBone;\r\n\t\ta = pp.resultMatrix.a;\r\n\t\tb = pp.resultMatrix.c;\r\n\t\tc = pp.resultMatrix.b;\r\n\t\td = pp.resultMatrix.d;\r\n\t\t//逆因子\r\n\t\tvar id: number = 1 / (a * d - b * c);\r\n\t\t//求得IK中的子骨骼角度向量\r\n\t\tvar x: number = targetX - pp.resultMatrix.tx, y: number = targetY - pp.resultMatrix.ty;\r\n\t\tvar tx: number = (x * d - y * b) * id - px;\r\n\t\tvar ty: number = (y * a - x * c) * id - py;\r\n\r\n\t\t//求得子骨骼的角度向量\r\n\t\tx = cwx - pp.resultMatrix.tx;\r\n\t\ty = cwy - pp.resultMatrix.ty;\r\n\t\tvar dx: number = (x * d - y * b) * id - px;\r\n\t\tvar dy: number = (y * a - x * c) * id - py;\r\n\t\t//子骨骼的实际长度\r\n\t\tvar l1: number = Math.sqrt(dx * dx + dy * dy);\r\n\t\t//子骨骼的长度\r\n\t\tvar l2: number = child.length * csx;\r\n\t\tvar a1: number, a2: number;\r\n\t\tif (u) {\r\n\t\t\tl2 *= psx;\r\n\t\t\t//求IK的角度\r\n\t\t\tvar cos: number = (tx * tx + ty * ty - l1 * l1 - l2 * l2) / (2 * l1 * l2);\r\n\t\t\tif (cos < -1)\r\n\t\t\t\tcos = -1;\r\n\t\t\telse if (cos > 1) cos = 1;\r\n\t\t\ta2 = Math.acos(cos) * bendDir;\r\n\t\t\ta = l1 + l2 * cos;\r\n\t\t\tb = l2 * Math.sin(a2);\r\n\t\t\ta1 = Math.atan2(ty * a - tx * b, tx * a + ty * b);\r\n\t\t} else {\r\n\t\t\ta = psx * l2;\r\n\t\t\tb = psy * l2;\r\n\t\t\tvar aa: number = a * a, bb: number = b * b, dd: number = tx * tx + ty * ty, ta: number = Math.atan2(ty, tx);\r\n\t\t\tc = bb * l1 * l1 + aa * dd - aa * bb;\r\n\t\t\tvar c1: number = -2 * bb * l1, c2: number = bb - aa;\r\n\t\t\td = c1 * c1 - 4 * c2 * c;\r\n\t\t\tif (d > 0) {\r\n\t\t\t\tvar q: number = Math.sqrt(d);\r\n\t\t\t\tif (c1 < 0) q = -q;\r\n\t\t\t\tq = -(c1 + q) / 2;\r\n\t\t\t\tvar r0: number = q / c2, r1: number = c / q;\r\n\t\t\t\tvar r: number = Math.abs(r0) < Math.abs(r1) ? r0 : r1;\r\n\t\t\t\tif (r * r <= dd) {\r\n\t\t\t\t\ty = Math.sqrt(dd - r * r) * bendDir;\r\n\t\t\t\t\ta1 = ta - Math.atan2(y, r);\r\n\t\t\t\t\ta2 = Math.atan2(y / psy, (r - l1) / psx);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tvar minAngle: number = 0, minDist: number = Number.MAX_VALUE, minX: number = 0, minY: number = 0;\r\n\t\t\tvar maxAngle: number = 0, maxDist: number = 0, maxX: number = 0, maxY: number = 0;\r\n\t\t\tx = l1 + a;\r\n\t\t\td = x * x;\r\n\t\t\tif (d > maxDist) {\r\n\t\t\t\tmaxAngle = 0;\r\n\t\t\t\tmaxDist = d;\r\n\t\t\t\tmaxX = x;\r\n\t\t\t}\r\n\t\t\tx = l1 - a;\r\n\t\t\td = x * x;\r\n\t\t\tif (d < minDist) {\r\n\t\t\t\tminAngle = Math.PI;\r\n\t\t\t\tminDist = d;\r\n\t\t\t\tminX = x;\r\n\t\t\t}\r\n\t\t\tvar angle: number = Math.acos(-a * l1 / (aa - bb));\r\n\t\t\tx = a * Math.cos(angle) + l1;\r\n\t\t\ty = b * Math.sin(angle);\r\n\t\t\td = x * x + y * y;\r\n\t\t\tif (d < minDist) {\r\n\t\t\t\tminAngle = angle;\r\n\t\t\t\tminDist = d;\r\n\t\t\t\tminX = x;\r\n\t\t\t\tminY = y;\r\n\t\t\t}\r\n\t\t\tif (d > maxDist) {\r\n\t\t\t\tmaxAngle = angle;\r\n\t\t\t\tmaxDist = d;\r\n\t\t\t\tmaxX = x;\r\n\t\t\t\tmaxY = y;\r\n\t\t\t}\r\n\t\t\tif (dd <= (minDist + maxDist) / 2) {\r\n\t\t\t\ta1 = ta - Math.atan2(minY * bendDir, minX);\r\n\t\t\t\ta2 = minAngle * bendDir;\r\n\t\t\t} else {\r\n\t\t\t\ta1 = ta - Math.atan2(maxY * bendDir, maxX);\r\n\t\t\t\ta2 = maxAngle * bendDir;\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar os: number = Math.atan2(cy, cx) * s2;\r\n\t\tvar rotation: number = parent.resultTransform.skX;\r\n\t\ta1 = (a1 - os) * IkConstraint.radDeg + os1 - rotation;\r\n\t\tif (a1 > 180)\r\n\t\t\ta1 -= 360;\r\n\t\telse if (a1 < -180) a1 += 360;\r\n\t\tparent.resultTransform.x = px;\r\n\t\tparent.resultTransform.y = py;\r\n\t\tparent.resultTransform.skX = parent.resultTransform.skY = rotation + a1 * alpha;\r\n\t\trotation = child.resultTransform.skX;\r\n\t\trotation = rotation % 360;\r\n\t\ta2 = ((a2 + os) * IkConstraint.radDeg - 0) * s2 + os2 - rotation;\r\n\t\tif (a2 > 180)\r\n\t\t\ta2 -= 360;\r\n\t\telse if (a2 < -180) a2 += 360;\r\n\t\tchild.resultTransform.x = cx;\r\n\t\tchild.resultTransform.y = cy;\r\n\t\tchild.resultTransform.skX = child.resultTransform.skY = child.resultTransform.skY + a2 * alpha;\r\n\t\tparent.update();\r\n\t}\r\n\r\n\t//TODO:coverage\r\n\t/**@internal */\r\n\tprivate _applyIk3(parent: Bone, child: Bone, targetX: number, targetY: number, bendDir: number, alpha: number): void {\r\n\t\tif (alpha == 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar cwx: number, cwy: number;\r\n\r\n\t\t// 龙骨双骨骼ik计算\r\n\r\n\t\tconst x: number = child.resultMatrix.a * child.length;\r\n\t\tconst y: number = child.resultMatrix.b * child.length;\r\n\r\n\t\tconst lLL: number = x * x + y * y;\r\n\t\t//child骨骼长度\r\n\t\tconst lL: number = Math.sqrt(lLL);\r\n\r\n\r\n\t\tvar parentX: number = parent.resultMatrix.tx;\r\n\t\tvar parentY: number = parent.resultMatrix.ty;\r\n\r\n\t\tvar childX: number = child.resultMatrix.tx;\r\n\t\tvar childY: number = child.resultMatrix.ty;\r\n\t\tvar dX: number = childX - parentX;\r\n\t\tvar dY: number = childY - parentY;\r\n\r\n\t\tconst lPP: number = dX * dX + dY * dY;\r\n\t\t//parent骨骼长度\r\n\t\tconst lP: number = Math.sqrt(lPP);\r\n\r\n\t\tdX = targetX - parent.resultMatrix.tx;\r\n\t\tdY = targetY - parent.resultMatrix.ty;\r\n\t\tconst lTT: number = dX * dX + dY * dY;\r\n\t\t//parent到ik的长度\r\n\t\tconst lT: number = Math.sqrt(lTT);\r\n\r\n\t\tvar ikRadianA: number = 0;\r\n\t\tif (lL + lP <= lT || lT + lL <= lP || lT + lP <= lL)//构不成三角形,被拉成直线\r\n\t\t{\r\n\t\t\tvar rate: number;\r\n\t\t\tif (lL + lP <= lT) {\r\n\t\t\t\trate = 1;\r\n\t\t\t} else {\r\n\t\t\t\trate = -1;\r\n\t\t\t}\r\n\t\t\tchildX = parentX + rate * (targetX - parentX) * lP / lT;\r\n\t\t\tchildY = parentY + rate * (targetY - parentY) * lP / lT;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst h: number = (lPP - lLL + lTT) / (2 * lTT);\r\n\t\t\tconst r: number = Math.sqrt(lPP - h * h * lTT) / lT;\r\n\t\t\tconst hX: number = parentX + (dX * h);\r\n\t\t\tconst hY: number = parentY + (dY * h);\r\n\t\t\tconst rX: number = -dY * r;\r\n\t\t\tconst rY: number = dX * r;\r\n\r\n\t\t\tif (bendDir > 0) {\r\n\t\t\t\tchildX = hX - rX;\r\n\t\t\t\tchildY = hY - rY;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tchildX = hX + rX;\r\n\t\t\t\tchildY = hY + rY;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tcwx = childX;\r\n\t\tcwy = childY;\r\n\r\n\t\t//cwx,cwy为子骨骼应该在的世界坐标\r\n\r\n\t\tif (this.isDebug) {\r\n\t\t\tif (!this._sp) {\r\n\t\t\t\tthis._sp = new Sprite();\r\n\t\t\t\tILaya.stage.addChild(this._sp);\r\n\t\t\t}\r\n\t\t\tthis._sp.graphics.clear();\r\n\t\t\tthis._sp.graphics.drawCircle(parentX, parentY, 15, \"#ff00ff\");\r\n\t\t\tthis._sp.graphics.drawCircle(targetX, targetY, 15, \"#ffff00\");\r\n\r\n\t\t\tthis._sp.graphics.drawCircle(cwx, cwy, 15, \"#ff00ff\");\r\n\t\t}\r\n\r\n\r\n\t\t//根据当前计算出的世界坐标更新骨骼\r\n\r\n\t\t//更新parent\r\n\t\tvar pRotation: number;\r\n\t\tpRotation = Math.atan2(cwy - parent.resultMatrix.ty, cwx - parent.resultMatrix.tx);\r\n\t\tparent.setRotation(pRotation);\r\n\r\n\t\tvar pTarMatrix: Matrix;\r\n\t\tpTarMatrix = IkConstraint._tempMatrix;\r\n\t\tpTarMatrix.identity();\r\n\t\tpTarMatrix.rotate(pRotation);\r\n\t\tpTarMatrix.scale(parent.resultMatrix.getScaleX(), parent.resultMatrix.getScaleY());\r\n\t\tpTarMatrix.translate(parent.resultMatrix.tx, parent.resultMatrix.ty);\r\n\r\n\t\tpTarMatrix.copyTo(parent.resultMatrix);\r\n\t\tparent.updateChild();\r\n\r\n\r\n\t\t//更新child\r\n\t\tvar childRotation: number;\r\n\t\tchildRotation = Math.atan2(targetY - cwy, targetX - cwx);\r\n\t\tchild.setRotation(childRotation);\r\n\r\n\t\tvar childTarMatrix: Matrix;\r\n\t\tchildTarMatrix = IkConstraint._tempMatrix;\r\n\t\tchildTarMatrix.identity();\r\n\t\tchildTarMatrix.rotate(childRotation);\r\n\t\tchildTarMatrix.scale(child.resultMatrix.getScaleX(), child.resultMatrix.getScaleY());\r\n\t\tchildTarMatrix.translate(cwx, cwy);\r\n\r\n\t\tpTarMatrix.copyTo(child.resultMatrix);\r\n\t\tchild.updateChild();\r\n\t}\r\n}\r\n\r\n\r\n","/**\r\n * @internal\r\n */\r\nexport class IkConstraintData {\r\n\r\n\tname: string;\r\n\ttargetBoneName: string;\r\n\tboneNames: string[] = [];\r\n\tbendDirection: number = 1;\r\n\tmix: number = 1;\r\n\tisSpine: boolean = true;\r\n\ttargetBoneIndex: number = -1;\r\n\tboneIndexs: number[] = [];\r\n\r\n\t//TODO:coverage\r\n\tconstructor() {\r\n\r\n\t}\r\n\r\n}\r\n\r\n\r\n","import { BoneSlot } from \"./BoneSlot\";\r\nimport { PathConstraintData } from \"./PathConstraintData\";\r\nimport { Bone } from \"./Bone\";\r\nimport { Graphics } from \"../../display/Graphics\";\r\nimport { Matrix } from \"../../maths/Matrix\";\r\n\r\n\r\n/**\r\n * @internal\r\n * 路径作用器\r\n * 1，生成根据骨骼计算控制点\r\n * 2，根据控制点生成路径，并计算路径上的节点\r\n * 3，根据节点，重新调整骨骼位置\r\n */\r\nexport class PathConstraint {\r\n\r\n\t//private static NONE: number = -1;\r\n\tprivate static BEFORE: number = -2;\r\n\tprivate static AFTER: number = -3;\r\n\r\n\ttarget: BoneSlot;\r\n\tdata: PathConstraintData;\r\n\tbones: Bone[];\r\n\tposition: number;\r\n\tspacing: number;\r\n\trotateMix: number;\r\n\ttranslateMix: number;\r\n\r\n\t/**@internal */\r\n\tprivate _debugKey: boolean = false;\r\n\t/**@internal */\r\n\tprivate _segments: number[] = [];\r\n\t/**@internal */\r\n\tprivate _curves: number[] = [];\r\n\t/**@internal */\r\n\tprivate _spaces: number[];\r\n\r\n\tconstructor(data: PathConstraintData, bones: Bone[]) {\r\n\t\tthis.data = data;\r\n\t\tthis.position = data.position;\r\n\t\tthis.spacing = data.spacing;\r\n\t\tthis.rotateMix = data.rotateMix;\r\n\t\tthis.translateMix = data.translateMix;\r\n\t\tthis.bones = [];\r\n\t\tvar tBoneIds: number[] = this.data.bones;\r\n\t\tfor (var i: number = 0, n: number = tBoneIds.length; i < n; i++) {\r\n\t\t\tthis.bones.push(bones[tBoneIds[i]]);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 计算骨骼在路径上的节点\r\n\t * @param\tboneSlot\r\n\t * @param\tboneMatrixArray\r\n\t * @param\tgraphics\r\n\t */\r\n\t//TODO:coverage\r\n\tapply(boneList: Bone[], graphics: Graphics): void {\r\n\t\tif (!this.target)\r\n\t\t\treturn;\r\n\t\tvar tTranslateMix: number = this.translateMix;\r\n\t\tvar tRotateMix: number = this.translateMix;\r\n\t\tvar tTranslate: boolean = tTranslateMix > 0;\r\n\t\tvar tRotate: boolean = tRotateMix > 0;\r\n\t\tvar tSpacingMode: string = this.data.spacingMode;\r\n\t\tvar tLengthSpacing: boolean = tSpacingMode == \"length\";\r\n\t\tvar tRotateMode: string = this.data.rotateMode;\r\n\t\tvar tTangents: boolean = tRotateMode == \"tangent\";\r\n\t\tvar tScale: boolean = tRotateMode == \"chainScale\";\r\n\r\n\t\tvar lengths: number[] = [];\r\n\t\tvar boneCount: number = this.bones.length;\r\n\t\tvar spacesCount: number = tTangents ? boneCount : boneCount + 1;\r\n\r\n\t\tvar spaces: number[] = [];\r\n\t\tthis._spaces = spaces;\r\n\t\tspaces[0] = this.position;\r\n\t\tvar spacing: number = this.spacing;\r\n\t\tif (tScale || tLengthSpacing) {\r\n\t\t\tfor (var i: number = 0, n: number = spacesCount - 1; i < n;) {\r\n\t\t\t\tvar bone: Bone = this.bones[i];\r\n\t\t\t\tvar length: number = bone.length;\r\n\t\t\t\t//var x:Number = length * bone.transform.getMatrix().a;\r\n\t\t\t\t//var y:Number = length * bone.transform.getMatrix().c;\r\n\t\t\t\tvar x: number = length * bone.resultMatrix.a;\r\n\t\t\t\tvar y: number = length * bone.resultMatrix.b;\r\n\t\t\t\tlength = Math.sqrt(x * x + y * y);\r\n\t\t\t\tif (tScale)\r\n\t\t\t\t\tlengths[i] = length;\r\n\t\t\t\tspaces[++i] = tLengthSpacing ? Math.max(0, length + spacing) : spacing;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tfor (i = 1; i < spacesCount; i++) {\r\n\t\t\t\tspaces[i] = spacing;\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar positions: number[] = this.computeWorldPositions(this.target, boneList, graphics, spacesCount, tTangents, this.data.positionMode == \"percent\", tSpacingMode == \"percent\");\r\n\t\tif (this._debugKey) {\r\n\t\t\tfor (i = 0; i < positions.length; i++) {\r\n\t\t\t\tgraphics.drawCircle(positions[i++], positions[i++], 5, \"#00ff00\");\r\n\t\t\t}\r\n\t\t\tvar tLinePos: any[] = [];\r\n\t\t\tfor (i = 0; i < positions.length; i++) {\r\n\t\t\t\ttLinePos.push(positions[i++], positions[i++]);\r\n\t\t\t}\r\n\t\t\tgraphics.drawLines(0, 0, tLinePos, \"#ff0000\");\r\n\t\t}\r\n\t\tvar skeletonX: number;\r\n\t\tvar skeletonY: number;\r\n\t\tvar boneX: number = positions[0];\r\n\t\tvar boneY: number = positions[1];\r\n\t\tvar offsetRotation: number = this.data.offsetRotation;\r\n\t\tvar tip: boolean = tRotateMode == \"chain\" && offsetRotation == 0;\r\n\t\tvar p: number;\r\n\t\tfor (i = 0, p = 3; i < boneCount; i++ , p += 3) {\r\n\t\t\tbone = this.bones[i];\r\n\t\t\tbone.resultMatrix.tx += (boneX - bone.resultMatrix.tx) * tTranslateMix;\r\n\t\t\tbone.resultMatrix.ty += (boneY - bone.resultMatrix.ty) * tTranslateMix;\r\n\r\n\t\t\tx = positions[p];\r\n\t\t\ty = positions[p + 1];\r\n\t\t\tvar dx: number = x - boneX, dy: number = y - boneY;\r\n\t\t\tif (tScale) {\r\n\t\t\t\tlength = lengths[i];\r\n\t\t\t\tif (length != 0) {\r\n\t\t\t\t\tvar s: number = (Math.sqrt(dx * dx + dy * dy) / length - 1) * tRotateMix + 1;\r\n\t\t\t\t\tbone.resultMatrix.a *= s;\r\n\t\t\t\t\tbone.resultMatrix.c *= s;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tboneX = x;\r\n\t\t\tboneY = y;\r\n\t\t\tif (tRotate) {\r\n\t\t\t\tvar a: number = bone.resultMatrix.a;\r\n\t\t\t\t//var b:Number = bone.resultMatrix.b;\r\n\t\t\t\t//var c:Number = bone.resultMatrix.c;\r\n\t\t\t\tvar b: number = bone.resultMatrix.c;\r\n\t\t\t\tvar c: number = bone.resultMatrix.b;\r\n\t\t\t\tvar d: number = bone.resultMatrix.d;\r\n\t\t\t\tvar r: number;\r\n\t\t\t\tvar cos: number;\r\n\t\t\t\tvar sin: number;\r\n\t\t\t\tif (tTangents) {\r\n\t\t\t\t\tr = positions[p - 1];\r\n\t\t\t\t}\r\n\t\t\t\telse if (spaces[i + 1] == 0) {\r\n\t\t\t\t\tr = positions[p + 2];\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tr = Math.atan2(dy, dx);\r\n\t\t\t\t}\r\n\t\t\t\tr -= Math.atan2(c, a) - offsetRotation / 180 * Math.PI;\r\n\t\t\t\tif (tip) {\r\n\t\t\t\t\tcos = Math.cos(r);\r\n\t\t\t\t\tsin = Math.sin(r);\r\n\t\t\t\t\tlength = bone.length;\r\n\t\t\t\t\tboneX += (length * (cos * a - sin * c) - dx) * tRotateMix;\r\n\t\t\t\t\tboneY += (length * (sin * a + cos * c) - dy) * tRotateMix;\r\n\t\t\t\t}\r\n\t\t\t\tif (r > Math.PI) {\r\n\t\t\t\t\tr -= (Math.PI * 2);\r\n\t\t\t\t}\r\n\t\t\t\telse if (r < -Math.PI) {\r\n\t\t\t\t\tr += (Math.PI * 2);\r\n\t\t\t\t}\r\n\t\t\t\tr *= tRotateMix;\r\n\t\t\t\tcos = Math.cos(r);\r\n\t\t\t\tsin = Math.sin(r);\r\n\t\t\t\tbone.resultMatrix.a = cos * a - sin * c;\r\n\t\t\t\tbone.resultMatrix.c = cos * b - sin * d;\r\n\t\t\t\tbone.resultMatrix.b = sin * a + cos * c;\r\n\t\t\t\tbone.resultMatrix.d = sin * b + cos * d;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/**@internal */\r\n\tprivate static _tempMt: Matrix = new Matrix();\r\n\t/**\r\n\t * 计算顶点的世界坐标\r\n\t * @param\tboneSlot\r\n\t * @param\tboneList\r\n\t * @param\tstart\r\n\t * @param\tcount\r\n\t * @param\tworldVertices\r\n\t * @param\toffset\r\n\t */\r\n\t//TODO:coverage\r\n\tcomputeWorldVertices2(boneSlot: BoneSlot, boneList: Bone[], start: number, count: number, worldVertices: number[], offset: number): void {\r\n\t\tvar tBones: any[] = boneSlot.currDisplayData.bones;\r\n\t\tvar tWeights: any[] = boneSlot.currDisplayData.weights;\r\n\t\tvar tTriangles: any[] = boneSlot.currDisplayData.triangles;\r\n\r\n\t\tvar tMatrix: Matrix;\r\n\t\tvar i: number = 0;\r\n\t\tvar v: number = 0;\r\n\t\tvar skip: number = 0;\r\n\t\tvar n: number = 0;\r\n\t\tvar w: number = 0;\r\n\t\tvar b: number = 0;\r\n\t\tvar wx: number = 0;\r\n\t\tvar wy: number = 0;\r\n\t\tvar vx: number = 0;\r\n\t\tvar vy: number = 0;\r\n\t\tvar bone: Bone;\r\n\t\tvar len: number;\r\n\t\t//if (!tTriangles) tTriangles = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n\r\n\t\tif (tBones == null) {\r\n\t\t\tif (!tTriangles) tTriangles = tWeights;\r\n\t\t\tif (boneSlot.deformData)\r\n\t\t\t\ttTriangles = boneSlot.deformData;\r\n\t\t\tvar parentName: string;\r\n\t\t\tparentName = boneSlot.parent;\r\n\t\t\tif (boneList) {\r\n\t\t\t\tlen = boneList.length;\r\n\t\t\t\tfor (i = 0; i < len; i++) {\r\n\t\t\t\t\tif (boneList[i].name == parentName) {\r\n\t\t\t\t\t\tbone = boneList[i];\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tvar tBoneMt: Matrix;\r\n\t\t\tif (bone) {\r\n\t\t\t\ttBoneMt = bone.resultMatrix;\r\n\t\t\t}\r\n\t\t\t//bone = boneSlot.parent;\r\n\r\n\r\n\t\t\tif (!tBoneMt) tBoneMt = PathConstraint._tempMt;\r\n\t\t\tvar x: number = tBoneMt.tx;\r\n\t\t\tvar y: number = tBoneMt.ty;\r\n\t\t\tvar a: number = tBoneMt.a, bb: number = tBoneMt.b, c: number = tBoneMt.c, d: number = tBoneMt.d;\r\n\t\t\tif (bone) d *= bone.d;\r\n\t\t\tfor (v = start, w = offset; w < count; v += 2, w += 2) {\r\n\t\t\t\tvx = tTriangles[v], vy = tTriangles[v + 1];\r\n\t\t\t\tworldVertices[w] = vx * a + vy * bb + x;\r\n\t\t\t\tworldVertices[w + 1] = -(vx * c + vy * d + y);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tfor (i = 0; i < start; i += 2) {\r\n\t\t\tn = tBones[v];\r\n\t\t\tv += n + 1;\r\n\t\t\tskip += n;\r\n\t\t}\r\n\t\tvar skeletonBones: Bone[] = boneList;\r\n\t\tfor (w = offset, b = skip * 3; w < count; w += 2) {\r\n\t\t\twx = 0, wy = 0;\r\n\t\t\tn = tBones[v++];\r\n\t\t\tn += v;\r\n\t\t\tfor (; v < n; v++ , b += 3) {\r\n\t\t\t\ttMatrix = skeletonBones[tBones[v]].resultMatrix;\r\n\t\t\t\tvx = tWeights[b];\r\n\t\t\t\tvy = tWeights[b + 1];\r\n\t\t\t\tvar weight: number = tWeights[b + 2];\r\n\t\t\t\twx += (vx * tMatrix.a + vy * tMatrix.c + tMatrix.tx) * weight;\r\n\t\t\t\twy += (vx * tMatrix.b + vy * tMatrix.d + tMatrix.ty) * weight;\r\n\t\t\t}\r\n\t\t\tworldVertices[w] = wx;\r\n\t\t\tworldVertices[w + 1] = wy;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 计算路径上的节点\r\n\t * @param\tboneSlot\r\n\t * @param\tboneList\r\n\t * @param\tgraphics\r\n\t * @param\tspacesCount\r\n\t * @param\ttangents\r\n\t * @param\tpercentPosition\r\n\t * @param\tpercentSpacing\r\n\t * @return\r\n\t */\r\n\t//TODO:coverage\r\n\tprivate computeWorldPositions(boneSlot: BoneSlot, boneList: Bone[], graphics: Graphics, spacesCount: number, tangents: boolean, percentPosition: boolean, percentSpacing: boolean): number[] {\r\n\t\tvar tBones: any[] = boneSlot.currDisplayData.bones;\r\n\t\tvar tWeights: any[] = boneSlot.currDisplayData.weights;\r\n\t\tvar tTriangles: any[] = boneSlot.currDisplayData.triangles;\r\n\r\n\t\tvar tRx: number = 0;\r\n\t\tvar tRy: number = 0;\r\n\t\tvar nn: number = 0;\r\n\t\tvar tMatrix: Matrix;\r\n\t\tvar tX: number;\r\n\t\tvar tY: number;\r\n\t\tvar tB: number = 0;\r\n\t\tvar tWeight: number = 0;\r\n\t\tvar tVertices: number[] = [];\r\n\t\tvar i: number = 0, j: number = 0, n: number = 0;\r\n\t\tvar verticesLength: number = boneSlot.currDisplayData.verLen;\r\n\t\tvar target: BoneSlot = boneSlot;\r\n\t\tvar position: number = this.position;\r\n\t\tvar spaces: number[] = this._spaces;\r\n\t\tvar world: number[] = [];\r\n\t\tvar out: number[] = [];\r\n\t\tvar closed: boolean = false;\r\n\t\tvar curveCount: number = verticesLength / 6;\r\n\t\tvar prevCurve: number = -1;\r\n\t\tvar pathLength: number;\r\n\t\tvar o: number, curve: number;\r\n\t\tvar p: number;\r\n\t\tvar space: number;\r\n\t\tvar prev: number;\r\n\t\tvar length: number;\r\n\t\tif (!true) { //path.constantSpeed) {\r\n\t\t\tvar lengths: number[] = boneSlot.currDisplayData.lengths as number[];\r\n\t\t\tcurveCount -= closed ? 1 : 2;\r\n\t\t\tpathLength = lengths[curveCount];\r\n\t\t\tif (percentPosition)\r\n\t\t\t\tposition *= pathLength;\r\n\t\t\tif (percentSpacing) {\r\n\t\t\t\tfor (i = 0; i < spacesCount; i++)\r\n\t\t\t\t\tspaces[i] *= pathLength;\r\n\t\t\t}\r\n\t\t\tworld.length = 8;\r\n\t\t\t//world = this._world;\r\n\r\n\t\t\tfor (i = 0, o = 0, curve = 0; i < spacesCount; i++ , o += 3) {\r\n\t\t\t\tspace = spaces[i];\r\n\t\t\t\tposition += space;\r\n\t\t\t\tp = position;\r\n\r\n\t\t\t\tif (closed) {\r\n\t\t\t\t\tp %= pathLength;\r\n\t\t\t\t\tif (p < 0)\r\n\t\t\t\t\t\tp += pathLength;\r\n\t\t\t\t\tcurve = 0;\r\n\t\t\t\t}\r\n\t\t\t\telse if (p < 0) {\r\n\t\t\t\t\tif (prevCurve != PathConstraint.BEFORE) {\r\n\t\t\t\t\t\tprevCurve = PathConstraint.BEFORE;\r\n\t\t\t\t\t\tthis.computeWorldVertices2(target, boneList, 2, 4, world, 0);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.addBeforePosition(p, world, 0, out, o);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\telse if (p > pathLength) {\r\n\t\t\t\t\tif (prevCurve != PathConstraint.AFTER) {\r\n\t\t\t\t\t\tprevCurve = PathConstraint.AFTER;\r\n\t\t\t\t\t\tthis.computeWorldVertices2(target, boneList, verticesLength - 6, 4, world, 0);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.addAfterPosition(p - pathLength, world, 0, out, o);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Determine curve containing position.\r\n\t\t\t\tfor (; ; curve++) {\r\n\t\t\t\t\tlength = lengths[curve];\r\n\t\t\t\t\tif (p > length)\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\tif (curve == 0)\r\n\t\t\t\t\t\tp /= length;\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tprev = lengths[curve - 1];\r\n\t\t\t\t\t\tp = (p - prev) / (length - prev);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif (curve != prevCurve) {\r\n\t\t\t\t\tprevCurve = curve;\r\n\t\t\t\t\tif (closed && curve == curveCount) {\r\n\t\t\t\t\t\tthis.computeWorldVertices2(target, boneList, verticesLength - 4, 4, world, 0);\r\n\t\t\t\t\t\tthis.computeWorldVertices2(target, boneList, 0, 4, world, 4);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tthis.computeWorldVertices2(target, boneList, curve * 6 + 2, 8, world, 0);\r\n\t\t\t\t}\r\n\t\t\t\tthis.addCurvePosition(p, world[0], world[1], world[2], world[3], world[4], world[5], world[6], world[7], out, o, tangents || (i > 0 && space == 0));\r\n\t\t\t}\r\n\t\t\treturn out;\r\n\t\t}\r\n\r\n\t\t// World vertices.\r\n\t\tif (closed) {\r\n\t\t\tverticesLength += 2;\r\n\t\t\tworld[verticesLength - 2] = world[0];\r\n\t\t\tworld[verticesLength - 1] = world[1];\r\n\t\t}\r\n\t\telse {\r\n\t\t\tcurveCount--;\r\n\t\t\tverticesLength -= 4;\r\n\t\t\tthis.computeWorldVertices2(boneSlot, boneList, 2, verticesLength, tVertices, 0);\r\n\t\t\tif (this._debugKey) {\r\n\t\t\t\tfor (i = 0; i < tVertices.length;) {\r\n\t\t\t\t\tgraphics.drawCircle(tVertices[i++], tVertices[i++], 10, \"#ff0000\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tworld = tVertices;\r\n\t\t}\r\n\r\n\t\t// Curve lengths.\r\n\t\tthis._curves.length = curveCount;\r\n\t\tvar curves: number[] = this._curves;\r\n\t\tpathLength = 0;\r\n\t\tvar x1: number = world[0], y1: number = world[1], cx1: number = 0, cy1: number = 0, cx2: number = 0, cy2: number = 0, x2: number = 0, y2: number = 0;\r\n\t\tvar tmpx: number, tmpy: number, dddfx: number, dddfy: number, ddfx: number, ddfy: number, dfx: number, dfy: number;\r\n\t\tvar w: number;\r\n\t\tfor (i = 0, w = 2; i < curveCount; i++ , w += 6) {\r\n\t\t\tcx1 = world[w];\r\n\t\t\tcy1 = world[w + 1];\r\n\t\t\tcx2 = world[w + 2];\r\n\t\t\tcy2 = world[w + 3];\r\n\t\t\tx2 = world[w + 4];\r\n\t\t\ty2 = world[w + 5];\r\n\t\t\ttmpx = (x1 - cx1 * 2 + cx2) * 0.1875;\r\n\t\t\ttmpy = (y1 - cy1 * 2 + cy2) * 0.1875;\r\n\t\t\tdddfx = ((cx1 - cx2) * 3 - x1 + x2) * 0.09375;\r\n\t\t\tdddfy = ((cy1 - cy2) * 3 - y1 + y2) * 0.09375;\r\n\t\t\tddfx = tmpx * 2 + dddfx;\r\n\t\t\tddfy = tmpy * 2 + dddfy;\r\n\t\t\tdfx = (cx1 - x1) * 0.75 + tmpx + dddfx * 0.16666667;\r\n\t\t\tdfy = (cy1 - y1) * 0.75 + tmpy + dddfy * 0.16666667;\r\n\t\t\tpathLength += Math.sqrt(dfx * dfx + dfy * dfy);\r\n\t\t\tdfx += ddfx;\r\n\t\t\tdfy += ddfy;\r\n\t\t\tddfx += dddfx;\r\n\t\t\tddfy += dddfy;\r\n\t\t\tpathLength += Math.sqrt(dfx * dfx + dfy * dfy);\r\n\t\t\tdfx += ddfx;\r\n\t\t\tdfy += ddfy;\r\n\t\t\tpathLength += Math.sqrt(dfx * dfx + dfy * dfy);\r\n\t\t\tdfx += ddfx + dddfx;\r\n\t\t\tdfy += ddfy + dddfy;\r\n\t\t\tpathLength += Math.sqrt(dfx * dfx + dfy * dfy);\r\n\t\t\tcurves[i] = pathLength;\r\n\t\t\tx1 = x2;\r\n\t\t\ty1 = y2;\r\n\t\t}\r\n\t\tif (percentPosition)\r\n\t\t\tposition *= pathLength;\r\n\t\tif (percentSpacing) {\r\n\t\t\tfor (i = 0; i < spacesCount; i++)\r\n\t\t\t\tspaces[i] *= pathLength;\r\n\t\t}\r\n\r\n\t\tvar segments: number[] = this._segments;\r\n\t\tvar curveLength: number = 0;\r\n\t\tvar segment: number;\r\n\t\tfor (i = 0, o = 0, curve = 0, segment = 0; i < spacesCount; i++ , o += 3) {\r\n\t\t\tspace = spaces[i];\r\n\t\t\tposition += space;\r\n\t\t\tp = position;\r\n\r\n\t\t\tif (closed) {\r\n\t\t\t\tp %= pathLength;\r\n\t\t\t\tif (p < 0)\r\n\t\t\t\t\tp += pathLength;\r\n\t\t\t\tcurve = 0;\r\n\t\t\t}\r\n\t\t\telse if (p < 0) {\r\n\t\t\t\tthis.addBeforePosition(p, world, 0, out, o);\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\telse if (p > pathLength) {\r\n\t\t\t\tthis.addAfterPosition(p - pathLength, world, verticesLength - 4, out, o);\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t// Determine curve containing position.\r\n\t\t\tfor (; ; curve++) {\r\n\t\t\t\tlength = curves[curve];\r\n\t\t\t\tif (p > length)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tif (curve == 0)\r\n\t\t\t\t\tp /= length;\r\n\t\t\t\telse {\r\n\t\t\t\t\tprev = curves[curve - 1];\r\n\t\t\t\t\tp = (p - prev) / (length - prev);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\t// Curve segment lengths.\r\n\t\t\tif (curve != prevCurve) {\r\n\t\t\t\tprevCurve = curve;\r\n\t\t\t\tvar ii: number = curve * 6;\r\n\t\t\t\tx1 = world[ii];\r\n\t\t\t\ty1 = world[ii + 1];\r\n\t\t\t\tcx1 = world[ii + 2];\r\n\t\t\t\tcy1 = world[ii + 3];\r\n\t\t\t\tcx2 = world[ii + 4];\r\n\t\t\t\tcy2 = world[ii + 5];\r\n\t\t\t\tx2 = world[ii + 6];\r\n\t\t\t\ty2 = world[ii + 7];\r\n\t\t\t\ttmpx = (x1 - cx1 * 2 + cx2) * 0.03;\r\n\t\t\t\ttmpy = (y1 - cy1 * 2 + cy2) * 0.03;\r\n\t\t\t\tdddfx = ((cx1 - cx2) * 3 - x1 + x2) * 0.006;\r\n\t\t\t\tdddfy = ((cy1 - cy2) * 3 - y1 + y2) * 0.006;\r\n\t\t\t\tddfx = tmpx * 2 + dddfx;\r\n\t\t\t\tddfy = tmpy * 2 + dddfy;\r\n\t\t\t\tdfx = (cx1 - x1) * 0.3 + tmpx + dddfx * 0.16666667;\r\n\t\t\t\tdfy = (cy1 - y1) * 0.3 + tmpy + dddfy * 0.16666667;\r\n\t\t\t\tcurveLength = Math.sqrt(dfx * dfx + dfy * dfy);\r\n\t\t\t\tsegments[0] = curveLength;\r\n\t\t\t\tfor (ii = 1; ii < 8; ii++) {\r\n\t\t\t\t\tdfx += ddfx;\r\n\t\t\t\t\tdfy += ddfy;\r\n\t\t\t\t\tddfx += dddfx;\r\n\t\t\t\t\tddfy += dddfy;\r\n\t\t\t\t\tcurveLength += Math.sqrt(dfx * dfx + dfy * dfy);\r\n\t\t\t\t\tsegments[ii] = curveLength;\r\n\t\t\t\t}\r\n\t\t\t\tdfx += ddfx;\r\n\t\t\t\tdfy += ddfy;\r\n\t\t\t\tcurveLength += Math.sqrt(dfx * dfx + dfy * dfy);\r\n\t\t\t\tsegments[8] = curveLength;\r\n\t\t\t\tdfx += ddfx + dddfx;\r\n\t\t\t\tdfy += ddfy + dddfy;\r\n\t\t\t\tcurveLength += Math.sqrt(dfx * dfx + dfy * dfy);\r\n\t\t\t\tsegments[9] = curveLength;\r\n\t\t\t\tsegment = 0;\r\n\t\t\t}\r\n\r\n\t\t\t// Weight by segment length.\r\n\t\t\tp *= curveLength;\r\n\t\t\tfor (; ; segment++) {\r\n\t\t\t\tlength = segments[segment];\r\n\t\t\t\tif (p > length)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tif (segment == 0)\r\n\t\t\t\t\tp /= length;\r\n\t\t\t\telse {\r\n\t\t\t\t\tprev = segments[segment - 1];\r\n\t\t\t\t\tp = segment + (p - prev) / (length - prev);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis.addCurvePosition(p * 0.1, x1, y1, cx1, cy1, cx2, cy2, x2, y2, out, o, tangents || (i > 0 && space == 0));\r\n\t\t}\r\n\t\treturn out;\r\n\t}\r\n\r\n\t//TODO:coverage\r\n\tprivate addBeforePosition(p: number, temp: number[], i: number, out: number[], o: number): void {\r\n\t\tvar x1: number = temp[i], y1: number = temp[i + 1], dx: number = temp[i + 2] - x1, dy: number = temp[i + 3] - y1, r: number = Math.atan2(dy, dx);\r\n\t\tout[o] = x1 + p * Math.cos(r);\r\n\t\tout[o + 1] = y1 + p * Math.sin(r);\r\n\t\tout[o + 2] = r;\r\n\t}\r\n\r\n\t//TODO:coverage\r\n\tprivate addAfterPosition(p: number, temp: number[], i: number, out: number[], o: number): void {\r\n\t\tvar x1: number = temp[i + 2], y1: number = temp[i + 3], dx: number = x1 - temp[i], dy: number = y1 - temp[i + 1], r: number = Math.atan2(dy, dx);\r\n\t\tout[o] = x1 + p * Math.cos(r);\r\n\t\tout[o + 1] = y1 + p * Math.sin(r);\r\n\t\tout[o + 2] = r;\r\n\t}\r\n\r\n\t//TODO:coverage\r\n\tprivate addCurvePosition(p: number, x1: number, y1: number, cx1: number, cy1: number, cx2: number, cy2: number, x2: number, y2: number, out: number[], o: number, tangents: boolean): void {\r\n\t\tif (p == 0)\r\n\t\t\tp = 0.0001;\r\n\t\tvar tt: number = p * p, ttt: number = tt * p, u: number = 1 - p, uu: number = u * u, uuu: number = uu * u;\r\n\t\tvar ut: number = u * p, ut3: number = ut * 3, uut3: number = u * ut3, utt3: number = ut3 * p;\r\n\t\tvar x: number = x1 * uuu + cx1 * uut3 + cx2 * utt3 + x2 * ttt, y: number = y1 * uuu + cy1 * uut3 + cy2 * utt3 + y2 * ttt;\r\n\t\tout[o] = x;\r\n\t\tout[o + 1] = y;\r\n\t\tif (tangents) {\r\n\t\t\tout[o + 2] = Math.atan2(y - (y1 * uu + cy1 * ut * 2 + cy2 * tt), x - (x1 * uu + cx1 * ut * 2 + cx2 * tt));\r\n\t\t}\r\n\t\telse {\r\n\t\t\tout[o + 2] = 0;\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n\r\n","/**\r\n * @internal\r\n */\r\nexport class PathConstraintData {\r\n\r\n\tname: string;\r\n\tbones: number[] = [];\r\n\ttarget: string;\r\n\tpositionMode: string;\r\n\tspacingMode: string;\r\n\trotateMode: string;\r\n\toffsetRotation: number;\r\n\tposition: number;\r\n\tspacing: number;\r\n\trotateMix: number;\r\n\ttranslateMix: number;\r\n\r\n\tconstructor() {\r\n\r\n\t}\r\n}\r\n\r\n","import { TfConstraintData } from \"./TfConstraintData\";\r\nimport { Bone } from \"./Bone\";\r\n/**\r\n * @internal\r\n */\r\nexport class TfConstraint {\r\n\t/**@internal */\r\n\tprivate _data: TfConstraintData;\r\n\t/**@internal */\r\n\tprivate _bones: Bone[];\r\n\ttarget: Bone;\r\n\trotateMix: number;\r\n\ttranslateMix: number;\r\n\tscaleMix: number;\r\n\tshearMix: number;\r\n\t/**@internal */\r\n\tprivate _temp: number[] = [];\r\n\r\n\t//TODO:coverage\r\n\tconstructor(data: TfConstraintData, bones: Bone[]) {\r\n\t\tthis._data = data;\r\n\t\tif (this._bones == null) {\r\n\t\t\tthis._bones = [];\r\n\t\t}\r\n\t\tthis.target = bones[data.targetIndex];\r\n\t\tvar j: number, n: number;\r\n\t\tfor (j = 0, n = data.boneIndexs.length; j < n; j++) {\r\n\t\t\tthis._bones.push(bones[data.boneIndexs[j]]);\r\n\t\t}\r\n\t\tthis.rotateMix = data.rotateMix;\r\n\t\tthis.translateMix = data.translateMix;\r\n\t\tthis.scaleMix = data.scaleMix;\r\n\t\tthis.shearMix = data.shearMix;\r\n\t}\r\n\r\n\t//TODO:coverage\r\n\tapply(): void {\r\n\t\tvar tTfBone: Bone;\r\n\t\tvar ta: number = this.target.resultMatrix.a, tb: number = this.target.resultMatrix.b, tc: number = this.target.resultMatrix.c, td: number = this.target.resultMatrix.d;\r\n\t\tfor (var j: number = 0, n: number = this._bones.length; j < n; j++) {\r\n\t\t\ttTfBone = this._bones[j];\r\n\t\t\tif (this.rotateMix > 0) {\r\n\t\t\t\tvar a: number = tTfBone.resultMatrix.a, b: number = tTfBone.resultMatrix.b, c: number = tTfBone.resultMatrix.c, d: number = tTfBone.resultMatrix.d;\r\n\t\t\t\tvar r: number = Math.atan2(tc, ta) - Math.atan2(c, a) + this._data.offsetRotation * Math.PI / 180;\r\n\t\t\t\tif (r > Math.PI)\r\n\t\t\t\t\tr -= Math.PI * 2;\r\n\t\t\t\telse if (r < -Math.PI) r += Math.PI * 2;\r\n\t\t\t\tr *= this.rotateMix;\r\n\t\t\t\tvar cos: number = Math.cos(r), sin: number = Math.sin(r);\r\n\t\t\t\ttTfBone.resultMatrix.a = cos * a - sin * c;\r\n\t\t\t\ttTfBone.resultMatrix.b = cos * b - sin * d;\r\n\t\t\t\ttTfBone.resultMatrix.c = sin * a + cos * c;\r\n\t\t\t\ttTfBone.resultMatrix.d = sin * b + cos * d;\r\n\t\t\t}\r\n\t\t\tif (this.translateMix) {\r\n\t\t\t\tthis._temp[0] = this._data.offsetX;\r\n\t\t\t\tthis._temp[1] = this._data.offsetY;\r\n\t\t\t\tthis.target.localToWorld(this._temp);\r\n\t\t\t\ttTfBone.resultMatrix.tx += (this._temp[0] - tTfBone.resultMatrix.tx) * this.translateMix;\r\n\t\t\t\ttTfBone.resultMatrix.ty += (this._temp[1] - tTfBone.resultMatrix.ty) * this.translateMix;\r\n\t\t\t\ttTfBone.updateChild();\r\n\t\t\t}\r\n\t\t\tif (this.scaleMix > 0) {\r\n\t\t\t\tvar bs: number = Math.sqrt(tTfBone.resultMatrix.a * tTfBone.resultMatrix.a + tTfBone.resultMatrix.c * tTfBone.resultMatrix.c);\r\n\t\t\t\tvar ts: number = Math.sqrt(ta * ta + tc * tc);\r\n\t\t\t\tvar s: number = bs > 0.00001 ? (bs + (ts - bs + this._data.offsetScaleX) * this.scaleMix) / bs : 0;\r\n\t\t\t\ttTfBone.resultMatrix.a *= s;\r\n\t\t\t\ttTfBone.resultMatrix.c *= s;\r\n\t\t\t\tbs = Math.sqrt(tTfBone.resultMatrix.b * tTfBone.resultMatrix.b + tTfBone.resultMatrix.d * tTfBone.resultMatrix.d);\r\n\t\t\t\tts = Math.sqrt(tb * tb + td * td);\r\n\t\t\t\ts = bs > 0.00001 ? (bs + (ts - bs + this._data.offsetScaleY) * this.scaleMix) / bs : 0;\r\n\t\t\t\ttTfBone.resultMatrix.b *= s;\r\n\t\t\t\ttTfBone.resultMatrix.d *= s;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.shearMix > 0) {\r\n\t\t\t\tb = tTfBone.resultMatrix.b, d = tTfBone.resultMatrix.d;\r\n\t\t\t\tvar by: number = Math.atan2(d, b);\r\n\t\t\t\tr = Math.atan2(td, tb) - Math.atan2(tc, ta) - (by - Math.atan2(tTfBone.resultMatrix.c, tTfBone.resultMatrix.a));\r\n\t\t\t\tif (r > Math.PI)\r\n\t\t\t\t\tr -= Math.PI * 2;\r\n\t\t\t\telse if (r < -Math.PI) r += Math.PI * 2;\r\n\t\t\t\tr = by + (r + this._data.offsetShearY * Math.PI / 180) * this.shearMix;\r\n\t\t\t\ts = Math.sqrt(b * b + d * d);\r\n\t\t\t\ttTfBone.resultMatrix.b = Math.cos(r) * s;\r\n\t\t\t\ttTfBone.resultMatrix.d = Math.sin(r) * s;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n\r\n","import { Bone } from \"./Bone\";\r\nimport { IkConstraint } from \"./IkConstraint\";\r\nimport { PathConstraintData } from \"./PathConstraintData\";\r\nimport { PathConstraint } from \"./PathConstraint\";\r\nimport { BoneSlot } from \"./BoneSlot\";\r\nimport { TfConstraint } from \"./TfConstraint\";\r\nimport { SkinData } from \"./SkinData\";\r\nimport { EventData } from \"./EventData\";\r\nimport { DrawOrderData } from \"./DrawOrderData\";\r\nimport { Transform } from \"./Transform\";\r\nimport { DeformAniData } from \"./DeformAniData\";\r\nimport { DeformSlotData } from \"./DeformSlotData\";\r\nimport { DeformSlotDisplayData } from \"./DeformSlotDisplayData\";\r\nimport { AnimationPlayer } from \"../AnimationPlayer\"\r\nimport { GraphicsAni } from \"../GraphicsAni\"\r\nimport { Sprite } from \"../../display/Sprite\";\r\nimport { Handler } from \"../../utils/Handler\";\r\nimport { Matrix } from \"../../maths/Matrix\";\r\nimport { Event } from \"../../events/Event\";\r\nimport { SoundChannel } from \"../../media/SoundChannel\";\r\nimport { SoundManager } from \"../../media/SoundManager\";\r\nimport { Graphics } from \"../../display/Graphics\";\r\nimport { Byte } from \"../../utils/Byte\";\r\nimport { Texture } from \"../../resource/Texture\";\r\nimport { IAniLib } from \"../AniLibPack\";\r\nimport { Templet } from \"../../ani/bone/Templet\";\r\nimport { ILaya } from \"../../../ILaya\";\r\nimport { ClassUtils } from \"../../utils/ClassUtils\";\r\n\r\n\r\n/**动画开始播放调度\r\n * @eventType Event.PLAYED\r\n * */\r\n/*[Event(name = \"played\", type = \"laya.events.Event.PLAYED\", desc = \"动画开始播放调度\")]*/\r\n/**动画停止播放调度\r\n * @eventType Event.STOPPED\r\n * */\r\n/*[Event(name = \"stopped\", type = \"laya.events.Event.STOPPED\", desc = \"动画停止播放调度\")]*/\r\n/**动画暂停播放调度\r\n * @eventType Event.PAUSED\r\n * */\r\n/*[Event(name = \"paused\", type = \"laya.events.Event.PAUSED\", desc = \"动画暂停播放调度\")]*/\r\n/**自定义事件。\r\n * @eventType Event.LABEL\r\n */\r\n/*[Event(name = \"label\", type = \"laya.events.Event.LABEL\", desc = \"自定义事件\")]*/\r\n/**\r\n * 骨骼动画由<code>Templet</code>，<code>AnimationPlayer</code>，<code>Skeleton</code>三部分组成。\r\n */\r\nexport class Skeleton extends Sprite {\r\n\t/**\r\n\t * 在canvas模式是否使用简化版的mesh绘制，简化版的mesh将不进行三角形绘制，而改为矩形绘制，能极大提高性能，但是可能某些mesh动画效果会不太正常\r\n\t */\r\n\tstatic useSimpleMeshInCanvas: boolean = false;\r\n\t/**@internal */\r\n\tprotected _templet: Templet;//动画解析器\r\n\t/** @internal */\r\n\tprotected _player: AnimationPlayer;//播放器\r\n\t/** @internal */\r\n\tprotected _curOriginalData: Float32Array;//当前骨骼的偏移数据\r\n\t/** @internal */\r\n\tprivate _boneMatrixArray: any[] = [];//当前骨骼动画的最终结果数据\r\n\t/** @internal */\r\n\tprivate _lastTime: number = 0;//上次的帧时间\r\n\t/** @internal */\r\n\tprivate _currAniIndex: number = -1;\r\n\t/** @internal */\r\n\tprivate _pause: boolean = true;\r\n\t/** @internal */\r\n\tprotected _aniClipIndex: number = -1;\r\n\t/** @internal */\r\n\tprotected _clipIndex: number = -1;\r\n\t/** @internal */\r\n\tprivate _skinIndex: number = 0;\r\n\t/** @internal */\r\n\tprivate _skinName: string = \"default\";\r\n\t/** @internal */\r\n\tprivate _aniMode: number = 0;//\r\n\t/** @internal 当前动画自己的缓冲区*/\r\n\tprivate _graphicsCache: any[];\r\n\t/** @internal */\r\n\tprivate _boneSlotDic: any;\r\n\t/** @internal */\r\n\tprivate _bindBoneBoneSlotDic: any;\r\n\t/** @internal */\r\n\tprivate _boneSlotArray: any[];\r\n\t/** @internal */\r\n\tprivate _index: number = -1;\r\n\t/** @internal */\r\n\tprivate _total: number = -1;\r\n\t/** @internal */\r\n\tprivate _indexControl: boolean = false;\r\n\t/** @internal 加载路径*/\r\n\tprivate _aniPath: string;\r\n\t/** @internal */\r\n\tprivate _complete: Handler;\r\n\t/** @internal */\r\n\tprivate _loadAniMode: number;\r\n\t/** @internal */\r\n\tprivate _yReverseMatrix: Matrix;\r\n\t/** @internal */\r\n\tprivate _ikArr: any[];\r\n\t/** @internal */\r\n\tprivate _tfArr: any[];\r\n\t/** @internal */\r\n\tprivate _pathDic: any;\r\n\t/** @internal */\r\n\tprivate _rootBone: Bone;\r\n\t/** @internal */\r\n\tprotected _boneList: Bone[];\r\n\t/** @internal */\r\n\tprotected _aniSectionDic: any;\t\t// section 是每段数据(transform,slot,ik,path)的长度，这个是一个section的数据，表示每个clip的section数据\r\n\t/** @internal */\r\n\tprivate _eventIndex: number = 0;\r\n\t/** @internal */\r\n\tprivate _drawOrderIndex: number = 0;\r\n\t/** @internal */\r\n\tprivate _drawOrder: number[] = null;\r\n\t/** @internal */\r\n\tprivate _lastAniClipIndex: number = -1;\r\n\t/** @internal */\r\n\tprivate _lastUpdateAniClipIndex: number = -1;\r\n\t/** @internal */\r\n\tprivate _playAudio: boolean = true;\r\n\t/** @internal */\r\n\tprivate _soundChannelArr: any[] = [];\r\n\r\n\r\n\r\n\r\n\t/**\r\n\t * 创建一个Skeleton对象\r\n\t *\r\n\t * @param\ttemplet\t骨骼动画模板\r\n\t * @param\taniMode\t动画模式，0不支持换装，1、2支持换装\r\n\t */\r\n\tconstructor(templet: Templet = null, aniMode: number = 0) {\r\n\t\tsuper();\r\n\t\tif (templet) this.init(templet, aniMode);\r\n\t}\r\n\r\n\t/**\r\n\t * 初始化动画\r\n\t * @param\ttemplet\t\t模板\r\n\t * @param\taniMode\t\t动画模式\r\n\t * <table>\r\n\t * \t<tr><th>模式</th><th>描述</th></tr>\r\n\t * \t<tr>\r\n\t * \t\t<td>0</td> <td>使用模板缓冲的数据，模板缓冲的数据，不允许修改（内存开销小，计算开销小，不支持换装）</td>\r\n\t * \t</tr>\r\n\t * \t<tr>\r\n\t * \t\t<td>1</td> <td>使用动画自己的缓冲区，每个动画都会有自己的缓冲区，相当耗费内存\t（内存开销大，计算开销小，支持换装）</td>\r\n\t * \t</tr>\r\n\t * \t<tr>\r\n\t * \t\t<td>2</td> <td>使用动态方式，去实时去画（内存开销小，计算开销大，支持换装,不建议使用）</td>\r\n\t * </tr>\r\n\t * </table>\r\n\t */\r\n\tinit(templet: Templet, aniMode: number = 0): void {\r\n\t\tvar i: number = 0, n: number;\r\n\t\t//aniMode = 2;\r\n\t\tif (aniMode == 1)//使用动画自己的缓冲区\r\n\t\t{\r\n\t\t\tthis._graphicsCache = [];\r\n\t\t\tfor (i = 0, n = templet.getAnimationCount(); i < n; i++) {\r\n\t\t\t\tthis._graphicsCache.push([]);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._yReverseMatrix = templet.yReverseMatrix;\r\n\t\tthis._aniMode = aniMode;\r\n\t\tthis._templet = templet;\r\n\t\tthis._templet._addReference(1);\r\n\t\tthis._player = new AnimationPlayer();\r\n\t\tthis._player.cacheFrameRate = templet.rate;\r\n\t\tthis._player.templet = templet;\r\n\t\tthis._player.play();\r\n\t\tthis._parseSrcBoneMatrix();\r\n\t\t//骨骼数据\r\n\t\tthis._boneList = templet.mBoneArr;\r\n\t\tthis._rootBone = templet.mRootBone;\r\n\t\tthis._aniSectionDic = templet.aniSectionDic;\r\n\t\t//ik作用器\r\n\t\tif (templet.ikArr.length > 0) {\r\n\t\t\tthis._ikArr = [];\r\n\t\t\tfor (i = 0, n = templet.ikArr.length; i < n; i++) {\r\n\t\t\t\tthis._ikArr.push(new IkConstraint(templet.ikArr[i], this._boneList));\r\n\t\t\t}\r\n\t\t}\r\n\t\t//path作用器\r\n\t\tif (templet.pathArr.length > 0) {\r\n\t\t\tvar tPathData: PathConstraintData;\r\n\t\t\tvar tPathConstraint: PathConstraint;\r\n\t\t\tif (this._pathDic == null) this._pathDic = {};\r\n\t\t\tvar tBoneSlot: BoneSlot;\r\n\t\t\tfor (i = 0, n = templet.pathArr.length; i < n; i++) {\r\n\t\t\t\ttPathData = templet.pathArr[i];\r\n\t\t\t\ttPathConstraint = new PathConstraint(tPathData, this._boneList);\r\n\t\t\t\ttBoneSlot = this._boneSlotDic[tPathData.name];\r\n\t\t\t\tif (tBoneSlot) {\r\n\t\t\t\t\ttPathConstraint = new PathConstraint(tPathData, this._boneList);\r\n\t\t\t\t\ttPathConstraint.target = tBoneSlot;\r\n\t\t\t\t}\r\n\t\t\t\tthis._pathDic[tPathData.name] = tPathConstraint;\r\n\t\t\t}\r\n\t\t}\r\n\t\t//tf作用器\r\n\t\tif (templet.tfArr.length > 0) {\r\n\t\t\tthis._tfArr = [];\r\n\t\t\tfor (i = 0, n = templet.tfArr.length; i < n; i++) {\r\n\t\t\t\tthis._tfArr.push(new TfConstraint(templet.tfArr[i], this._boneList));\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (templet.skinDataArray.length > 0) {\r\n\t\t\tvar tSkinData: SkinData = this._templet.skinDataArray[this._skinIndex];\r\n\t\t\tthis._skinName = tSkinData.name;\r\n\t\t}\r\n\t\tthis._player.on(Event.PLAYED, this, this._onPlay);\r\n\t\tthis._player.on(Event.STOPPED, this, this._onStop);\r\n\t\tthis._player.on(Event.PAUSED, this, this._onPause);\r\n\t}\r\n\r\n\t/**\r\n\t * 得到资源的URL\r\n\t */\r\n\tget url(): string {\r\n\t\treturn this._aniPath;\r\n\t}\r\n\r\n\t/**\r\n\t * 设置动画路径\r\n\t */\r\n\tset url(path: string) {\r\n\t\tthis.load(path);\r\n\t}\r\n\r\n\t/**\r\n\t * 通过加载直接创建动画\r\n\t * @param\tpath\t\t要加载的动画文件路径\r\n\t * @param\tcomplete\t加载完成的回调函数\r\n\t * @param\taniMode\t\t与<code>Skeleton.init</code>的<code>aniMode</code>作用一致\r\n\t */\r\n\tload(path: string, complete: Handler = null, aniMode: number = 0): void {\r\n\t\tthis._aniPath = path;\r\n\t\tthis._complete = complete;\r\n\t\tthis._loadAniMode = aniMode;\r\n\t\tILaya.loader.load([{ url: path, type: ILaya.Loader.BUFFER }], Handler.create(this, this._onLoaded));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t * 加载完成\r\n\t */\r\n\tprivate _onLoaded(): void {\r\n\t\tvar arraybuffer: ArrayBuffer = ILaya.Loader.getRes(this._aniPath);\r\n\t\tif (arraybuffer == null) return;\r\n\t\tif (IAniLib.Templet.TEMPLET_DICTIONARY == null) {\r\n\t\t\tIAniLib.Templet.TEMPLET_DICTIONARY = {};\r\n\t\t}\r\n\t\tvar tFactory: Templet;\r\n\t\ttFactory = IAniLib.Templet.TEMPLET_DICTIONARY[this._aniPath];\r\n\t\tif (tFactory) {\r\n\t\t\tif (tFactory.isParseFail) {\r\n\t\t\t\tthis._parseFail();\r\n\t\t\t} else {\r\n\t\t\t\tif (tFactory.isParserComplete) {\r\n\t\t\t\t\tthis._parseComplete();\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttFactory.on(Event.COMPLETE, this, this._parseComplete);\r\n\t\t\t\t\ttFactory.on(Event.ERROR, this, this._parseFail);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\ttFactory = new IAniLib.Templet();\r\n\t\t\ttFactory._setCreateURL(this._aniPath);\r\n\t\t\tIAniLib.Templet.TEMPLET_DICTIONARY[this._aniPath] = tFactory;\r\n\t\t\ttFactory.on(Event.COMPLETE, this, this._parseComplete);\r\n\t\t\ttFactory.on(Event.ERROR, this, this._parseFail);\r\n\t\t\ttFactory.isParserComplete = false;\r\n\t\t\ttFactory.parseData(null, arraybuffer);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t * 解析完成\r\n\t */\r\n\tprivate _parseComplete(): void {\r\n\t\tvar tTemple: Templet = IAniLib.Templet.TEMPLET_DICTIONARY[this._aniPath];\r\n\t\tif (tTemple) {\r\n\t\t\tthis.init(tTemple, this._loadAniMode);\r\n\t\t\tthis.play(0, true);\r\n\t\t}\r\n\t\tthis._complete && this._complete.runWith(this);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t * 解析失败\r\n\t */\r\n\tprivate _parseFail(): void {\r\n\t\tconsole.log(\"[Error]:\" + this._aniPath + \"解析失败\");\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t * 传递PLAY事件\r\n\t */\r\n\tprivate _onPlay(): void {\r\n\t\tthis.event(Event.PLAYED);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t * 传递STOP事件\r\n\t */\r\n\tprivate _onStop(): void {\r\n\t\t//把没播的事件播完\r\n\t\tvar tEventData: EventData;\r\n\t\tvar tEventAniArr: any[] = this._templet.eventAniArr;\r\n\t\tvar tEventArr: EventData[] = tEventAniArr[this._aniClipIndex];\r\n\t\tif (tEventArr && this._eventIndex < tEventArr.length) {\r\n\t\t\tfor (; this._eventIndex < tEventArr.length; this._eventIndex++) {\r\n\t\t\t\ttEventData = tEventArr[this._eventIndex];\r\n\t\t\t\tif (tEventData.time >= this._player.playStart && tEventData.time <= this._player.playEnd) {\r\n\t\t\t\t\tthis.event(Event.LABEL, tEventData);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t//_eventIndex = 0;\r\n\t\tthis._drawOrder = null;\r\n\t\tthis.event(Event.STOPPED);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t * 传递PAUSE事件\r\n\t */\r\n\tprivate _onPause(): void {\r\n\t\tthis.event(Event.PAUSED);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t * 创建骨骼的矩阵，保存每次计算的最终结果\r\n\t */\r\n\tprivate _parseSrcBoneMatrix(): void {\r\n\t\tvar i: number = 0, n: number = 0;\r\n\t\tn = this._templet.srcBoneMatrixArr.length;\r\n\t\tfor (i = 0; i < n; i++) {\r\n\t\t\tthis._boneMatrixArray.push(new Matrix());\r\n\t\t}\r\n\t\tif (this._aniMode == 0) {\r\n\t\t\tthis._boneSlotDic = this._templet.boneSlotDic;\r\n\t\t\tthis._bindBoneBoneSlotDic = this._templet.bindBoneBoneSlotDic;\r\n\t\t\tthis._boneSlotArray = this._templet.boneSlotArray;\r\n\t\t} else {\r\n\t\t\tif (this._boneSlotDic == null) this._boneSlotDic = {};\r\n\t\t\tif (this._bindBoneBoneSlotDic == null) this._bindBoneBoneSlotDic = {};\r\n\t\t\tif (this._boneSlotArray == null) this._boneSlotArray = [];\r\n\t\t\tvar tArr: any[] = this._templet.boneSlotArray;\r\n\t\t\tvar tBS: BoneSlot;\r\n\t\t\tvar tBSArr: any[];\r\n\t\t\tfor (i = 0, n = tArr.length; i < n; i++) {\r\n\t\t\t\ttBS = tArr[i];\r\n\t\t\t\ttBSArr = this._bindBoneBoneSlotDic[tBS.parent];\r\n\t\t\t\tif (tBSArr == null) {\r\n\t\t\t\t\tthis._bindBoneBoneSlotDic[tBS.parent] = tBSArr = [];\r\n\t\t\t\t}\r\n\t\t\t\tthis._boneSlotDic[tBS.name] = tBS = tBS.copy();\r\n\t\t\t\ttBSArr.push(tBS);\r\n\t\t\t\tthis._boneSlotArray.push(tBS);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t * @param startTime \r\n\t * @param endTime \r\n\t * @param startIndex \r\n\t */\r\n\tprivate _emitMissedEvents(startTime: number, endTime: number, startIndex: number = 0): void {\r\n\t\tvar tEventAniArr: any[] = this._templet.eventAniArr;\r\n\t\tvar tEventArr: EventData[] = tEventAniArr[this._player.currentAnimationClipIndex];\r\n\t\tif (tEventArr) {\r\n\t\t\tvar i: number = 0, len: number;\r\n\t\t\tvar tEventData: EventData;\r\n\t\t\tlen = tEventArr.length;\r\n\t\t\tfor (i = startIndex; i < len; i++) {\r\n\t\t\t\ttEventData = tEventArr[i];\r\n\t\t\t\tif (tEventData.time >= this._player.playStart && tEventData.time <= this._player.playEnd) {\r\n\t\t\t\t\tthis.event(Event.LABEL, tEventData);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 更新动画\r\n\t * @internal\r\n\t * @param\tautoKey true为正常更新，false为index手动更新\r\n\t */\r\n\tprivate _update(autoKey: boolean = true): void {\r\n\t\tif (this._pause) return;\r\n\t\tif (autoKey && this._indexControl) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar tCurrTime: number = this.timer.currTimer;\r\n\t\tvar preIndex: number = this._player.currentKeyframeIndex;\r\n\t\tvar dTime: number = tCurrTime - this._lastTime;\r\n\t\tif (autoKey) {\r\n\t\t\t// player update，更新当前帧数，判断是否stop或者complete\r\n\t\t\tthis._player._update(dTime);\r\n\t\t} else {\r\n\t\t\tpreIndex = -1;\r\n\t\t}\r\n\t\tthis._lastTime = tCurrTime;\r\n\t\tif (!this._player) return;\r\n\t\tthis._index = this._clipIndex = this._player.currentKeyframeIndex;\t// 当前所在帧\r\n\t\tif (this._index < 0) return;\r\n\t\tif (dTime > 0 && this._clipIndex == preIndex && this._lastUpdateAniClipIndex == this._aniClipIndex) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._lastUpdateAniClipIndex = this._aniClipIndex;\r\n\t\tif (preIndex > this._clipIndex && this._eventIndex != 0) {\r\n\t\t\tthis._emitMissedEvents(this._player.playStart, this._player.playEnd, this._eventIndex);\r\n\t\t\tthis._eventIndex = 0;\r\n\t\t}\r\n\r\n\t\t// 自定义事件的检查\r\n\t\tvar tEventArr: EventData[] = this._templet.eventAniArr[this._aniClipIndex];\r\n\t\tvar _soundChannel: SoundChannel;\r\n\t\tif (tEventArr && this._eventIndex < tEventArr.length) {\r\n\t\t\tvar tEventData: EventData = tEventArr[this._eventIndex];\r\n\t\t\tif (tEventData.time >= this._player.playStart && tEventData.time <= this._player.playEnd) {\r\n\t\t\t\tif (this._player.currentPlayTime >= tEventData.time) {\r\n\t\t\t\t\tthis.event(Event.LABEL, tEventData);\r\n\t\t\t\t\tthis._eventIndex++;\r\n\t\t\t\t\tif (this._playAudio && tEventData.audioValue && tEventData.audioValue !== \"null\" && tEventData.audioValue !== \"undefined\") {\r\n\t\t\t\t\t\t_soundChannel = SoundManager.playSound((this._player.templet as any)._path + tEventData.audioValue, 1, Handler.create(this, this._onAniSoundStoped));\r\n\t\t\t\t\t\tSoundManager.playbackRate = this._player.playbackRate;\r\n\t\t\t\t\t\t_soundChannel && this._soundChannelArr.push(_soundChannel);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (tEventData.time < this._player.playStart && this._playAudio && tEventData.audioValue && tEventData.audioValue !== \"null\" && tEventData.audioValue !== \"undefined\") {\r\n\t\t\t\t\tthis._eventIndex++;\r\n\t\t\t\t\t_soundChannel = SoundManager.playSound((this._player.templet as any)._path + tEventData.audioValue, 1, Handler.create(this, this._onAniSoundStoped), null,  (this._player.currentPlayTime - tEventData.time) / 1000);\r\n\t\t\t\t\tSoundManager.playbackRate = this._player.playbackRate;\r\n\t\t\t\t\t_soundChannel && this._soundChannelArr.push(_soundChannel);\r\n\t\t\t} else {\r\n\t\t\t\tthis._eventIndex++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar tGraphics: Graphics;\r\n\r\n\t\tif (this._aniMode == 0) {\r\n\t\t\t// 从templet中找到缓存的这一帧的 graphics\r\n\t\t\ttGraphics = this._templet.getGrahicsDataWithCache(this._aniClipIndex, this._clipIndex) || this._createGraphics();// _clipIndex是 AnimationPlayer计算出来的\r\n\t\t\tif (tGraphics && this.graphics != tGraphics) {\r\n\t\t\t\tthis.graphics = tGraphics;\r\n\t\t\t}\r\n\t\t} else if (this._aniMode == 1) {\r\n\t\t\ttGraphics = this._getGrahicsDataWithCache(this._aniClipIndex, this._clipIndex) || this._createGraphics();\t// 与0的区别是从this get，上面是从templet get\r\n\t\t\tif (tGraphics && this.graphics != tGraphics) {\r\n\t\t\t\tthis.graphics = tGraphics;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._createGraphics();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t * 清掉播放完成的音频\r\n\t * @param force 是否强制删掉所有的声音channel\r\n\t */\r\n\tprivate _onAniSoundStoped(force: boolean): void {\r\n\t\tvar _channel: SoundChannel;\r\n\t\tfor (var len: number = this._soundChannelArr.length, i: number = 0; i < len; i++) {\r\n\t\t\t_channel = this._soundChannelArr[i];\r\n\t\t\tif (_channel.isStopped || force) {\r\n\t\t\t\t!_channel.isStopped && _channel.stop();\r\n\t\t\t\tthis._soundChannelArr.splice(i, 1);\r\n\t\t\t\t// SoundManager.removeChannel(_channel); // TODO 是否需要? 去掉有什么好处? 是否还需要其他操作?\r\n\t\t\t\tlen--; i--;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t * 创建grahics图像. 并且保存到cache中\r\n\t * @param\t_clipIndex 第几帧\r\n\t */\r\n\tprotected _createGraphics(_clipIndex: number = -1): GraphicsAni {\r\n\t\tif (_clipIndex == -1) _clipIndex = this._clipIndex;\r\n\t\tvar curTime: number = _clipIndex * this._player.cacheFrameRateInterval;\r\n\t\t//处理绘制顺序\r\n\t\tvar tDrawOrderData: DrawOrderData;\r\n\t\tvar tDrawOrderAniArr: any[] = this._templet.drawOrderAniArr;\r\n\t\t// 当前动作的 drawOrderArray 信息\r\n\t\tvar tDrawOrderArr: DrawOrderData[] = tDrawOrderAniArr[this._aniClipIndex];\r\n\t\tif (tDrawOrderArr && tDrawOrderArr.length > 0) {\r\n\t\t\t// 选出当前所在帧的 drawOrderArray\r\n\t\t\tthis._drawOrderIndex = 0;\t// 从0开始\r\n\t\t\ttDrawOrderData = tDrawOrderArr[this._drawOrderIndex];\r\n\t\t\twhile (curTime >= tDrawOrderData.time) {\r\n\t\t\t\tthis._drawOrder = tDrawOrderData.drawOrder;\r\n\t\t\t\tthis._drawOrderIndex++;\t// 下一帧\r\n\t\t\t\tif (this._drawOrderIndex >= tDrawOrderArr.length) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\ttDrawOrderData = tDrawOrderArr[this._drawOrderIndex];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//要用的graphics\r\n\t\tif (this._aniMode == 0 || this._aniMode == 1) {\t// 有缓存的情况\r\n\t\t\tthis.graphics = GraphicsAni.create();// new GraphicsAni();\r\n\t\t} else {\t\t\t// 实时计算的情况。 每次都是新的数据，因此要把上一帧的清理一下\r\n\t\t\tif (this.graphics instanceof GraphicsAni) {\r\n\t\t\t\tthis.graphics.clear();\r\n\t\t\t} else {\r\n\t\t\t\tthis.graphics = GraphicsAni.create(); //new GraphicsAni();\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar tGraphics: GraphicsAni = (<GraphicsAni>this.graphics);\r\n\t\t//获取骨骼数据\r\n\t\tvar bones: any[] = this._templet.getNodes(this._aniClipIndex);\r\n\t\t// 现在把帧数计算改成实时的，根据时间算，因此时间要求准确，不能再用curTime了。\r\n\t\t// 用curTime可能会出一个bug就是没有到达最后一帧。例如最后两帧间隔很短\r\n\t\tvar stopped = this._player.state == 0;\r\n\r\n\t\tthis._templet.getOriginalData(this._aniClipIndex, this._curOriginalData, /*_templet._fullFrames[_aniClipIndex]*/null, _clipIndex, stopped ? (curTime + this._player.cacheFrameRateInterval) : curTime);\r\n\t\tvar tSectionArr: any[] = this._aniSectionDic[this._aniClipIndex];\r\n\t\t//var tParentMatrix: Matrix;//父骨骼矩阵的引用\r\n\t\tvar tStartIndex: number = 0;\r\n\t\tvar i: number = 0, j: number = 0, k: number = 0, n: number = 0;\r\n\t\tvar tDBBoneSlot: BoneSlot;\r\n\t\tvar tDBBoneSlotArr: any[];\r\n\t\tvar tParentTransform: Transform;\r\n\t\tvar tSrcBone: Bone;\r\n\t\t//对骨骼数据进行计算\r\n\t\tvar boneCount: number = this._templet.srcBoneMatrixArr.length;\r\n\t\tvar origDt: Float32Array = this._curOriginalData;\r\n\t\tfor (i = 0, n = tSectionArr[0]; i < boneCount; i++) {\r\n\t\t\ttSrcBone = this._boneList[i];\r\n\t\t\tvar resultTrans: Transform = tSrcBone.resultTransform;\r\n\t\t\ttParentTransform = this._templet.srcBoneMatrixArr[i];\r\n\t\t\tresultTrans.scX = tParentTransform.scX * origDt[tStartIndex++];\r\n\t\t\tresultTrans.skX = tParentTransform.skX + origDt[tStartIndex++];\r\n\t\t\tresultTrans.skY = tParentTransform.skY + origDt[tStartIndex++];\r\n\t\t\tresultTrans.scY = tParentTransform.scY * origDt[tStartIndex++];\r\n\t\t\tresultTrans.x = tParentTransform.x + origDt[tStartIndex++];\r\n\t\t\tresultTrans.y = tParentTransform.y + origDt[tStartIndex++];\r\n\t\t\tif (this._templet.tMatrixDataLen === 8) {\r\n\t\t\t\tresultTrans.skewX = tParentTransform.skewX + origDt[tStartIndex++];\r\n\t\t\t\tresultTrans.skewY = tParentTransform.skewY + origDt[tStartIndex++];\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\t//对插槽进行插值计算\r\n\t\tvar tSlotDic: any = {};\r\n\t\tvar tSlotAlphaDic: any = {};\r\n\t\tvar tBoneData: any;\r\n\t\tfor (n += tSectionArr[1]; i < n; i++) {\r\n\t\t\ttBoneData = bones[i];\r\n\t\t\ttSlotDic[tBoneData.name] = origDt[tStartIndex++];\r\n\t\t\ttSlotAlphaDic[tBoneData.name] = origDt[tStartIndex++];\t// 每一个slot的alpha?\r\n\t\t\t//预留\r\n\t\t\ttStartIndex += 4;\r\n\t\t}\r\n\t\t//ik\r\n\t\tvar tBendDirectionDic: any = {};\r\n\t\tvar tMixDic: any = {};\r\n\t\tfor (n += tSectionArr[2]; i < n; i++) {\r\n\t\t\ttBoneData = bones[i];\r\n\t\t\ttBendDirectionDic[tBoneData.name] = origDt[tStartIndex++];\r\n\t\t\ttMixDic[tBoneData.name] = origDt[tStartIndex++];\r\n\t\t\t//预留\r\n\t\t\ttStartIndex += 4;\r\n\t\t}\r\n\t\t//path\r\n\t\tif (this._pathDic) {\r\n\t\t\tvar tPathConstraint: PathConstraint;\r\n\t\t\tfor (n += tSectionArr[3]; i < n; i++) {\r\n\t\t\t\ttBoneData = bones[i];\r\n\t\t\t\ttPathConstraint = this._pathDic[tBoneData.name];\r\n\t\t\t\tif (tPathConstraint) {\r\n\t\t\t\t\tvar tByte: Byte = new Byte(tBoneData.extenData);\r\n\t\t\t\t\tswitch (tByte.getByte()) {\r\n\t\t\t\t\t\tcase 1://position\r\n\t\t\t\t\t\t\ttPathConstraint.position = origDt[tStartIndex++];\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 2://spacing\r\n\t\t\t\t\t\t\ttPathConstraint.spacing = origDt[tStartIndex++];\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 3://mix\r\n\t\t\t\t\t\t\ttPathConstraint.rotateMix = origDt[tStartIndex++];\r\n\t\t\t\t\t\t\ttPathConstraint.translateMix = origDt[tStartIndex++];\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// 从root开始级联矩阵\r\n\t\tthis._rootBone.update(this._yReverseMatrix || Matrix.TEMP.identity());\r\n\r\n\t\t//刷新IK作用器\r\n\t\tif (this._ikArr) {\r\n\t\t\tvar tIkConstraint: IkConstraint;\r\n\t\t\tfor (i = 0, n = this._ikArr.length; i < n; i++) {\r\n\t\t\t\ttIkConstraint = this._ikArr[i];\r\n\t\t\t\tif (tIkConstraint.name in tBendDirectionDic) {\r\n\t\t\t\t\ttIkConstraint.bendDirection = tBendDirectionDic[tIkConstraint.name];\r\n\t\t\t\t}\r\n\t\t\t\tif (tIkConstraint.name in tMixDic) {\r\n\t\t\t\t\ttIkConstraint.mix = tMixDic[tIkConstraint.name]\r\n\t\t\t\t}\r\n\t\t\t\ttIkConstraint.apply();\r\n\t\t\t\t//tIkConstraint.updatePos(this.x, this.y);\r\n\t\t\t}\r\n\t\t}\r\n\t\t//刷新PATH作用器\r\n\t\tif (this._pathDic) {\r\n\t\t\tfor (var tPathStr in this._pathDic) {\r\n\t\t\t\ttPathConstraint = this._pathDic[tPathStr];\r\n\t\t\t\ttPathConstraint.apply(this._boneList, tGraphics);\r\n\t\t\t}\r\n\t\t}\r\n\t\t//刷新transform作用器\r\n\t\tif (this._tfArr) {\r\n\t\t\tvar tTfConstraint: TfConstraint;\r\n\t\t\tfor (i = 0, k = this._tfArr.length; i < k; i++) {\r\n\t\t\t\ttTfConstraint = this._tfArr[i];\r\n\t\t\t\ttTfConstraint.apply();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (i = 0, k = this._boneList.length; i < k; i++) {\r\n\t\t\ttSrcBone = this._boneList[i];\r\n\t\t\ttDBBoneSlotArr = this._bindBoneBoneSlotDic[tSrcBone.name];\r\n\t\t\ttSrcBone.resultMatrix.copyTo(this._boneMatrixArray[i]);\r\n\t\t\tif (tDBBoneSlotArr) {\r\n\t\t\t\tfor (j = 0, n = tDBBoneSlotArr.length; j < n; j++) {\r\n\t\t\t\t\ttDBBoneSlot = tDBBoneSlotArr[j];\r\n\t\t\t\t\tif (tDBBoneSlot) {\r\n\t\t\t\t\t\ttDBBoneSlot.setParentMatrix(tSrcBone.resultMatrix);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar tDeformDic: any = {};\r\n\t\t//变形动画作用器\r\n\t\tvar tDeformAniArr: any[] = this._templet.deformAniArr;\r\n\t\tvar tDeformAniData: DeformAniData;\r\n\t\tif (tDeformAniArr && tDeformAniArr.length > 0) {\r\n\t\t\tif (this._lastAniClipIndex != this._aniClipIndex) {\r\n\t\t\t\tthis._lastAniClipIndex = this._aniClipIndex;\r\n\t\t\t\tfor (i = 0, n = this._boneSlotArray.length; i < n; i++) {\r\n\t\t\t\t\ttDBBoneSlot = this._boneSlotArray[i];\r\n\t\t\t\t\ttDBBoneSlot.deformData = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tvar tSkinDeformAni: any = tDeformAniArr[this._aniClipIndex];\r\n\t\t\t//使用default数据\r\n\t\t\ttDeformAniData = (<DeformAniData>(tSkinDeformAni[\"default\"]));\r\n\t\t\tthis._setDeform(tDeformAniData, tDeformDic, this._boneSlotArray, curTime);\r\n\r\n\t\t\t//使用其他皮肤的数据\r\n\t\t\tvar tSkin: string;\r\n\t\t\tfor (tSkin in tSkinDeformAni) {\r\n\t\t\t\tif (tSkin != \"default\" && tSkin != this._skinName) {\r\n\t\t\t\t\ttDeformAniData = (<DeformAniData>tSkinDeformAni[tSkin]);\r\n\t\t\t\t\tthis._setDeform(tDeformAniData, tDeformDic, this._boneSlotArray, curTime);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t//使用自己皮肤的数据\r\n\t\t\ttDeformAniData = (<DeformAniData>(tSkinDeformAni[this._skinName]));\r\n\t\t\tthis._setDeform(tDeformAniData, tDeformDic, this._boneSlotArray, curTime);\r\n\t\t}\r\n\r\n\t\t//_rootBone.updateDraw(this.x,this.y);\r\n\t\tvar tSlotData2: any;\r\n\t\tvar tSlotData3: any;\r\n\t\tvar tObject: any;\r\n\t\t//把动画按插槽顺序画出来\r\n\t\tif (this._drawOrder) {\r\n\t\t\tfor (i = 0, n = this._drawOrder.length; i < n; i++) {\r\n\t\t\t\ttDBBoneSlot = this._boneSlotArray[this._drawOrder[i]];\r\n\t\t\t\ttSlotData2 = tSlotDic[tDBBoneSlot.name];\r\n\t\t\t\ttSlotData3 = tSlotAlphaDic[tDBBoneSlot.name];\r\n\t\t\t\tif (!isNaN(tSlotData3)) {\t// 如果alpha有值的话\r\n\t\t\t\t\t//tGraphics.save();\r\n\t\t\t\t\t//tGraphics.alpha(tSlotData3);\r\n\t\t\t\t}\r\n\t\t\t\tif (!isNaN(tSlotData2) && tSlotData2 != -2) {\r\n\r\n\t\t\t\t\tif (this._templet.attachmentNames) {\r\n\t\t\t\t\t\ttDBBoneSlot.showDisplayByName(this._templet.attachmentNames[tSlotData2]);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttDBBoneSlot.showDisplayByIndex(tSlotData2);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (tDeformDic[this._drawOrder[i]]) {\r\n\t\t\t\t\ttObject = tDeformDic[this._drawOrder[i]];\r\n\t\t\t\t\tif (tDBBoneSlot.currDisplayData && tObject[tDBBoneSlot.currDisplayData.attachmentName]) {\r\n\t\t\t\t\t\ttDBBoneSlot.deformData = tObject[tDBBoneSlot.currDisplayData.attachmentName];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttDBBoneSlot.deformData = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttDBBoneSlot.deformData = null;\r\n\t\t\t\t}\r\n\t\t\t\tif (!isNaN(tSlotData3)) {\r\n\t\t\t\t\ttDBBoneSlot.draw(tGraphics, this._boneMatrixArray, this._aniMode == 2, tSlotData3);\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttDBBoneSlot.draw(tGraphics, this._boneMatrixArray, this._aniMode == 2);\r\n\t\t\t\t}\r\n\t\t\t\tif (!isNaN(tSlotData3)) {\r\n\t\t\t\t\t//tGraphics.restore();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tfor (i = 0, n = this._boneSlotArray.length; i < n; i++) {\r\n\t\t\t\ttDBBoneSlot = this._boneSlotArray[i];\r\n\t\t\t\ttSlotData2 = tSlotDic[tDBBoneSlot.name];\r\n\t\t\t\ttSlotData3 = tSlotAlphaDic[tDBBoneSlot.name];\r\n\t\t\t\tif (!isNaN(tSlotData3)) {\r\n\t\t\t\t\t//tGraphics.save();\r\n\t\t\t\t\t//tGraphics.alpha(tSlotData3);\r\n\t\t\t\t}\r\n\t\t\t\tif (!isNaN(tSlotData2) && tSlotData2 != -2) {\r\n\t\t\t\t\tif (this._templet.attachmentNames) {\r\n\t\t\t\t\t\ttDBBoneSlot.showDisplayByName(this._templet.attachmentNames[tSlotData2]);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttDBBoneSlot.showDisplayByIndex(tSlotData2);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (tDeformDic[i]) {\r\n\t\t\t\t\ttObject = tDeformDic[i];\r\n\t\t\t\t\tif (tDBBoneSlot.currDisplayData && tObject[tDBBoneSlot.currDisplayData.attachmentName]) {\r\n\t\t\t\t\t\ttDBBoneSlot.deformData = tObject[tDBBoneSlot.currDisplayData.attachmentName];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttDBBoneSlot.deformData = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttDBBoneSlot.deformData = null;\r\n\t\t\t\t}\r\n\t\t\t\tif (!isNaN(tSlotData3)) {\r\n\t\t\t\t\ttDBBoneSlot.draw(tGraphics, this._boneMatrixArray, this._aniMode == 2, tSlotData3);\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttDBBoneSlot.draw(tGraphics, this._boneMatrixArray, this._aniMode == 2);\r\n\t\t\t\t}\r\n\t\t\t\tif (!isNaN(tSlotData3)) {\r\n\t\t\t\t\t//tGraphics.restore();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this._aniMode == 0) {\r\n\t\t\tthis._templet.setGrahicsDataWithCache(this._aniClipIndex, _clipIndex, tGraphics);\r\n\t\t\tthis._checkIsAllParsed(this._aniClipIndex);\r\n\t\t} else if (this._aniMode == 1) {\r\n\t\t\tthis._setGrahicsDataWithCache(this._aniClipIndex, _clipIndex, tGraphics);\r\n\t\t}\r\n\t\treturn tGraphics;\r\n\t}\r\n\r\n\tprivate _checkIsAllParsed(_aniClipIndex: number): void {\r\n\t\tvar i: number, len: number;\r\n\t\tlen = Math.floor(0.01 + this._templet.getAniDuration(_aniClipIndex) / 1000 * this._player.cacheFrameRate);\r\n\t\tfor (i = 0; i < len; i++) {\r\n\t\t\tif (!this._templet.getGrahicsDataWithCache(_aniClipIndex, i)) return;\r\n\t\t}\r\n\t\tif (!this._templet.getGrahicsDataWithCache(_aniClipIndex, len)) {\r\n\t\t\tthis._createGraphics(len);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._templet.deleteAniData(_aniClipIndex);\r\n\t}\r\n\r\n\t/**\r\n\t * 设置deform数据\r\n\t * @internal\r\n\t * @param\ttDeformAniData\r\n\t * @param\ttDeformDic\r\n\t * @param\t_boneSlotArray\r\n\t * @param\tcurTime\r\n\t */\r\n\tprivate _setDeform(tDeformAniData: DeformAniData, tDeformDic: any, _boneSlotArray: any[], curTime: number): void {\r\n\t\tif (!tDeformAniData) return;\r\n\t\tvar tDeformSlotData: DeformSlotData;\r\n\t\tvar tDeformSlotDisplayData: DeformSlotDisplayData;\r\n\t\tvar tDBBoneSlot: BoneSlot;\r\n\t\tvar i: number, n: number, j: number;\r\n\t\tif (tDeformAniData) {\r\n\t\t\tfor (i = 0, n = tDeformAniData.deformSlotDataList.length; i < n; i++) {\r\n\t\t\t\ttDeformSlotData = tDeformAniData.deformSlotDataList[i];\r\n\t\t\t\tfor (j = 0; j < tDeformSlotData.deformSlotDisplayList.length; j++) {\r\n\t\t\t\t\ttDeformSlotDisplayData = tDeformSlotData.deformSlotDisplayList[j];\r\n\t\t\t\t\ttDBBoneSlot = _boneSlotArray[tDeformSlotDisplayData.slotIndex];\r\n\t\t\t\t\ttDeformSlotDisplayData.apply(curTime, tDBBoneSlot);\r\n\t\t\t\t\tif (!tDeformDic[tDeformSlotDisplayData.slotIndex]) {\r\n\t\t\t\t\t\ttDeformDic[tDeformSlotDisplayData.slotIndex] = {};\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttDeformDic[tDeformSlotDisplayData.slotIndex][tDeformSlotDisplayData.attachment] = tDeformSlotDisplayData.deformData;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/*******************************************定义接口*************************************************/\r\n\t/**\r\n\t * 得到当前动画的数量\r\n\t * @return 当前动画的数量\r\n\t */\r\n\tgetAnimNum(): number {\r\n\t\treturn this._templet.getAnimationCount();\r\n\t}\r\n\r\n\t/**\r\n\t * 得到指定动画的名字\r\n\t * @param\tindex\t动画的索引\r\n\t */\r\n\tgetAniNameByIndex(index: number): string {\r\n\t\treturn this._templet.getAniNameByIndex(index);\r\n\t}\r\n\r\n\t/**\r\n\t * 通过名字得到插槽的引用\r\n\t * @param\tname\t动画的名字\r\n\t * @return 插槽的引用\r\n\t */\r\n\tgetSlotByName(name: string): BoneSlot {\r\n\t\treturn this._boneSlotDic[name];\r\n\t}\r\n\r\n\t/**\r\n\t * 通过名字显示一套皮肤\r\n\t * @param\tname\t皮肤的名字\r\n\t * @param\tfreshSlotIndex\t是否将插槽纹理重置到初始化状态\r\n\t */\r\n\tshowSkinByName(name: string, freshSlotIndex: boolean = true): void {\r\n\t\tthis.showSkinByIndex(this._templet.getSkinIndexByName(name), freshSlotIndex);\r\n\t}\r\n\r\n\t/**\r\n\t * 通过索引显示一套皮肤\r\n\t * @param\tskinIndex\t皮肤索引\r\n\t * @param\tfreshSlotIndex\t是否将插槽纹理重置到初始化状态\r\n\t */\r\n\tshowSkinByIndex(skinIndex: number, freshSlotIndex: boolean = true): void {\r\n\t\tfor (var i: number = 0; i < this._boneSlotArray.length; i++) {\r\n\t\t\t((<BoneSlot>this._boneSlotArray[i])).showSlotData(null, freshSlotIndex);\r\n\t\t}\r\n\t\tif (this._templet.showSkinByIndex(this._boneSlotDic, skinIndex, freshSlotIndex)) {\r\n\t\t\tvar tSkinData: SkinData = this._templet.skinDataArray[skinIndex];\r\n\t\t\tthis._skinIndex = skinIndex;\r\n\t\t\tthis._skinName = tSkinData.name;\r\n\t\t}\r\n\t\tthis._clearCache();\r\n\t}\r\n\r\n\t/**\r\n\t * 设置某插槽的皮肤\r\n\t * @param\tslotName\t插槽名称\r\n\t * @param\tindex\t插糟皮肤的索引\r\n\t */\r\n\tshowSlotSkinByIndex(slotName: string, index: number): void {\r\n\t\tif (this._aniMode == 0) return;\r\n\t\tvar tBoneSlot: BoneSlot = this.getSlotByName(slotName);\r\n\t\tif (tBoneSlot) {\r\n\t\t\ttBoneSlot.showDisplayByIndex(index);\r\n\t\t}\r\n\t\tthis._clearCache();\r\n\t}\r\n\r\n\t/**\r\n\t * 设置某插槽的皮肤\r\n\t * @param\tslotName\t插槽名称\r\n\t * @param\tname\t皮肤名称\r\n\t */\r\n\tshowSlotSkinByName(slotName: string, name: string): void {\r\n\t\tif (this._aniMode == 0) return;\r\n\t\tvar tBoneSlot: BoneSlot = this.getSlotByName(slotName);\r\n\t\tif (tBoneSlot) {\r\n\t\t\ttBoneSlot.showDisplayByName(name);\r\n\t\t}\r\n\t\tthis._clearCache();\r\n\t}\r\n\r\n\t/**\r\n\t * 替换插槽贴图名\r\n\t * @param\tslotName 插槽名称\r\n\t * @param\toldName 要替换的贴图名\r\n\t * @param\tnewName 替换后的贴图名\r\n\t */\r\n\treplaceSlotSkinName(slotName: string, oldName: string, newName: string): void {\r\n\t\tif (this._aniMode == 0) return;\r\n\t\tvar tBoneSlot: BoneSlot = this.getSlotByName(slotName);\r\n\t\tif (tBoneSlot) {\r\n\t\t\ttBoneSlot.replaceDisplayByName(oldName, newName);\r\n\t\t}\r\n\t\tthis._clearCache();\r\n\t}\r\n\r\n\t/**\r\n\t * 替换插槽的贴图索引\r\n\t * @param\tslotName 插槽名称\r\n\t * @param\toldIndex 要替换的索引\r\n\t * @param\tnewIndex 替换后的索引\r\n\t */\r\n\treplaceSlotSkinByIndex(slotName: string, oldIndex: number, newIndex: number): void {\r\n\t\tif (this._aniMode == 0) return;\r\n\t\tvar tBoneSlot: BoneSlot = this.getSlotByName(slotName);\r\n\t\tif (tBoneSlot) {\r\n\t\t\ttBoneSlot.replaceDisplayByIndex(oldIndex, newIndex);\r\n\t\t}\r\n\t\tthis._clearCache();\r\n\t}\r\n\r\n\t/**\r\n\t * 设置自定义皮肤\r\n\t * @param\tname\t\t插糟的名字\r\n\t * @param\ttexture\t\t自定义的纹理\r\n\t */\r\n\tsetSlotSkin(slotName: string, texture: Texture): void {\r\n\t\tif (this._aniMode == 0) return;\r\n\t\tvar tBoneSlot: BoneSlot = this.getSlotByName(slotName);\r\n\t\tif (tBoneSlot) {\r\n\t\t\ttBoneSlot.replaceSkin(texture);\r\n\t\t}\r\n\t\tthis._clearCache();\r\n\t}\r\n\r\n\t/**\r\n\t * 换装的时候，需要清一下缓冲区\r\n\t * @internal\r\n\t */\r\n\tprivate _clearCache(): void {\r\n\t\tif (this._aniMode == 1) {\r\n\t\t\tfor (var i: number = 0, n: number = this._graphicsCache.length; i < n; i++) {\r\n\t\t\t\tfor (var j: number = 0, len: number = this._graphicsCache[i].length; j < len; j++) {\r\n\t\t\t\t\tvar gp: GraphicsAni = this._graphicsCache[i][j];\r\n\t\t\t\t\tif (gp && gp != this.graphics) {\r\n\t\t\t\t\t\tGraphicsAni.recycle(gp);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis._graphicsCache[i].length = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 播放动画\r\n\t *\r\n\t * @param\tnameOrIndex\t动画名字或者索引\r\n\t * @param\tloop\t\t是否循环播放\r\n\t * @param\tforce\t\tfalse,如果要播的动画跟上一个相同就不生效,true,强制生效\r\n\t * @param\tstart\t\t起始时间\r\n\t * @param\tend\t\t\t结束时间\r\n\t * @param\tfreshSkin\t是否刷新皮肤数据\r\n\t * @param\tplayAudio\t是否播放音频\r\n\t */\r\n\tplay(nameOrIndex: any, loop: boolean, force: boolean = true, start: number = 0, end: number = 0, freshSkin: boolean = true, playAudio: boolean = true): void {\r\n\t\tthis._playAudio = playAudio;\r\n\t\tthis._indexControl = false;\r\n\t\tvar index: number = -1;\r\n\t\tvar duration: number;\r\n\t\tif (loop) {\r\n\t\t\tduration = 2147483647;//int.MAX_VALUE;\r\n\t\t} else {\r\n\t\t\tduration = 0;\r\n\t\t}\r\n\t\tif (typeof (nameOrIndex) == 'string') {\r\n\t\t\tfor (var i: number = 0, n: number = this._templet.getAnimationCount(); i < n; i++) {\r\n\t\t\t\tvar animation: any = this._templet.getAnimation(i);\r\n\t\t\t\tif (animation && nameOrIndex == animation.name) {\r\n\t\t\t\t\tindex = i;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tindex = nameOrIndex;\r\n\t\t}\r\n\t\tif (index > -1 && index < this.getAnimNum()) {\r\n\t\t\tthis._aniClipIndex = index;\r\n\t\t\tif (force || this._pause || this._currAniIndex != index) {\r\n\t\t\t\tthis._currAniIndex = index;\r\n\t\t\t\tthis._curOriginalData = new Float32Array(this._templet.getTotalkeyframesLength(index));\r\n\t\t\t\tthis._drawOrder = null;\r\n\t\t\t\tthis._eventIndex = 0;\r\n\t\t\t\tthis._player.play(index, this._player.playbackRate, duration, start, end);\r\n\t\t\t\tif (freshSkin)\r\n\t\t\t\t\tthis._templet.showSkinByIndex(this._boneSlotDic, this._skinIndex);\r\n\t\t\t\tif (this._pause) {\r\n\t\t\t\t\tthis._pause = false;\r\n\t\t\t\t\tthis._lastTime = ILaya.Browser.now();\r\n\t\t\t\t\tthis.timer.frameLoop(1, this, this._update, null, true);\r\n\t\t\t\t}\r\n\t\t\t\tthis._update();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 停止动画\r\n\t */\r\n\tstop(): void {\r\n\t\tif (!this._pause) {\r\n\t\t\tthis._pause = true;\r\n\t\t\tif (this._player) {\r\n\t\t\t\tthis._player.stop(true);\r\n\t\t\t}\r\n\t\t\tif (this._soundChannelArr.length > 0) { // 有正在播放的声音\r\n\t\t\t\tthis._onAniSoundStoped(true);\r\n\t\t\t}\r\n\t\t\tthis.timer.clear(this, this._update);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 设置动画播放速率\r\n\t * @param\tvalue\t1为标准速率\r\n\t */\r\n\tplaybackRate(value: number): void {\r\n\t\tif (this._player) {\r\n\t\t\tthis._player.playbackRate = value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 暂停动画的播放\r\n\t */\r\n\tpaused(): void {\r\n\t\tif (!this._pause) {\r\n\t\t\tthis._pause = true;\r\n\t\t\tif (this._player) {\r\n\t\t\t\tthis._player.paused = true;\r\n\t\t\t}\r\n\t\t\tif (this._soundChannelArr.length > 0) { // 有正在播放的声音\r\n\t\t\t\tvar _soundChannel: SoundChannel;\r\n\t\t\t\tfor (var len: number = this._soundChannelArr.length, i: number = 0; i < len; i++) {\r\n\t\t\t\t\t_soundChannel = this._soundChannelArr[i];\r\n\t\t\t\t\tif (!_soundChannel.isStopped) {\r\n\t\t\t\t\t\t_soundChannel.pause();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.timer.clear(this, this._update);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 恢复动画的播放\r\n\t */\r\n\tresume(): void {\r\n\t\tthis._indexControl = false;\r\n\t\tif (this._pause) {\r\n\t\t\tthis._pause = false;\r\n\t\t\tif (this._player) {\r\n\t\t\t\tthis._player.paused = false;\r\n\t\t\t}\r\n\t\t\tif (this._soundChannelArr.length > 0) { // 有正在播放的声音\r\n\t\t\t\tvar _soundChannel: SoundChannel;\r\n\t\t\t\tfor (var len: number = this._soundChannelArr.length, i: number = 0; i < len; i++) {\r\n\t\t\t\t\t_soundChannel = this._soundChannelArr[i];\r\n\t\t\t\t\tif ((_soundChannel as any).audioBuffer) {\r\n\t\t\t\t\t\t_soundChannel.resume();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._lastTime = ILaya.Browser.now();\r\n\t\t\tthis.timer.frameLoop(1, this, this._update, null, true);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t * 得到缓冲数据\r\n\t * @param\taniIndex\r\n\t * @param\tframeIndex\r\n\t * @return\r\n\t */\r\n\tprivate _getGrahicsDataWithCache(aniIndex: number, frameIndex: number): Graphics {\r\n\t\treturn this._graphicsCache[aniIndex][frameIndex];\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t * 保存缓冲grahpics\r\n\t * @param\taniIndex\r\n\t * @param\tframeIndex\r\n\t * @param\tgraphics\r\n\t */\r\n\tprivate _setGrahicsDataWithCache(aniIndex: number, frameIndex: number, graphics: Graphics): void {\r\n\t\tthis._graphicsCache[aniIndex][frameIndex] = graphics;\r\n\t}\r\n\r\n\t\t/**\r\n\t\t * 销毁当前动画\r\n\t\t * @override\r\n\t\t */\r\n\t\tdestroy(destroyChild: boolean = true): void {\r\n\t\tsuper.destroy(destroyChild);\r\n\t\tthis._templet._removeReference(1);\r\n\t\tthis._templet = null;//动画解析器\r\n\t\tif (this._player) this._player.offAll();\r\n\t\tthis._player = null;// 播放器\r\n\t\tthis._curOriginalData = null;//当前骨骼的偏移数据\r\n\t\tthis._boneMatrixArray.length = 0;//当前骨骼动画的最终结果数据\r\n\t\tthis._lastTime = 0;//上次的帧时间\r\n\t\tthis.timer.clear(this, this._update);\r\n\t\tif (this._soundChannelArr.length > 0) { // 有正在播放的声音\r\n\t\t\tthis._onAniSoundStoped(true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t * 得到帧索引\r\n\t */\r\n\tget index(): number {\r\n\t\treturn this._index;\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t * 设置帧索引\r\n\t */\r\n\tset index(value: number) {\r\n\t\tif (this.player) {\r\n\t\t\tthis._index = value;\r\n\t\t\tthis._player.currentTime = this._index * 1000 / this._player.cacheFrameRate;\r\n\t\t\tthis._indexControl = true;\r\n\t\t\tthis._update(false);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 得到总帧数据\r\n\t */\r\n\tget total(): number {\r\n\t\tif (this._templet && this._player) {\r\n\t\t\tthis._total = Math.floor(this._templet.getAniDuration(this._player.currentAnimationClipIndex) / 1000 * this._player.cacheFrameRate);\r\n\t\t} else {\r\n\t\t\tthis._total = -1;\r\n\t\t}\r\n\t\treturn this._total;\r\n\t}\r\n\r\n\t/**\r\n\t * 得到播放器的引用\r\n\t */\r\n\tget player(): AnimationPlayer {\r\n\t\treturn this._player;\r\n\t}\r\n\r\n\t/**\r\n\t * 得到动画模板的引用\r\n\t * @return templet.\r\n\t */\r\n\tget templet(): Templet {\r\n\t\treturn this._templet;\r\n\t}\r\n}\r\n\r\nIAniLib.Skeleton = Skeleton;\r\nILaya.regClass(Skeleton);\r\nClassUtils.regClass(\"laya.ani.bone.Skeleton\", Skeleton);\r\nClassUtils.regClass(\"Laya.Skeleton\", Skeleton);","/**\r\n * @internal\r\n */\r\nexport class SkinData {\r\n\r\n\tname: string;\r\n\tslotArr: any[] = [];\r\n}\r\n\r\n","import { Transform } from \"./Transform\";\r\nimport { Texture } from \"../../resource/Texture\";\r\n\r\n\r\nexport class SkinSlotDisplayData {\r\n\r\n\tname: string;\r\n\tattachmentName: string;\r\n\ttype: number;\t\t\t\t//0 硬  1 skin 2 另一种skin? 3 不支持\r\n\ttransform: Transform;\r\n\twidth: number;\r\n\theight: number;\r\n\ttexture: Texture;\r\n\r\n\tbones: any[];\r\n\tuvs: any[];\r\n\tweights: any[];\r\n\ttriangles: any[];\r\n\tvertices: any[];\r\n\tlengths: any[];\r\n\tverLen: number;\r\n\r\n\tcreateTexture(currTexture: Texture): Texture {\r\n\t\tif (this.texture) return this.texture;\r\n\t\tthis.texture = new Texture(currTexture.bitmap, this.uvs);\r\n\r\n\t\t//判断是否旋转\r\n\t\tif (this.uvs[0] > this.uvs[4]\r\n\t\t\t&& this.uvs[1] > this.uvs[5]) {\r\n\t\t\t//旋转\r\n\t\t\tthis.texture.width = currTexture.height;\r\n\t\t\tthis.texture.height = currTexture.width;\r\n\t\t\tthis.texture.offsetX = -currTexture.offsetX;\r\n\t\t\tthis.texture.offsetY = -currTexture.offsetY;\r\n\t\t\tthis.texture.sourceWidth = currTexture.sourceHeight;\r\n\t\t\tthis.texture.sourceHeight = currTexture.sourceWidth;\r\n\t\t} else {\r\n\t\t\tthis.texture.width = currTexture.width;\r\n\t\t\tthis.texture.height = currTexture.height;\r\n\t\t\tthis.texture.offsetX = -currTexture.offsetX;\r\n\t\t\tthis.texture.offsetY = -currTexture.offsetY;\r\n\t\t\tthis.texture.sourceWidth = currTexture.sourceWidth;\r\n\t\t\tthis.texture.sourceHeight = currTexture.sourceHeight;\r\n\t\t}\r\n\t\treturn this.texture;\r\n\t}\r\n\r\n\tdestory(): void {\r\n\t\tif (this.texture) this.texture.destroy();\r\n\t}\r\n}\r\n\r\n","import { SkinSlotDisplayData } from \"./SkinSlotDisplayData\";\r\nexport class SlotData {\r\n\tname: string;\r\n\tdisplayArr: any[] = [];\r\n\r\n\tgetDisplayByName(name: string): number {\r\n\t\tvar tDisplay: SkinSlotDisplayData;\r\n\t\tfor (var i: number = 0, n: number = this.displayArr.length; i < n; i++) {\r\n\t\t\ttDisplay = this.displayArr[i];\r\n\t\t\tif (tDisplay.attachmentName == name) {\r\n\t\t\t\treturn i;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn -1;\r\n\t}\r\n}\r\n\r\n\r\n","/**\r\n * @internal\r\n */\r\n//TODO:coverage\r\nexport class TfConstraintData {\r\n\r\n\tname: string;\r\n\tboneIndexs: number[] = [];\r\n\ttargetIndex: number;\r\n\trotateMix: number;\r\n\ttranslateMix: number;\r\n\tscaleMix: number;\r\n\tshearMix: number;\r\n\toffsetRotation: number;\r\n\toffsetX: number;\r\n\toffsetY: number;\r\n\toffsetScaleX: number;\r\n\toffsetScaleY: number;\r\n\toffsetShearY: number;\r\n\r\n}\r\n\r\n\r\n","import { Bone } from \"./Bone\";\r\nimport { TfConstraintData } from \"./TfConstraintData\";\r\nimport { PathConstraintData } from \"./PathConstraintData\";\r\nimport { DeformAniData } from \"./DeformAniData\";\r\nimport { DeformSlotData } from \"./DeformSlotData\";\r\nimport { DeformSlotDisplayData } from \"./DeformSlotDisplayData\";\r\nimport { DrawOrderData } from \"./DrawOrderData\";\r\nimport { EventData } from \"./EventData\";\r\nimport { AnimationContent } from \"../AnimationContent\"\r\nimport { AnimationTemplet } from \"../AnimationTemplet\"\r\nimport { BoneSlot } from \"./BoneSlot\"\r\nimport { SkinData } from \"./SkinData\"\r\nimport { SkinSlotDisplayData } from \"./SkinSlotDisplayData\"\r\nimport { SlotData } from \"./SlotData\"\r\nimport { Transform } from \"./Transform\"\r\nimport { IkConstraintData } from \"./IkConstraintData\"\r\nimport { Texture } from \"../../resource/Texture\";\r\nimport { Matrix } from \"../../maths/Matrix\";\r\nimport { Handler } from \"../../utils/Handler\";\r\nimport { Event } from \"../../events/Event\";\r\nimport { Byte } from \"../../utils/Byte\";\r\nimport { Graphics } from \"../../display/Graphics\";\r\nimport { IAniLib } from \"../AniLibPack\";\r\nimport { Skeleton } from \"./Skeleton\";\r\nimport { ILaya } from \"../../../ILaya\";\r\n\r\n/**数据解析完成后的调度。\r\n * @eventType Event.COMPLETE\r\n * */\r\n/*[Event(name = \"complete\", type = \"laya.events.Event.COMPLETE\", desc = \"数据解析完成后的调度\")]*/\r\n/**数据解析错误后的调度。\r\n * @eventType Event.ERROR\r\n * */\r\n/*[Event(name = \"error\", type = \"laya.events.Event.ERROR\", desc = \"数据解析错误后的调度\")]*/\r\n/**\r\n * 动画模板类\r\n */\r\nexport class Templet extends AnimationTemplet {\r\n\t/**@internal */\r\n\tstatic LAYA_ANIMATION_160_VISION: string = \"LAYAANIMATION:1.6.0\";\r\n\t/**@internal */\r\n\tstatic LAYA_ANIMATION_VISION: string = \"LAYAANIMATION:1.7.0\";\r\n\t/**@internal */\r\n\tstatic TEMPLET_DICTIONARY: any;\r\n\t/**@internal */\r\n\tprivate _mainTexture: Texture;\r\n\t/**@internal */\r\n\tprivate _graphicsCache: any[] = [];\r\n\r\n\t/** 存放原始骨骼信息 */\r\n\tsrcBoneMatrixArr: any[] = [];\r\n\t/** IK数据 */\r\n\tikArr: any[] = [];\r\n\t/** transform数据 */\r\n\ttfArr: any[] = [];\r\n\t/** path数据 */\r\n\tpathArr: any[] = [];\r\n\t/** 存放插槽数据的字典 */\r\n\tboneSlotDic: any = {};\r\n\t/** 绑定插槽数据的字典 */\r\n\tbindBoneBoneSlotDic: any = {};\r\n\t/** 存放插糟数据的数组 */\r\n\tboneSlotArray: any[] = [];\r\n\t/** 皮肤数据 */\r\n\tskinDataArray: any[] = [];\r\n\t/** 皮肤的字典数据 */\r\n\tskinDic: any = {};\r\n\t/** 存放纹理数据 */\r\n\tsubTextureDic: any = {};\r\n\t/** 是否解析失败 */\r\n\tisParseFail: boolean = false;\r\n\t/** 反转矩阵，有些骨骼动画要反转才能显示 */\r\n\tyReverseMatrix: Matrix;\r\n\t/** 渲染顺序动画数据 */\r\n\tdrawOrderAniArr: any[] = [];\r\n\t/** 事件动画数据 */\r\n\teventAniArr: any[] = [];\r\n\t/** @private 索引对应的名称 */\r\n\tattachmentNames: any[] = null;\r\n\t/** 顶点动画数据 */\r\n\tdeformAniArr: any[] = [];\r\n\t/** 实际显示对象列表，用于销毁用 */\r\n\tskinSlotDisplayDataArr: SkinSlotDisplayData[] = [];\r\n\r\n\t/** @internal 是否需要解析audio数据 */\r\n\tprivate _isParseAudio: boolean = false;\r\n\t/**@internal */\r\n\tprivate _isDestroyed: boolean = false;\r\n\t/**@internal */\r\n\tprivate _rate: number = 30;\r\n\tisParserComplete: boolean = false;\r\n\taniSectionDic: any = {};\r\n\t/**@internal */\r\n\tprivate _skBufferUrl: string;\r\n\t/**@internal */\r\n\tprivate _textureDic: any = {};\r\n\t/**@internal */\r\n\tprivate _loadList: any[];\r\n\t/**@internal */\r\n\tprivate _path: string;\r\n\t/**@internal */\r\n\tprivate _relativeUrl: string;\r\n\t/**@private */\r\n\ttMatrixDataLen: number;\r\n\r\n\tmRootBone: Bone;\r\n\tmBoneArr: Bone[] = [];\r\n\r\n\tloadAni(url: string): void {\r\n\t\tthis._skBufferUrl = url;\r\n\t\tILaya.loader.load(url, Handler.create(this, this.onComplete), null, ILaya.Loader.BUFFER);\r\n\t}\r\n\r\n\tprivate onComplete(content: any = null): void {\r\n\t\tif (this._isDestroyed) {\r\n\t\t\tthis.destroy();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar tSkBuffer: ArrayBuffer = ILaya.Loader.getRes(this._skBufferUrl);\r\n\t\tif (!tSkBuffer) {\r\n\t\t\tthis.event(Event.ERROR, \"load failed:\" + this._skBufferUrl);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._path = this._skBufferUrl.slice(0, this._skBufferUrl.lastIndexOf(\"/\")) + \"/\";\r\n\t\tthis.parseData(null, tSkBuffer);\r\n\t}\r\n\r\n\t/**\r\n\t * 解析骨骼动画数据\r\n\t * @param\ttexture\t\t\t骨骼动画用到的纹理\r\n\t * @param\tskeletonData\t骨骼动画信息及纹理分块信息\r\n\t * @param\tplaybackRate\t缓冲的帧率数据（会根据帧率去分帧）\r\n\t */\r\n\tparseData(texture: Texture, skeletonData: ArrayBuffer, playbackRate: number = 30): void {\r\n\t\tif (!this._path) {\r\n\t\t\tvar s1: string = (this._relativeUrl || this.url);\r\n\r\n\t\t\tif (s1) {\r\n\t\t\t\tvar p1: number = s1.lastIndexOf('/');\r\n\t\t\t\tif (p1 > 0) {\r\n\t\t\t\t\tthis._path = s1.slice(0, p1) + \"/\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._path = '';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._mainTexture = texture;\r\n\t\tthis._rate = playbackRate;\r\n\t\tthis.parse(skeletonData);\r\n\t}\r\n\r\n\t/**\r\n\t * 创建动画\r\n\t * 0,使用模板缓冲的数据，模板缓冲的数据，不允许修改\t\t\t\t\t（内存开销小，计算开销小，不支持换装）\r\n\t * 1,使用动画自己的缓冲区，每个动画都会有自己的缓冲区，相当耗费内存\t（内存开销大，计算开销小，支持换装）\r\n\t * 2,使用动态方式，去实时去画\t\t\t\t\t\t\t\t\t\t（内存开销小，计算开销大，支持换装,不建议使用）\r\n\t * @param\taniMode 0\t动画模式，0:不支持换装,1,2支持换装\r\n\t * @return\r\n\t */\r\n\tbuildArmature(aniMode: number = 0): Skeleton {\r\n\t\treturn new Skeleton(this, aniMode);\r\n\t}\r\n\r\n\t\t/**\r\n\t\t * @private\r\n\t\t * 解析动画\r\n\t\t * @param\tdata\t\t\t解析的二进制数据\r\n\t\t * @param\tplaybackRate\t帧率\r\n\t\t * @override\r\n\t\t */\r\n\t\tparse(data: ArrayBuffer): void {\r\n\t\tsuper.parse(data);\r\n\t\t//_loaded = true;\r\n\t\tthis.event(Event.LOADED, this);\r\n\t\tif (this._aniVersion === Templet.LAYA_ANIMATION_VISION) {\r\n\t\t\tthis._isParseAudio = true;\r\n\t\t} else if (this._aniVersion != Templet.LAYA_ANIMATION_160_VISION) {\r\n\t\t\t//trace(\"[Error] Version \" + _aniVersion + \" The engine is inconsistent, update to the version \" + KeyframesAniTemplet.LAYA_ANIMATION_VISION + \" please.\");\r\n\t\t\tconsole.log(\"[Error] 版本不一致，请使用IDE版本配套的重新导出\" + this._aniVersion + \"->\" + Templet.LAYA_ANIMATION_VISION);\r\n\t\t\t//_loaded = false;\r\n\t\t}\r\n\t\t//解析公共数据\r\n\t\t//if (loaded) {\r\n\t\t//这里后面要改成一个状态，直接确认是不是要不要加载外部图片\r\n\t\tif (this._mainTexture) {\r\n\t\t\tthis._parsePublicExtData();\r\n\t\t} else {\r\n\t\t\tthis._parseTexturePath();\r\n\t\t}\r\n\t\t//} else {\r\n\t\t//this.event(Event.ERROR, this);\r\n\t\t//isParseFail = true;\r\n\t\t//}\r\n\t}\r\n\r\n\t/**@internal */\r\n\tprivate _parseTexturePath(): void {\r\n\t\tif (this._isDestroyed) {\r\n\t\t\tthis.destroy();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar i: number = 0;\r\n\t\tthis._loadList = [];\r\n\t\tvar tByte: Byte = new Byte(this.getPublicExtData());\r\n\t\tvar tX = 0, tY = 0, tWidth = 0, tHeight = 0;\r\n\t\tvar tFrameX = 0, tFrameY = 0, tFrameWidth = 0, tFrameHeight = 0;\r\n\t\tvar tTempleData: number = 0;\r\n\t\tvar tTextureLen: number = tByte.getInt32();\r\n\t\tvar tTextureName: string = tByte.readUTFString();\r\n\t\tvar tTextureNameArr: any[] = tTextureName.split(\"\\n\");\r\n\t\tvar tSrcTexturePath: string;\r\n\t\tfor (i = 0; i < tTextureLen; i++) {\r\n\t\t\ttSrcTexturePath = this._path + tTextureNameArr[i * 2];\r\n\t\t\ttTextureName = tTextureNameArr[i * 2 + 1];\r\n\r\n\t\t\ttX = tByte.getFloat32();\r\n\t\t\ttY = tByte.getFloat32();\r\n\t\t\ttWidth = tByte.getFloat32();\r\n\t\t\ttHeight = tByte.getFloat32();\r\n\r\n\t\t\ttTempleData = tByte.getFloat32();\r\n\t\t\ttFrameX = isNaN(tTempleData) ? 0 : tTempleData;\r\n\t\t\ttTempleData = tByte.getFloat32();\r\n\t\t\ttFrameY = isNaN(tTempleData) ? 0 : tTempleData;\r\n\t\t\ttTempleData = tByte.getFloat32();\r\n\t\t\ttFrameWidth = isNaN(tTempleData) ? tWidth : tTempleData;\r\n\t\t\ttTempleData = tByte.getFloat32();\r\n\t\t\ttFrameHeight = isNaN(tTempleData) ? tHeight : tTempleData;\r\n\t\t\tif (this._loadList.indexOf(tSrcTexturePath) == -1) {\r\n\t\t\t\tthis._loadList.push(tSrcTexturePath);\r\n\t\t\t}\r\n\t\t}\r\n\t\tILaya.loader.load(this._loadList, Handler.create(this, this._textureComplete));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t * 纹理加载完成\r\n\t */\r\n\tprivate _textureComplete(): void {\r\n\t\tvar tTexture: Texture;\r\n\t\tvar tTextureName: string;\r\n\t\tfor (var i: number = 0, n: number = this._loadList.length; i < n; i++) {\r\n\t\t\ttTextureName = this._loadList[i];\r\n\t\t\ttTexture = this._textureDic[tTextureName] = ILaya.Loader.getRes(tTextureName);\r\n\t\t}\r\n\t\tthis._parsePublicExtData();\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t * 解析自定义数据\r\n\t */\r\n\tprivate _parsePublicExtData(): void {\r\n\t\tvar i: number = 0, j: number = 0, k: number = 0, l: number = 0, n: number = 0;\r\n\t\tfor (i = 0, n = this.getAnimationCount(); i < n; i++) {\r\n\t\t\tthis._graphicsCache.push([]);\r\n\t\t}\r\n\t\tvar isSpine: boolean;\r\n\t\tisSpine = this._aniClassName != \"Dragon\";\r\n\t\tvar tByte: Byte = new Byte(this.getPublicExtData());\r\n\t\tvar tX: number = 0, tY: number = 0, tWidth: number = 0, tHeight: number = 0;\r\n\t\tvar tFrameX: number = 0, tFrameY: number = 0, tFrameWidth: number = 0, tFrameHeight: number = 0;\r\n\t\tvar tTempleData: number = 0;\r\n\t\t//var tTextureLen:int = tByte.getUint8();\r\n\t\tvar tTextureLen: number = tByte.getInt32();\r\n\t\tvar tTextureName: string = tByte.readUTFString();\r\n\t\tvar tTextureNameArr: any[] = tTextureName.split(\"\\n\");\r\n\t\tvar tTexture: Texture;\r\n\t\tvar tSrcTexturePath: string;\r\n\t\tfor (i = 0; i < tTextureLen; i++) {\r\n\t\t\ttTexture = this._mainTexture;\r\n\t\t\ttSrcTexturePath = this._path + tTextureNameArr[i * 2];\r\n\t\t\ttTextureName = tTextureNameArr[i * 2 + 1];\r\n\t\t\tif (this._mainTexture == null) {\r\n\t\t\t\ttTexture = this._textureDic[tSrcTexturePath];\r\n\t\t\t}\r\n\t\t\tif (!tTexture) {\r\n\t\t\t\tthis.event(Event.ERROR, this);\r\n\t\t\t\tthis.isParseFail = true;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\ttX = tByte.getFloat32();\r\n\t\t\ttY = tByte.getFloat32();\r\n\t\t\ttWidth = tByte.getFloat32();\r\n\t\t\ttHeight = tByte.getFloat32();\r\n\r\n\t\t\ttTempleData = tByte.getFloat32();\r\n\t\t\ttFrameX = isNaN(tTempleData) ? 0 : tTempleData;\r\n\t\t\ttTempleData = tByte.getFloat32();\r\n\t\t\ttFrameY = isNaN(tTempleData) ? 0 : tTempleData;\r\n\t\t\ttTempleData = tByte.getFloat32();\r\n\t\t\ttFrameWidth = isNaN(tTempleData) ? tWidth : tTempleData;\r\n\t\t\ttTempleData = tByte.getFloat32();\r\n\t\t\ttFrameHeight = isNaN(tTempleData) ? tHeight : tTempleData;\r\n\t\t\tthis.subTextureDic[tTextureName] = Texture.create(tTexture, tX, tY, tWidth, tHeight, -tFrameX, -tFrameY, tFrameWidth, tFrameHeight);\r\n\t\t}\r\n\t\tthis._mainTexture = tTexture;\r\n\r\n\t\tvar tAniCount: number = tByte.getUint16();\r\n\t\tvar tSectionArr: any[];\r\n\t\tfor (i = 0; i < tAniCount; i++) {\r\n\t\t\ttSectionArr = [];\r\n\t\t\ttSectionArr.push(tByte.getUint16());\r\n\t\t\ttSectionArr.push(tByte.getUint16());\r\n\t\t\ttSectionArr.push(tByte.getUint16());\r\n\t\t\ttSectionArr.push(tByte.getUint16());\r\n\t\t\tthis.aniSectionDic[i] = tSectionArr;\r\n\t\t}\r\n\r\n\t\tvar tBone: Bone;\r\n\t\tvar tParentBone: Bone;\r\n\t\tvar tName: string;\r\n\t\tvar tParentName: string;\r\n\t\tvar tBoneLen: number = tByte.getInt16();\r\n\t\tvar tBoneDic: any = {};\r\n\t\tvar tRootBone: Bone;\r\n\t\tfor (i = 0; i < tBoneLen; i++) {\r\n\t\t\ttBone = new Bone();\r\n\t\t\tif (i == 0) {\r\n\t\t\t\ttRootBone = tBone;\r\n\t\t\t} else {\r\n\t\t\t\ttBone.root = tRootBone;\r\n\t\t\t}\r\n\t\t\ttBone.d = isSpine ? -1 : 1;\r\n\t\t\ttName = tByte.readUTFString();\r\n\t\t\ttParentName = tByte.readUTFString();\r\n\t\t\ttBone.length = tByte.getFloat32();\r\n\t\t\tif (tByte.getByte() == 1) {\r\n\t\t\t\ttBone.inheritRotation = false;\r\n\t\t\t}\r\n\t\t\tif (tByte.getByte() == 1) {\r\n\t\t\t\ttBone.inheritScale = false;\r\n\t\t\t}\r\n\t\t\ttBone.name = tName;\r\n\t\t\tif (tParentName) {\r\n\t\t\t\ttParentBone = tBoneDic[tParentName];\r\n\t\t\t\tif (tParentBone) {\r\n\t\t\t\t\ttParentBone.addChild(tBone);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.mRootBone = tBone;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ttBoneDic[tName] = tBone;\r\n\t\t\tthis.mBoneArr.push(tBone);\r\n\t\t}\r\n\r\n\t\tthis.tMatrixDataLen = tByte.getUint16();\r\n\t\tvar tLen: number = tByte.getUint16();\r\n\t\tvar boneLength: number = Math.floor(tLen / this.tMatrixDataLen);\r\n\t\tvar tResultTransform: Transform;\r\n\t\tvar tMatrixArray: any[] = this.srcBoneMatrixArr;\r\n\t\tfor (i = 0; i < boneLength; i++) {\r\n\t\t\ttResultTransform = new Transform();\r\n\t\t\ttResultTransform.scX = tByte.getFloat32();\r\n\t\t\ttResultTransform.skX = tByte.getFloat32();\r\n\t\t\ttResultTransform.skY = tByte.getFloat32();\r\n\t\t\ttResultTransform.scY = tByte.getFloat32();\r\n\t\t\ttResultTransform.x = tByte.getFloat32();\r\n\t\t\ttResultTransform.y = tByte.getFloat32();\r\n\t\t\tif (this.tMatrixDataLen === 8) {\r\n\t\t\t\ttResultTransform.skewX = tByte.getFloat32();\r\n\t\t\t\ttResultTransform.skewY = tByte.getFloat32();\r\n\t\t\t}\r\n\t\t\ttMatrixArray.push(tResultTransform);\r\n\t\t\ttBone = this.mBoneArr[i];\r\n\t\t\ttBone.transform = tResultTransform;\r\n\t\t}\r\n\r\n\t\tvar tIkConstraintData: IkConstraintData;\r\n\t\tvar tIkLen: number = tByte.getUint16();\r\n\t\tvar tIkBoneLen: number;\r\n\t\tfor (i = 0; i < tIkLen; i++) {\r\n\t\t\ttIkConstraintData = new IkConstraintData();\r\n\t\t\ttIkBoneLen = tByte.getUint16();\r\n\t\t\tfor (j = 0; j < tIkBoneLen; j++) {\r\n\t\t\t\ttIkConstraintData.boneNames.push(tByte.readUTFString());\r\n\t\t\t\ttIkConstraintData.boneIndexs.push(tByte.getInt16());\r\n\t\t\t}\r\n\t\t\ttIkConstraintData.name = tByte.readUTFString();\r\n\t\t\ttIkConstraintData.targetBoneName = tByte.readUTFString();\r\n\t\t\ttIkConstraintData.targetBoneIndex = tByte.getInt16();\r\n\t\t\ttIkConstraintData.bendDirection = tByte.getFloat32();\r\n\t\t\ttIkConstraintData.mix = tByte.getFloat32();\r\n\t\t\ttIkConstraintData.isSpine = isSpine;\r\n\t\t\tthis.ikArr.push(tIkConstraintData);\r\n\t\t}\r\n\r\n\t\tvar tTfConstraintData: TfConstraintData;\r\n\t\tvar tTfLen: number = tByte.getUint16();\r\n\t\tvar tTfBoneLen: number;\r\n\t\tfor (i = 0; i < tTfLen; i++) {\r\n\t\t\ttTfConstraintData = new TfConstraintData();\r\n\t\t\ttTfBoneLen = tByte.getUint16();\r\n\t\t\tfor (j = 0; j < tTfBoneLen; j++) {\r\n\t\t\t\ttTfConstraintData.boneIndexs.push(tByte.getInt16());\r\n\t\t\t}\r\n\t\t\ttTfConstraintData.name = tByte.getUTFString();\r\n\t\t\ttTfConstraintData.targetIndex = tByte.getInt16();\r\n\t\t\ttTfConstraintData.rotateMix = tByte.getFloat32();\r\n\t\t\ttTfConstraintData.translateMix = tByte.getFloat32();\r\n\t\t\ttTfConstraintData.scaleMix = tByte.getFloat32();\r\n\t\t\ttTfConstraintData.shearMix = tByte.getFloat32();\r\n\t\t\ttTfConstraintData.offsetRotation = tByte.getFloat32();\r\n\t\t\ttTfConstraintData.offsetX = tByte.getFloat32();\r\n\t\t\ttTfConstraintData.offsetY = tByte.getFloat32();\r\n\t\t\ttTfConstraintData.offsetScaleX = tByte.getFloat32();\r\n\t\t\ttTfConstraintData.offsetScaleY = tByte.getFloat32();\r\n\t\t\ttTfConstraintData.offsetShearY = tByte.getFloat32();\r\n\t\t\tthis.tfArr.push(tTfConstraintData);\r\n\t\t}\r\n\r\n\t\tvar tPathConstraintData: PathConstraintData;\r\n\t\tvar tPathLen: number = tByte.getUint16();\r\n\t\tvar tPathBoneLen: number;\r\n\t\tfor (i = 0; i < tPathLen; i++) {\r\n\t\t\ttPathConstraintData = new PathConstraintData();\r\n\t\t\ttPathConstraintData.name = tByte.readUTFString();\r\n\t\t\ttPathBoneLen = tByte.getUint16();\r\n\t\t\tfor (j = 0; j < tPathBoneLen; j++) {\r\n\t\t\t\ttPathConstraintData.bones.push(tByte.getInt16());\r\n\t\t\t}\r\n\t\t\ttPathConstraintData.target = tByte.readUTFString();\r\n\t\t\ttPathConstraintData.positionMode = tByte.readUTFString();\r\n\t\t\ttPathConstraintData.spacingMode = tByte.readUTFString();\r\n\t\t\ttPathConstraintData.rotateMode = tByte.readUTFString();\r\n\t\t\ttPathConstraintData.offsetRotation = tByte.getFloat32();\r\n\t\t\ttPathConstraintData.position = tByte.getFloat32();\r\n\t\t\ttPathConstraintData.spacing = tByte.getFloat32();\r\n\t\t\ttPathConstraintData.rotateMix = tByte.getFloat32();\r\n\t\t\ttPathConstraintData.translateMix = tByte.getFloat32();\r\n\t\t\tthis.pathArr.push(tPathConstraintData);\r\n\t\t}\r\n\r\n\t\tvar tDeformSlotLen: number;\r\n\t\tvar tDeformSlotDisplayLen: number;\r\n\t\tvar tDSlotIndex: number;\r\n\t\tvar tDAttachment: string;\r\n\t\tvar tDeformTimeLen: number;\r\n\t\tvar tDTime: number;\r\n\t\tvar tDeformVecticesLen: number;\r\n\t\tvar tDeformAniData: DeformAniData;\r\n\t\tvar tDeformSlotData: DeformSlotData;\r\n\t\tvar tDeformSlotDisplayData: DeformSlotDisplayData;\r\n\t\tvar tDeformVectices: any[];\r\n\t\tvar tDeformAniLen: number = tByte.getInt16();\r\n\t\tfor (i = 0; i < tDeformAniLen; i++) {\r\n\t\t\tvar tDeformSkinLen: number = tByte.getUint8();\r\n\t\t\tvar tSkinDic: any = {};\r\n\t\t\tthis.deformAniArr.push(tSkinDic);\r\n\t\t\tfor (var f: number = 0; f < tDeformSkinLen; f++) {\r\n\t\t\t\ttDeformAniData = new DeformAniData();\r\n\t\t\t\ttDeformAniData.skinName = tByte.getUTFString();\r\n\t\t\t\ttSkinDic[tDeformAniData.skinName] = tDeformAniData;\r\n\t\t\t\ttDeformSlotLen = tByte.getInt16();\r\n\t\t\t\tfor (j = 0; j < tDeformSlotLen; j++) {\r\n\t\t\t\t\ttDeformSlotData = new DeformSlotData();\r\n\t\t\t\t\ttDeformAniData.deformSlotDataList.push(tDeformSlotData);\r\n\r\n\t\t\t\t\ttDeformSlotDisplayLen = tByte.getInt16();\r\n\t\t\t\t\tfor (k = 0; k < tDeformSlotDisplayLen; k++) {\r\n\t\t\t\t\t\ttDeformSlotDisplayData = new DeformSlotDisplayData();\r\n\t\t\t\t\t\ttDeformSlotData.deformSlotDisplayList.push(tDeformSlotDisplayData);\r\n\t\t\t\t\t\ttDeformSlotDisplayData.slotIndex = tDSlotIndex = tByte.getInt16();\r\n\t\t\t\t\t\ttDeformSlotDisplayData.attachment = tDAttachment = tByte.getUTFString();\r\n\t\t\t\t\t\ttDeformTimeLen = tByte.getInt16();\r\n\t\t\t\t\t\tfor (l = 0; l < tDeformTimeLen; l++) {\r\n\t\t\t\t\t\t\tif (tByte.getByte() == 1) {\r\n\t\t\t\t\t\t\t\ttDeformSlotDisplayData.tweenKeyList.push(true);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\ttDeformSlotDisplayData.tweenKeyList.push(false);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\ttDTime = tByte.getFloat32();\r\n\t\t\t\t\t\t\ttDeformSlotDisplayData.timeList.push(tDTime);\r\n\t\t\t\t\t\t\ttDeformVectices = [];\r\n\t\t\t\t\t\t\ttDeformSlotDisplayData.vectices.push(tDeformVectices);\r\n\t\t\t\t\t\t\ttDeformVecticesLen = tByte.getInt16();\r\n\t\t\t\t\t\t\tfor (n = 0; n < tDeformVecticesLen; n++) {\r\n\t\t\t\t\t\t\t\ttDeformVectices.push(tByte.getFloat32());\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar tDrawOrderArr: DrawOrderData[];\r\n\t\tvar tDrawOrderAniLen: number = tByte.getInt16();\r\n\t\tvar tDrawOrderLen: number;\r\n\t\tvar tDrawOrderData: DrawOrderData;\r\n\t\tvar tDoLen: number;\r\n\t\tfor (i = 0; i < tDrawOrderAniLen; i++) {\r\n\t\t\ttDrawOrderLen = tByte.getInt16();\r\n\t\t\ttDrawOrderArr = [];\r\n\t\t\tfor (j = 0; j < tDrawOrderLen; j++) {\r\n\t\t\t\ttDrawOrderData = new DrawOrderData();\r\n\t\t\t\ttDrawOrderData.time = tByte.getFloat32();\r\n\t\t\t\ttDoLen = tByte.getInt16();\r\n\t\t\t\tfor (k = 0; k < tDoLen; k++) {\r\n\t\t\t\t\ttDrawOrderData.drawOrder.push(tByte.getInt16());\r\n\t\t\t\t}\r\n\t\t\t\ttDrawOrderArr.push(tDrawOrderData);\r\n\t\t\t}\r\n\t\t\tthis.drawOrderAniArr.push(tDrawOrderArr);\r\n\t\t}\r\n\r\n\t\tvar tEventArr: EventData[];\r\n\t\tvar tEventAniLen: number = tByte.getInt16();\r\n\t\tvar tEventLen: number;\r\n\t\tvar tEventData: EventData;\r\n\t\tfor (i = 0; i < tEventAniLen; i++) {\r\n\t\t\ttEventLen = tByte.getInt16();\r\n\t\t\ttEventArr = [];\r\n\t\t\tfor (j = 0; j < tEventLen; j++) {\r\n\t\t\t\ttEventData = new EventData();\r\n\t\t\t\ttEventData.name = tByte.getUTFString();\r\n\t\t\t\tif (this._isParseAudio) tEventData.audioValue = tByte.getUTFString();\r\n\t\t\t\ttEventData.intValue = tByte.getInt32();\r\n\t\t\t\ttEventData.floatValue = tByte.getFloat32();\r\n\t\t\t\ttEventData.stringValue = tByte.getUTFString();\r\n\t\t\t\ttEventData.time = tByte.getFloat32();\r\n\t\t\t\ttEventArr.push(tEventData);\r\n\t\t\t}\r\n\t\t\tthis.eventAniArr.push(tEventArr);\r\n\t\t}\r\n\r\n\t\tvar tAttachmentLen: number = tByte.getInt16();\r\n\t\tif (tAttachmentLen > 0) {\r\n\t\t\tthis.attachmentNames = [];\r\n\t\t\tfor (i = 0; i < tAttachmentLen; i++) {\r\n\t\t\t\tthis.attachmentNames.push(tByte.getUTFString());\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//创建插槽并绑定到骨骼上\r\n\t\tvar tBoneSlotLen: number = tByte.getInt16();\r\n\t\tvar tDBBoneSlot: BoneSlot;\r\n\t\tvar tDBBoneSlotArr: any[];\r\n\t\tfor (i = 0; i < tBoneSlotLen; i++) {\r\n\t\t\ttDBBoneSlot = new BoneSlot();\r\n\t\t\ttDBBoneSlot.name = tByte.readUTFString();\r\n\t\t\ttDBBoneSlot.parent = tByte.readUTFString();\r\n\t\t\ttDBBoneSlot.attachmentName = tByte.readUTFString();\r\n\t\t\ttDBBoneSlot.srcDisplayIndex = tDBBoneSlot.displayIndex = tByte.getInt16();\r\n\t\t\ttDBBoneSlot.templet = this;\r\n\t\t\tthis.boneSlotDic[tDBBoneSlot.name] = tDBBoneSlot;\r\n\t\t\ttDBBoneSlotArr = this.bindBoneBoneSlotDic[tDBBoneSlot.parent];\r\n\t\t\tif (tDBBoneSlotArr == null) {\r\n\t\t\t\tthis.bindBoneBoneSlotDic[tDBBoneSlot.parent] = tDBBoneSlotArr = [];\r\n\t\t\t}\r\n\t\t\ttDBBoneSlotArr.push(tDBBoneSlot);\r\n\t\t\tthis.boneSlotArray.push(tDBBoneSlot);\r\n\t\t}\r\n\r\n\t\tvar tNameString: string = tByte.readUTFString();\r\n\t\tvar tNameArray: any[] = tNameString.split(\"\\n\");\r\n\t\tvar tNameStartIndex: number = 0;\r\n\r\n\t\tvar tSkinDataLen: number = tByte.getUint8();\r\n\t\tvar tSkinData: SkinData, tSlotData: SlotData, tDisplayData: SkinSlotDisplayData;\r\n\t\tvar tSlotDataLen: number, tDisplayDataLen: number;\r\n\t\tvar tUvLen: number, tWeightLen: number, tTriangleLen: number, tVerticeLen: number, tLengthLen: number;\r\n\t\tfor (i = 0; i < tSkinDataLen; i++) {\r\n\t\t\ttSkinData = new SkinData();\r\n\t\t\ttSkinData.name = tNameArray[tNameStartIndex++];\r\n\t\t\ttSlotDataLen = tByte.getUint8();\r\n\t\t\tfor (j = 0; j < tSlotDataLen; j++) {\r\n\t\t\t\ttSlotData = new SlotData();\r\n\t\t\t\ttSlotData.name = tNameArray[tNameStartIndex++];\r\n\t\t\t\ttDBBoneSlot = this.boneSlotDic[tSlotData.name];\r\n\t\t\t\ttDisplayDataLen = tByte.getUint8();\r\n\t\t\t\tfor (k = 0; k < tDisplayDataLen; k++) {\r\n\t\t\t\t\ttDisplayData = new SkinSlotDisplayData();\r\n\t\t\t\t\tthis.skinSlotDisplayDataArr.push(tDisplayData);\r\n\t\t\t\t\ttDisplayData.name = tNameArray[tNameStartIndex++];\r\n\t\t\t\t\ttDisplayData.attachmentName = tNameArray[tNameStartIndex++];\r\n\t\t\t\t\ttDisplayData.transform = new Transform();\r\n\t\t\t\t\ttDisplayData.transform.scX = tByte.getFloat32();\r\n\t\t\t\t\ttDisplayData.transform.skX = tByte.getFloat32();\r\n\t\t\t\t\ttDisplayData.transform.skY = tByte.getFloat32();\r\n\t\t\t\t\ttDisplayData.transform.scY = tByte.getFloat32();\r\n\t\t\t\t\ttDisplayData.transform.x = tByte.getFloat32();\r\n\t\t\t\t\ttDisplayData.transform.y = tByte.getFloat32();\r\n\r\n\t\t\t\t\ttSlotData.displayArr.push(tDisplayData);\r\n\t\t\t\t\ttDisplayData.width = tByte.getFloat32();\r\n\t\t\t\t\ttDisplayData.height = tByte.getFloat32();\r\n\t\t\t\t\ttDisplayData.type = tByte.getUint8();\r\n\t\t\t\t\ttDisplayData.verLen = tByte.getUint16();\r\n\r\n\t\t\t\t\ttBoneLen = tByte.getUint16();\r\n\t\t\t\t\tif (tBoneLen > 0) {\r\n\t\t\t\t\t\ttDisplayData.bones = [];\r\n\t\t\t\t\t\tfor (l = 0; l < tBoneLen; l++) {\r\n\t\t\t\t\t\t\tvar tBoneId: number = tByte.getUint16();\r\n\t\t\t\t\t\t\ttDisplayData.bones.push(tBoneId);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttUvLen = tByte.getUint16();\r\n\t\t\t\t\tif (tUvLen > 0) {\r\n\t\t\t\t\t\ttDisplayData.uvs = [];\r\n\t\t\t\t\t\tfor (l = 0; l < tUvLen; l++) {\r\n\t\t\t\t\t\t\ttDisplayData.uvs.push(tByte.getFloat32());\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttWeightLen = tByte.getUint16();\r\n\t\t\t\t\tif (tWeightLen > 0) {\r\n\t\t\t\t\t\ttDisplayData.weights = [];\r\n\t\t\t\t\t\tfor (l = 0; l < tWeightLen; l++) {\r\n\t\t\t\t\t\t\ttDisplayData.weights.push(tByte.getFloat32());\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttTriangleLen = tByte.getUint16();\r\n\t\t\t\t\tif (tTriangleLen > 0) {\r\n\t\t\t\t\t\ttDisplayData.triangles = [];\r\n\t\t\t\t\t\tfor (l = 0; l < tTriangleLen; l++) {\r\n\t\t\t\t\t\t\ttDisplayData.triangles.push(tByte.getUint16());\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttVerticeLen = tByte.getUint16();\r\n\t\t\t\t\tif (tVerticeLen > 0) {\r\n\t\t\t\t\t\ttDisplayData.vertices = [];\r\n\t\t\t\t\t\tfor (l = 0; l < tVerticeLen; l++) {\r\n\t\t\t\t\t\t\ttDisplayData.vertices.push(tByte.getFloat32());\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttLengthLen = tByte.getUint16();\r\n\t\t\t\t\tif (tLengthLen > 0) {\r\n\t\t\t\t\t\ttDisplayData.lengths = [];\r\n\t\t\t\t\t\tfor (l = 0; l < tLengthLen; l++) {\r\n\t\t\t\t\t\t\ttDisplayData.lengths.push(tByte.getFloat32());\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\ttSkinData.slotArr.push(tSlotData);\r\n\t\t\t}\r\n\t\t\tthis.skinDic[tSkinData.name] = tSkinData;\r\n\t\t\tthis.skinDataArray.push(tSkinData);\r\n\t\t}\r\n\t\tvar tReverse: number = tByte.getUint8();\r\n\t\tif (tReverse == 1) {\r\n\t\t\tthis.yReverseMatrix = new Matrix(1, 0, 0, -1, 0, 0);\r\n\t\t\tif (tRootBone) {\r\n\t\t\t\ttRootBone.setTempMatrix(this.yReverseMatrix);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (tRootBone) {\r\n\t\t\t\ttRootBone.setTempMatrix(new Matrix());\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.showSkinByIndex(this.boneSlotDic, 0);\r\n\t\tthis.isParserComplete = true;\r\n\t\tthis.event(Event.COMPLETE, this);\r\n\t}\r\n\r\n\t/**\r\n\t * 得到指定的纹理\r\n\t * @param\tname\t纹理的名字\r\n\t * @return\r\n\t */\r\n\tgetTexture(name: string): Texture {\r\n\t\tvar tTexture: Texture = this.subTextureDic[name];\r\n\t\tif (!tTexture) {\r\n\t\t\ttTexture = this.subTextureDic[name.substr(0, name.length - 1)];\r\n\t\t}\r\n\t\tif (tTexture == null) {\r\n\t\t\treturn this._mainTexture;\r\n\t\t}\r\n\t\treturn tTexture;\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t * 显示指定的皮肤\r\n\t * @param\tboneSlotDic\t插糟字典的引用\r\n\t * @param\tskinIndex\t皮肤的索引\r\n\t * @param\tfreshDisplayIndex\t是否重置插槽纹理\r\n\t */\r\n\tshowSkinByIndex(boneSlotDic: any, skinIndex: number, freshDisplayIndex: boolean = true): boolean {\r\n\t\tif (skinIndex < 0 && skinIndex >= this.skinDataArray.length) return false;\r\n\t\tvar i: number, n: number;\r\n\t\tvar tBoneSlot: BoneSlot;\r\n\t\tvar tSlotData: SlotData;\r\n\t\tvar tSkinData: SkinData = this.skinDataArray[skinIndex];\r\n\t\tif (tSkinData) {\r\n\t\t\tfor (i = 0, n = tSkinData.slotArr.length; i < n; i++) {\r\n\t\t\t\ttSlotData = tSkinData.slotArr[i];\r\n\t\t\t\tif (tSlotData) {\r\n\t\t\t\t\ttBoneSlot = boneSlotDic[tSlotData.name];\r\n\t\t\t\t\tif (tBoneSlot) {\r\n\t\t\t\t\t\ttBoneSlot.showSlotData(tSlotData, freshDisplayIndex);\r\n\t\t\t\t\t\tif (freshDisplayIndex && tBoneSlot.attachmentName != \"undefined\" && tBoneSlot.attachmentName != \"null\") {\r\n\t\t\t\t\t\t\ttBoneSlot.showDisplayByName(tBoneSlot.attachmentName);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\ttBoneSlot.showDisplayByIndex(tBoneSlot.displayIndex);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * 通过皮肤名字得到皮肤索引\r\n\t * @param\tskinName 皮肤名称\r\n\t * @return\r\n\t */\r\n\tgetSkinIndexByName(skinName: string): number {\r\n\t\tvar tSkinData: SkinData;\r\n\t\tfor (var i: number = 0, n: number = this.skinDataArray.length; i < n; i++) {\r\n\t\t\ttSkinData = this.skinDataArray[i];\r\n\t\t\tif (tSkinData.name == skinName) {\r\n\t\t\t\treturn i;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn -1;\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t * 得到缓冲数据\r\n\t * @param\taniIndex\t动画索引\r\n\t * @param\tframeIndex\t帧索引\r\n\t * @return\r\n\t */\r\n\tgetGrahicsDataWithCache(aniIndex: number, frameIndex: number): Graphics {\r\n\t\tif (this._graphicsCache[aniIndex] && this._graphicsCache[aniIndex][frameIndex]) {\r\n\t\t\treturn this._graphicsCache[aniIndex][frameIndex];\r\n\t\t}\r\n\t\t//trace(\"getGrahicsDataWithCache fail:\",aniIndex,frameIndex,this._path);\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t * @override\r\n\t */\r\n\t_setCreateURL(url: string): void {\r\n\t\tthis._skBufferUrl =\tthis._relativeUrl = url;\r\n\t\tsuper._setCreateURL(url);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t * 保存缓冲grahpics\r\n\t * @param\taniIndex\t动画索引\r\n\t * @param\tframeIndex\t帧索引\r\n\t * @param\tgraphics\t要保存的数据\r\n\t */\r\n\tsetGrahicsDataWithCache(aniIndex: number, frameIndex: number, graphics: Graphics): void {\r\n\t\tthis._graphicsCache[aniIndex][frameIndex] = graphics;\r\n\t}\r\n\r\n\tdeleteAniData(aniIndex: number): void {\r\n\t\tif (this._anis[aniIndex]) {\r\n\t\t\tvar tAniDataO: AnimationContent = this._anis[aniIndex];\r\n\t\t\ttAniDataO.bone3DMap = null;\r\n\t\t\ttAniDataO.nodes = null;\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * 释放纹理\r\n\t * @override\r\n\t */\r\n\tdestroy(): void {\r\n\t\tthis._isDestroyed = true;\r\n\t\tvar tTexture: any;\r\n\t\tfor (tTexture in this.subTextureDic) {\r\n\t\t\tif (tTexture) {\r\n\t\t\t\tthis.subTextureDic[tTexture].destroy();\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (tTexture in this._textureDic) {\r\n\t\t\tif (tTexture) {\r\n\t\t\t\tthis._textureDic[tTexture].destroy();\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar tSkinSlotDisplayData: SkinSlotDisplayData;\r\n\t\tfor (var i: number = 0, n: number = this.skinSlotDisplayDataArr.length; i < n; i++) {\r\n\t\t\ttSkinSlotDisplayData = this.skinSlotDisplayDataArr[i];\r\n\t\t\ttSkinSlotDisplayData.destory();\r\n\t\t}\r\n\t\tthis.skinSlotDisplayDataArr.length = 0;\r\n\t\tif (this._relativeUrl) {\r\n\t\t\tdelete Templet.TEMPLET_DICTIONARY[this._relativeUrl];\r\n\t\t}\r\n\t\tsuper.destroy();\r\n\t\tILaya.loader.clearRes(this._skBufferUrl);\r\n\t}\r\n\r\n\t/***********************************下面为一些儿访问接口*****************************************/\r\n\t/**\r\n\t * 通过索引得动画名称\r\n\t * @param\tindex\r\n\t * @return\r\n\t */\r\n\tgetAniNameByIndex(index: number): string {\r\n\t\tvar tAni: any = this.getAnimation(index);\r\n\t\tif (tAni) return tAni.name;\r\n\t\treturn null;\r\n\t}\r\n\r\n\tget rate(): number {\r\n\t\treturn this._rate;\r\n\t}\r\n\r\n\tset rate(v: number) {\r\n\t\tthis._rate = v;\r\n\t}\r\n}\r\n\r\nIAniLib.Templet = Templet;","import { Sprite } from \"../../display/Sprite\";\r\nimport { Byte } from \"../../utils/Byte\";\r\nimport { Handler } from \"../../utils/Handler\";\r\nimport { Const } from \"../../Const\";\r\nimport { Event } from \"../../events/Event\";\r\nimport { ILaya } from \"../../../ILaya\";\r\nimport { Matrix } from \"../../maths/Matrix\";\r\n\r\n\r\n/**\r\n * 动画播放完毕后调度。\r\n * @eventType Event.COMPLETE\r\n */\r\n/*[Event(name = \"complete\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * 播放到某标签后调度。\r\n * @eventType Event.LABEL\r\n */\r\n/*[Event(name = \"label\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * 加载完成后调度。\r\n * @eventType Event.LOADED\r\n */\r\n/*[Event(name = \"loaded\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * 进入帧后调度。\r\n * @eventType Event.FRAME\r\n */\r\n/*[Event(name = \"frame\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * <p> <code>MovieClip</code> 用于播放经过工具处理后的 swf 动画。</p>\r\n */\r\nexport class MovieClip extends Sprite {\r\n\t/**@internal */\r\n\tprotected static _ValueList: any[] = [\"x\", \"y\", \"width\", \"height\", \"scaleX\", \"scaleY\", \"rotation\", \"alpha\"];\r\n\t/**@internal 数据起始位置。*/\r\n\tprotected _start: number = 0;\r\n\t/**@internal 当前位置。*/\r\n\tprotected _Pos: number = 0;\r\n\t/**@internal 数据。*/\r\n\tprotected _data: Byte;\r\n\t/**@internal */\r\n\tprotected _curIndex: number;\r\n\t/**@internal */\r\n\tprotected _preIndex: number;\r\n\t/**@internal */\r\n\tprotected _playIndex: number;\r\n\t/**@internal */\r\n\tprotected _playing: boolean;\r\n\t/**@internal */\r\n\tprotected _ended: boolean = true;\r\n\t/**@internal 总帧数。*/\r\n\tprotected _count: number;\r\n\t/**@internal id_data起始位置表*/\r\n\t_ids: any;\r\n\t/**@internal */\r\n\tprotected _loadedImage: any = {};\r\n\t/**@internal id_实例表*/\r\n\t_idOfSprite: any[];\r\n\t/**@internal 父mc*/\r\n\t_parentMovieClip: MovieClip;\r\n\t/**@internal 需要更新的movieClip表*/\r\n\t_movieClipList: any[];\r\n\t/**@internal */\r\n\tprotected _labels: any;\r\n\t/**资源根目录。*/\r\n\tbasePath: string;\r\n\t/**@internal */\r\n\tprivate _atlasPath: string;\r\n\t/**@internal */\r\n\tprivate _url: string;\r\n\t/**@internal */\r\n\tprivate _isRoot: boolean;\r\n\t/**@internal */\r\n\tprivate _completeHandler: Handler;\r\n\t/**@internal */\r\n\tprivate _endFrame: number = -1;\r\n\r\n\t/** 播放间隔(单位：毫秒)。*/\r\n\tinterval: number = 30;\r\n\t/**是否循环播放 */\r\n\tloop: boolean;\r\n\r\n\t/**\r\n\t * 创建一个 <code>MovieClip</code> 实例。\r\n\t * @param parentMovieClip 父MovieClip,自己创建时不需要传该参数\r\n\t */\r\n\tconstructor(parentMovieClip: MovieClip = null) {\r\n\t\tsuper();\r\n\t\tthis._ids = {};\r\n\t\tthis._idOfSprite = [];\r\n\t\tthis._reset();\r\n\t\tthis._playing = false;\r\n\t\tthis._parentMovieClip = parentMovieClip;\r\n\t\tif (!parentMovieClip) {\r\n\t\t\tthis._movieClipList = [this];\r\n\t\t\tthis._isRoot = true;\r\n\t\t\tthis._setBitUp(Const.DISPLAY);\r\n\t\t} else {\r\n\t\t\tthis._isRoot = false;\r\n\t\t\tthis._movieClipList = parentMovieClip._movieClipList;\r\n\t\t\tthis._movieClipList.push(this);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * <p>销毁此对象。以及销毁引用的Texture</p>\r\n\t * @param\tdestroyChild 是否同时销毁子节点，若值为true,则销毁子节点，否则不销毁子节点。\r\n\t * @override\r\n\t */\r\n\tdestroy(destroyChild: boolean = true): void {\r\n\t\tthis._clear();\r\n\t\tsuper.destroy(destroyChild);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t * @override \r\n\t */\r\n\t_setDisplay(value: boolean): void {\r\n\t\tsuper._setDisplay(value);\r\n\t\tif (this._isRoot) {\r\n\t\t\tthis._onDisplay(value);\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @internal \r\n\t * @override\r\n\t */\r\n\tprotected _onDisplay(value?: boolean): void {\r\n\t\tif (value) this.timer.loop(this.interval, this, this.updates, null, true);\r\n\t\telse this.timer.clear(this, this.updates);\r\n\t}\r\n\r\n\t/**@private 更新时间轴*/\r\n\t//TODO:coverage\r\n\tupdates(): void {\r\n\t\tif (this._parentMovieClip) return;\r\n\t\tvar i: number, len: number;\r\n\t\tlen = this._movieClipList.length;\r\n\t\tfor (i = 0; i < len; i++) {\r\n\t\t\tthis._movieClipList[i] && this._movieClipList[i]._update();\r\n\t\t}\r\n\t}\r\n\r\n\t/**当前播放索引。*/\r\n\tget index(): number {\r\n\t\treturn this._playIndex;\r\n\t}\r\n\r\n\tset index(value: number) {\r\n\t\tthis._playIndex = value;\r\n\t\tif (this._data)\r\n\t\t\tthis._displayFrame(this._playIndex);\r\n\t\tif (this._labels && this._labels[value]) this.event(Event.LABEL, this._labels[value]);\r\n\t}\r\n\r\n\t/**\r\n\t * 增加一个标签到index帧上，播放到此index后会派发label事件\r\n\t * @param\tlabel\t标签名称\r\n\t * @param\tindex\t索引位置\r\n\t */\r\n\taddLabel(label: string, index: number): void {\r\n\t\tif (!this._labels) this._labels = {};\r\n\t\tthis._labels[index] = label;\r\n\t}\r\n\r\n\t/**\r\n\t * 删除某个标签\r\n\t * @param\tlabel 标签名字，如果label为空，则删除所有Label\r\n\t */\r\n\tremoveLabel(label: string): void {\r\n\t\tif (!label) this._labels = null;\r\n\t\telse if (!this._labels) {\r\n\t\t\tfor (var name in this._labels) {\r\n\t\t\t\tif (this._labels[name] === label) {\r\n\t\t\t\t\tdelete this._labels[name];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 帧总数。\r\n\t */\r\n\tget count(): number {\r\n\t\treturn this._count;\r\n\t}\r\n\r\n\t/**\r\n\t * 是否在播放中\r\n\t */\r\n\tget playing(): boolean {\r\n\t\treturn this._playing;\r\n\t}\r\n\t/**\r\n\t * @internal\r\n\t * 动画的帧更新处理函数。\r\n\t */\r\n\t//TODO:coverage\r\n\tprivate _update(): void {\r\n\t\tif (!this._data) return;\r\n\t\tif (!this._playing) return;\r\n\t\tthis._playIndex++;\r\n\t\tif (this._playIndex >= this._count) {\r\n\t\t\tif (!this.loop) {\r\n\t\t\t\tthis._playIndex--;\r\n\t\t\t\tthis.stop();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis._playIndex = 0;\r\n\t\t}\r\n\t\tthis._parseFrame(this._playIndex);\r\n\t\tif (this._labels && this._labels[this._playIndex]) this.event(Event.LABEL, this._labels[this._playIndex]);\r\n\t\tif (this._endFrame != -1 && this._endFrame == this._playIndex) {\r\n\t\t\tthis._endFrame = -1;\r\n\t\t\tif (this._completeHandler != null) {\r\n\t\t\t\tvar handler: Handler = this._completeHandler;\r\n\t\t\t\tthis._completeHandler = null;\r\n\t\t\t\thandler.run();\r\n\t\t\t}\r\n\t\t\tthis.stop();\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 停止播放动画。\r\n\t */\r\n\tstop(): void {\r\n\t\tthis._playing = false;\r\n\t}\r\n\r\n\t/**\r\n\t * 跳到某帧并停止播放动画。\r\n\t * @param frame 要跳到的帧\r\n\t */\r\n\tgotoAndStop(index: number): void {\r\n\t\tthis.index = index;\r\n\t\tthis.stop();\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t * 清理。\r\n\t */\r\n\tprivate _clear(): void {\r\n\t\tthis.stop();\r\n\t\tthis._idOfSprite.length = 0;\r\n\t\tif (!this._parentMovieClip) {\r\n\t\t\tthis.timer.clear(this, this.updates);\r\n\t\t\tvar i: number, len: number;\r\n\t\t\tlen = this._movieClipList.length;\r\n\t\t\tfor (i = 0; i < len; i++) {\r\n\t\t\t\tif (this._movieClipList[i] != this)\r\n\t\t\t\t\tthis._movieClipList[i]._clear();\r\n\t\t\t}\r\n\t\t\tthis._movieClipList.length = 0;\r\n\t\t}\r\n\t\tif (this._atlasPath) {\r\n\t\t\tILaya.Loader.clearRes(this._atlasPath);\r\n\t\t}\r\n\t\tvar key: string;\r\n\t\tfor (key in this._loadedImage) {\r\n\t\t\tif (this._loadedImage[key]) {\r\n\t\t\t\tILaya.Loader.clearRes(key);\r\n\t\t\t\tthis._loadedImage[key] = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.removeChildren();\r\n\t\tthis.graphics = null;\r\n\t\tthis._parentMovieClip = null;\r\n\t}\r\n\r\n\t/**\r\n\t * 播放动画。\r\n\t * @param\tindex 帧索引。\r\n\t */\r\n\tplay(index: number = 0, loop: boolean = true): void {\r\n\t\tthis.loop = loop;\r\n\t\tthis._playing = true;\r\n\t\tif (this._data)\r\n\t\t\tthis._displayFrame(index);\r\n\t}\r\n\r\n\t/**@internal */\r\n\t//TODO:coverage\r\n\tprivate _displayFrame(frameIndex: number = -1): void {\r\n\t\tif (frameIndex != -1) {\r\n\t\t\tif (this._curIndex > frameIndex) this._reset();\r\n\t\t\tthis._parseFrame(frameIndex);\r\n\t\t}\r\n\t}\r\n\r\n\t/**@internal */\r\n\tprivate _reset(rm: boolean = true): void {\r\n\t\tif (rm && this._curIndex != 1) this.removeChildren();\r\n\t\tthis._preIndex = this._curIndex = -1;\r\n\t\tthis._Pos = this._start;\r\n\t}\r\n\r\n\t/**@internal */\r\n\t//TODO:coverage\r\n\tprivate _parseFrame(frameIndex: number): void {\r\n\t\tvar mc: MovieClip, sp: Sprite, key: number, type: number, tPos: number, ttype: number, ifAdd: boolean = false;\r\n\t\tvar _idOfSprite: any[] = this._idOfSprite, _data: Byte = this._data, eStr: string;\r\n\t\tif (this._ended) this._reset();\r\n\t\t_data.pos = this._Pos;\r\n\t\tthis._ended = false;\r\n\t\tthis._playIndex = frameIndex;\r\n\t\tif (this._curIndex > frameIndex && frameIndex < this._preIndex) {\r\n\t\t\tthis._reset(true);\r\n\t\t\t_data.pos = this._Pos;\r\n\t\t}\r\n\t\twhile ((this._curIndex <= frameIndex) && (!this._ended)) {\r\n\t\t\ttype = _data.getUint16();\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase 12: //new MC\r\n\t\t\t\t\tkey = _data.getUint16();\r\n\t\t\t\t\ttPos = this._ids[_data.getUint16()];\r\n\t\t\t\t\tthis._Pos = _data.pos;\r\n\t\t\t\t\t_data.pos = tPos;\r\n\t\t\t\t\tif ((ttype = _data.getUint8()) == 0) {\r\n\t\t\t\t\t\tvar pid: number = _data.getUint16();\r\n\t\t\t\t\t\tsp = _idOfSprite[key]\r\n\t\t\t\t\t\tif (!sp) {\r\n\t\t\t\t\t\t\tsp = _idOfSprite[key] = new Sprite();\r\n\t\t\t\t\t\t\tvar spp: Sprite = new Sprite();\r\n\t\t\t\t\t\t\tspp.loadImage(this.basePath + pid + \".png\");\r\n\t\t\t\t\t\t\tthis._loadedImage[this.basePath + pid + \".png\"] = true;\r\n\t\t\t\t\t\t\tsp.addChild(spp);\r\n\t\t\t\t\t\t\tspp.size(_data.getFloat32(), _data.getFloat32());\r\n\t\t\t\t\t\t\tvar mat: Matrix = _data._getMatrix();\r\n\t\t\t\t\t\t\tspp.transform = mat;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tsp.alpha = 1;\r\n\t\t\t\t\t} else if (ttype == 1) {\r\n\t\t\t\t\t\tmc = _idOfSprite[key]\r\n\t\t\t\t\t\tif (!mc) {\r\n\t\t\t\t\t\t\t_idOfSprite[key] = mc = new MovieClip(this);\r\n\t\t\t\t\t\t\tmc.interval = this.interval;\r\n\t\t\t\t\t\t\tmc._ids = this._ids;\r\n\t\t\t\t\t\t\tmc.basePath = this.basePath;\r\n\t\t\t\t\t\t\tmc._setData(_data, tPos);\r\n\t\t\t\t\t\t\tmc._initState();\r\n\t\t\t\t\t\t\tmc.play(0);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tmc.alpha = 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t_data.pos = this._Pos;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 3: //addChild\r\n\t\t\t\t\tvar node: Sprite = _idOfSprite[ /*key*/_data.getUint16()];\r\n\t\t\t\t\tif (node) {\r\n\t\t\t\t\t\tthis.addChild(node);\r\n\t\t\t\t\t\tnode.zOrder = _data.getUint16();\r\n\t\t\t\t\t\tifAdd = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 4: //remove\r\n\t\t\t\t\tnode = _idOfSprite[ /*key*/_data.getUint16()];\r\n\t\t\t\t\tnode && node.removeSelf();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 5: //setValue\r\n\t\t\t\t\t_idOfSprite[_data.getUint16()][MovieClip._ValueList[_data.getUint16()]] = (_data.getFloat32());\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 6: //visible\r\n\t\t\t\t\t_idOfSprite[_data.getUint16()].visible = ( /*visible*/_data.getUint8() > 0);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 7: //SetTransform\r\n\t\t\t\t\tsp = _idOfSprite[ /*key*/_data.getUint16()]; //.transform=mt;\r\n\t\t\t\t\tvar mt: Matrix = sp.transform || Matrix.create();\r\n\t\t\t\t\tmt.setTo(_data.getFloat32(), _data.getFloat32(), _data.getFloat32(), _data.getFloat32(), _data.getFloat32(), _data.getFloat32());\r\n\t\t\t\t\tsp.transform = mt;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 8: //pos\r\n\t\t\t\t\t_idOfSprite[_data.getUint16()].setPos(_data.getFloat32(), _data.getFloat32());\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 9: //size\r\n\t\t\t\t\t_idOfSprite[_data.getUint16()].setSize(_data.getFloat32(), _data.getFloat32());\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 10: //alpha\r\n\t\t\t\t\t_idOfSprite[ /*key*/_data.getUint16()].alpha = /*alpha*/ _data.getFloat32();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 11: //scale\r\n\t\t\t\t\t_idOfSprite[_data.getUint16()].setScale(_data.getFloat32(), _data.getFloat32());\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 98: //event\t\t\r\n\t\t\t\t\teStr = _data.getString();\r\n\t\t\t\t\tthis.event(eStr);\r\n\t\t\t\t\tif (eStr == \"stop\") this.stop();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 99: //FrameBegin\t\t\t\t\r\n\t\t\t\t\tthis._curIndex = _data.getUint16();\r\n\t\t\t\t\tifAdd && this.updateZOrder();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 100: //cmdEnd\r\n\t\t\t\t\tthis._count = this._curIndex + 1;\r\n\t\t\t\t\tthis._ended = true;\r\n\t\t\t\t\tif (this._playing) {\r\n\t\t\t\t\t\tthis.event(Event.FRAME);\r\n\t\t\t\t\t\tthis.event(Event.END);\r\n\t\t\t\t\t\tthis.event(Event.COMPLETE);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis._reset(false);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this._playing && !this._ended) this.event(Event.FRAME);\r\n\t\tthis._Pos = _data.pos;\r\n\t}\r\n\r\n\t/**@internal */\r\n\t//TODO:coverage\r\n\t_setData(data: Byte, start: number): void {\r\n\t\tthis._data = data;\r\n\t\tthis._start = start + 3;\r\n\t}\r\n\r\n\t/**\r\n\t * 资源地址。\r\n\t */\r\n\tset url(path: string) {\r\n\t\tthis.load(path);\r\n\t}\r\n\r\n\t/**\r\n\t * 加载资源。\r\n\t * @param\turl swf 资源地址。\r\n\t * @param   atlas  是否使用图集资源\r\n\t * @param   atlasPath  图集路径，默认使用与swf同名的图集\r\n\t */\r\n\tload(url: string, atlas: boolean = false, atlasPath: string = null): void {\r\n\t\tthis._url = url;\r\n\t\tif (atlas) this._atlasPath = atlasPath ? atlasPath : url.split(\".swf\")[0] + \".json\";\r\n\t\tthis.stop();\r\n\t\tthis._clear();\r\n\t\tthis._movieClipList = [this];\r\n\t\tvar urls: any[];\r\n\t\turls = [{ url: url, type: ILaya.Loader.BUFFER }];\r\n\t\tif (this._atlasPath) {\r\n\t\t\turls.push({ url: this._atlasPath, type: ILaya.Loader.ATLAS });\r\n\t\t}\r\n\t\tILaya.loader.load(urls, Handler.create(this, this._onLoaded));\r\n\t}\r\n\r\n\t/**@internal */\r\n\tprivate _onLoaded(): void {\r\n\t\tvar data: any;\r\n\t\tdata = ILaya.Loader.getRes(this._url);\r\n\t\tif (!data) {\r\n\t\t\tthis.event(Event.ERROR, \"file not find\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (this._atlasPath && !ILaya.Loader.getAtlas(this._atlasPath)) {\r\n\t\t\tthis.event(Event.ERROR, \"Atlas not find\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// guo TODO getAtlas 返回的会有dir么， 应该是数组\r\n\t\tthis.basePath = this._atlasPath ? (ILaya.Loader.getAtlas(this._atlasPath) as any).dir : this._url.split(\".swf\")[0] + \"/image/\";\r\n\t\tthis._initData(data);\r\n\t}\r\n\r\n\t/**@internal */\r\n\t//TODO:coverage\r\n\tprivate _initState(): void {\r\n\t\tthis._reset();\r\n\t\tthis._ended = false;\r\n\t\tvar preState: boolean = this._playing;\r\n\t\tthis._playing = false;\r\n\t\tthis._curIndex = 0;\r\n\t\twhile (!this._ended) this._parseFrame(++this._curIndex);\r\n\t\tthis._playing = preState;\r\n\t}\r\n\r\n\t/**@internal */\r\n\t//TODO:coverage\r\n\tprivate _initData(data: any): void {\r\n\t\tthis._data = new Byte(data);\r\n\t\tvar i: number, len: number = this._data.getUint16();\r\n\t\tfor (i = 0; i < len; i++) this._ids[this._data.getInt16()] = this._data.getInt32();\r\n\t\tthis.interval = 1000 / this._data.getUint16();\r\n\t\tthis._setData(this._data, this._ids[32767]);\r\n\t\tthis._initState();\r\n\t\tthis.play(0);\r\n\t\tthis.event(Event.LOADED);\r\n\t\tif (!this._parentMovieClip) this.timer.loop(this.interval, this, this.updates, null, true);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * 从开始索引播放到结束索引，结束之后出发complete回调\r\n\t * @param\tstart\t开始索引\r\n\t * @param\tend\t\t结束索引\r\n\t * @param\tcomplete\t结束回调\r\n\t */\r\n\tplayTo(start: number, end: number, complete: Handler = null): void {\r\n\t\tthis._completeHandler = complete;\r\n\t\tthis._endFrame = end;\r\n\t\tthis.play(start, false);\r\n\t}\r\n}\r\n\r\n"],"names":["Byte","EventDispatcher","Stat","Event","Bezier","Resource","MathUtil","Graphics","Matrix","Sprite","ILaya","Utils","Rectangle","Handler","SoundManager","ClassUtils","Texture","Const"],"mappings":"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"}