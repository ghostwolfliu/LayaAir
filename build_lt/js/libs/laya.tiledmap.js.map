{"version":3,"file":"laya.tiledmap.js","sources":["../../../src/layaAir/laya/map/GridSprite.ts","../../../src/layaAir/laya/map/IMap.ts","../../../src/layaAir/laya/map/TileAniSprite.ts","../../../src/layaAir/laya/map/MapLayer.ts","../../../src/layaAir/laya/map/TileTexSet.ts","../../../src/layaAir/laya/map/TiledMap.ts"],"sourcesContent":["import { TiledMap } from \"./TiledMap\";\r\nimport { TileAniSprite } from \"./TileAniSprite\";\r\nimport { Sprite } from \"../display/Sprite\";\r\n\r\n\r\n\r\n/**\r\n * 地图的每层都会分块渲染处理\r\n * 本类就是地图的块数据\r\n * @author ...\r\n */\r\nexport class GridSprite extends Sprite {\r\n\r\n    /**相对于地图X轴的坐标*/\r\n    relativeX: number = 0;\r\n    /**相对于地图Y轴的坐标*/\r\n    relativeY: number = 0;\r\n    /**是否用于对象层的独立物件*/\r\n    isAloneObject: boolean = false;\r\n    /**当前GRID中是否有动画*/\r\n    isHaveAnimation: boolean = false;\r\n    /**当前GRID包含的动画*/\r\n    aniSpriteArray: any[];\r\n    /**当前GRID包含多少个TILE(包含动画)*/\r\n    drawImageNum: number = 0;\r\n\r\n    private _map: TiledMap = null;//当前地图对象的引用\r\n\r\n    /**\r\n     * 传入必要的参数，用于裁剪，跟确认此对象类型\r\n     * @param\tmap\t把地图的引用传进来，参与一些裁剪计算\r\n     * @param\tobjectKey true:表示当前GridSprite是个活动对象，可以控制，false:地图层的组成块\r\n     */\r\n    initData(map: TiledMap, objectKey: boolean = false): void {\r\n        this._map = map;\r\n        this.isAloneObject = objectKey;\r\n    }\r\n\r\n    /**\r\n     * 把一个动画对象绑定到当前GridSprite\r\n     * @param\tsprite 动画的显示对象\r\n     */\r\n    addAniSprite(sprite: TileAniSprite): void {\r\n        if (this.aniSpriteArray == null) {\r\n            this.aniSpriteArray = [];\r\n        }\r\n        this.aniSpriteArray.push(sprite);\r\n    }\r\n\r\n    /**\r\n     * 显示当前GridSprite，并把上面的动画全部显示\r\n     */\r\n    show(): void {\r\n        if (!this.visible) {\r\n            this.visible = true;\r\n            if (this.aniSpriteArray == null) {\r\n                return;\r\n            }\r\n            var tAniSprite: TileAniSprite;\r\n            for (var i: number = 0; i < this.aniSpriteArray.length; i++) {\r\n                tAniSprite = this.aniSpriteArray[i];\r\n                tAniSprite.show();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 隐藏当前GridSprite，并把上面绑定的动画全部移除\r\n     */\r\n    hide(): void {\r\n        if (this.visible) {\r\n            this.visible = false;\r\n            if (this.aniSpriteArray == null) {\r\n                return;\r\n            }\r\n            var tAniSprite: TileAniSprite;\r\n            for (var i: number = 0; i < this.aniSpriteArray.length; i++) {\r\n                tAniSprite = this.aniSpriteArray[i];\r\n                tAniSprite.hide();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 刷新坐标，当我们自己控制一个GridSprite移动时，需要调用此函数，手动刷新\r\n     */\r\n    updatePos(): void {\r\n        if (this.isAloneObject) {\r\n            if (this._map) {\r\n                this.x = this.relativeX - this._map._viewPortX;\r\n                this.y = this.relativeY - this._map._viewPortY;\r\n            }\r\n            if (this.x < 0 || this.x > this._map.viewPortWidth || this.y < 0 || this.y > this._map.viewPortHeight) {\r\n                this.hide();\r\n            } else {\r\n                this.show();\r\n            }\r\n        } else {\r\n            if (this._map) {\r\n                this.x = this.relativeX - this._map._viewPortX;\r\n                this.y = this.relativeY - this._map._viewPortY;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 重置当前对象的所有属性\r\n     */\r\n    clearAll(): void {\r\n        if (this._map) {\r\n            this._map = null;\r\n        }\r\n        this.visible = false;\r\n\r\n        var tAniSprite: TileAniSprite;\r\n\r\n        if (this.aniSpriteArray != null) {\r\n            for (var i: number = 0; i < this.aniSpriteArray.length; i++) {\r\n                tAniSprite = this.aniSpriteArray[i];\r\n                tAniSprite.clearAll();\r\n            }\r\n        }\r\n\r\n        this.destroy();\r\n        this.relativeX = 0;\r\n        this.relativeY = 0;\r\n        this.isHaveAnimation = false;\r\n        this.aniSpriteArray = null;\r\n        this.drawImageNum = 0;\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { TiledMap } from \"./TiledMap\";\r\n/**\r\n * @internal\r\n */\r\nexport class IMap{\r\n    static TiledMap:typeof TiledMap=null;\r\n}","import { TileTexSet } from \"./TileTexSet\";\r\nimport { Sprite } from \"../display/Sprite\";\r\n\r\n/**\r\n * TildMap的动画显示对象（一个动画（TileTexSet），可以绑定多个动画显示对象（TileAniSprite））\r\n * @author ...\r\n */\r\nexport class TileAniSprite extends Sprite {\r\n\r\n    private _tileTextureSet: TileTexSet = null;//动画的引用\r\n    private _aniName: string = null;//当前动画显示对象的名字，名字唯一\r\n\r\n    /**\r\n     * 确定当前显示对象的名称以及属于哪个动画\r\n     * @param\taniName\t当前动画显示对象的名字，名字唯一\r\n     * @param\ttileTextureSet 当前显示对象属于哪个动画（一个动画，可以绑定多个同类显示对象）\r\n     */\r\n    setTileTextureSet(aniName: string, tileTextureSet: TileTexSet): void {\r\n        this._aniName = aniName;\r\n        this._tileTextureSet = tileTextureSet;\r\n        tileTextureSet.addAniSprite(this._aniName, this);\r\n    }\r\n\r\n    /**\r\n     * 把当前动画加入到对应的动画刷新列表中\r\n     */\r\n    show(): void {\r\n        this._tileTextureSet.addAniSprite(this._aniName, this);\r\n    }\r\n\r\n    /**\r\n     * 把当前动画从对应的动画刷新列表中移除\r\n     */\r\n    hide(): void {\r\n        this._tileTextureSet.removeAniSprite(this._aniName);\r\n    }\r\n\r\n    /**\r\n     * 清理\r\n     */\r\n    clearAll(): void {\r\n        this._tileTextureSet.removeAniSprite(this._aniName);\r\n        this.destroy();\r\n        this._tileTextureSet = null;\r\n        this._aniName = null;\r\n    }\r\n}\r\n\r\n\r\n","import { TileTexSet } from \"./TileTexSet\";\r\nimport { TileAniSprite } from \"./TileAniSprite\";\r\nimport { GridSprite } from \"./GridSprite\";\r\nimport { IMap } from \"./IMap\";\r\nimport { TiledMap } from \"./TiledMap\";\r\nimport { Sprite } from \"../display/Sprite\";\r\nimport { Point } from \"../maths/Point\";\r\nimport { Texture } from \"../resource/Texture\";\r\n\r\n\r\n/**\r\n * 地图支持多层渲染（例如，地表层，植被层，建筑层等）\r\n * 本类就是层级类\r\n * @author ...\r\n */\r\nexport class MapLayer extends Sprite {\r\n\r\n    private _map: TiledMap;\r\n    /**@internal */\r\n    _mapData: any[] = null;\r\n\r\n    private _tileWidthHalf: number = 0;\r\n    private _tileHeightHalf: number = 0;\r\n\r\n    private _mapWidthHalf: number = 0;\r\n    private _mapHeightHalf: number = 0;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _gridSpriteArray: any[] = [];\r\n    private _objDic: any = null;//用来做字典，方便查询\r\n    private _dataDic: any = null;\r\n\r\n    private _tempMapPos: Point = new Point();//临时变量\r\n    private _properties: any;\r\n\r\n    /**被合到的层*/\r\n    tarLayer: MapLayer;\r\n\r\n    /**当前Layer的名称*/\r\n    layerName: string = null;\r\n\r\n    /**\r\n     * 解析LAYER数据，以及初始化一些数据\r\n     * @param\tlayerData 地图数据中，layer数据的引用\r\n     * @param\tmap 地图的引用\r\n     */\r\n    init(layerData: any, map: TiledMap): void {\r\n        this._map = map;\r\n        this._mapData = layerData.data;\r\n        //地图宽和高（单位:格子）\r\n        var tHeight: number = layerData.height;\r\n        var tWidth: number = layerData.width;\r\n\r\n        var tTileW: number = map.tileWidth;\r\n        var tTileH: number = map.tileHeight;\r\n\r\n        this.layerName = layerData.name;\r\n        this._properties = layerData.properties;\r\n        this.alpha = layerData.opacity;\r\n\r\n        this._tileWidthHalf = tTileW / 2;\r\n        this._tileHeightHalf = tTileH / 2;\r\n\r\n        //减一半的格子，加到这，是因为，下面计算坐标的时候，可以减少计算量\r\n        this._mapWidthHalf = this._map.width / 2 - this._tileWidthHalf;\r\n        this._mapHeightHalf = this._map.height / 2;\r\n        //这里要特别注意，有时间去查查JS源代码支持的所有类型\r\n        switch (layerData.type) {\r\n            case \"tilelayer\":\r\n                break;\r\n            case \"objectgroup\":\r\n                //这里的东西必需要一开始就创建，所以要用物品的动态管理做下\r\n                var tObjectGid: number = 0;\r\n                var tArray: any[] = layerData.objects;\r\n                if (tArray.length > 0) {\r\n                    this._objDic = {};\r\n                    this._dataDic = {};\r\n                }\r\n                var tObjectData: any;\r\n                var tObjWidth: number;\r\n                var tObjHeight: number;\r\n                for (var i: number = 0; i < tArray.length; i++) {\r\n                    tObjectData = tArray[i];\r\n                    this._dataDic[tObjectData.name] = tObjectData;\r\n                    //这里要看具体需求，看是不是要开放\r\n                    if (tObjectData.visible == true) {\r\n                        tObjWidth = tObjectData.width;\r\n                        tObjHeight = tObjectData.height;\r\n                        var tSprite: GridSprite = map.getSprite(tObjectData.gid, tObjWidth, tObjHeight);\r\n                        if (tSprite != null) {\r\n                            switch (this._map.orientation) {\r\n                                case IMap.TiledMap.ORIENTATION_ISOMETRIC:\r\n                                    this.getScreenPositionByTilePos(tObjectData.x / tTileH, tObjectData.y / tTileH, Point.TEMP);\r\n                                    tSprite.pivot(tObjWidth / 2, tObjHeight / 2);\r\n                                    tSprite.rotation = tObjectData.rotation;\r\n                                    tSprite.x = tSprite.relativeX = Point.TEMP.x + this._map.viewPortX;\r\n                                    tSprite.y = tSprite.relativeY = Point.TEMP.y + this._map.viewPortY - tObjHeight / 2;\r\n                                    break;\r\n                                case IMap.TiledMap.ORIENTATION_STAGGERED://对象旋转后坐标计算的不对。。\r\n                                    tSprite.pivot(tObjWidth / 2, tObjHeight / 2);\r\n                                    tSprite.rotation = tObjectData.rotation;\r\n                                    tSprite.x = tSprite.relativeX = tObjectData.x + tObjWidth / 2;\r\n                                    tSprite.y = tSprite.relativeY = tObjectData.y - tObjHeight / 2;\r\n                                    break;\r\n                                case IMap.TiledMap.ORIENTATION_ORTHOGONAL:\r\n                                    tSprite.pivot(tObjWidth / 2, tObjHeight / 2);\r\n                                    tSprite.rotation = tObjectData.rotation;\r\n                                    tSprite.x = tSprite.relativeX = tObjectData.x + tObjWidth / 2;\r\n                                    tSprite.y = tSprite.relativeY = tObjectData.y - tObjHeight / 2;\r\n                                    break;\r\n                                case IMap.TiledMap.ORIENTATION_HEXAGONAL://待测试\r\n                                    tSprite.x = tSprite.relativeX = tObjectData.x;\r\n                                    tSprite.y = tSprite.relativeY = tObjectData.y;\r\n                                    break;\r\n                            }\r\n                            this.addChild(tSprite);\r\n                            this._gridSpriteArray.push(tSprite);\r\n                            this._objDic[tObjectData.name] = tSprite;\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    /******************************************对外接口*********************************************/\r\n    /**\r\n     * 通过名字获取控制对象，如果找不到返回为null\r\n     * @param\tobjName 所要获取对象的名字\r\n     * @return\r\n     */\r\n    getObjectByName(objName: string): GridSprite {\r\n        if (this._objDic) {\r\n            return this._objDic[objName];\r\n        }\r\n        return null;\r\n    }\r\n\r\n\r\n    /**\r\n     * 通过名字获取数据，如果找不到返回为null\r\n     * @param\tobjName 所要获取对象的名字\r\n     * @return\r\n     */\r\n    getObjectDataByName(objName: string): any {\r\n        if (this._dataDic) {\r\n            return this._dataDic[objName];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 得到地图层的自定义属性\r\n     * @param\tname\r\n     * @return\r\n     */\r\n    getLayerProperties(name: string): any {\r\n        if (this._properties) {\r\n            return this._properties[name];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 得到指定格子的数据\r\n     * @param\ttileX 格子坐标X\r\n     * @param\ttileY 格子坐标Y\r\n     * @return\r\n     */\r\n    getTileData(tileX: number, tileY: number): number {\r\n        if (tileY >= 0 && tileY < this._map.numRowsTile && tileX >= 0 && tileX < this._map.numColumnsTile) {\r\n            var tIndex: number = tileY * this._map.numColumnsTile + tileX;\r\n            var tMapData: any[] = this._mapData;\r\n            if (tMapData != null && tIndex < tMapData.length) {\r\n                return tMapData[tIndex];\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * 通过地图坐标得到屏幕坐标\r\n     * @param\ttileX 格子坐标X\r\n     * @param\ttileY 格子坐标Y\r\n     * @param\tscreenPos 把计算好的屏幕坐标数据，放到此对象中\r\n     */\r\n    getScreenPositionByTilePos(tileX: number, tileY: number, screenPos: Point = null): void {\r\n        if (screenPos) {\r\n            switch (this._map.orientation) {\r\n                case IMap.TiledMap.ORIENTATION_ISOMETRIC:\r\n                    screenPos.x = this._map.width / 2 - (tileY - tileX) * this._tileWidthHalf;\r\n                    screenPos.y = (tileY + tileX) * this._tileHeightHalf;\r\n                    break;\r\n                case IMap.TiledMap.ORIENTATION_STAGGERED:\r\n                    tileX = Math.floor(tileX);\r\n                    tileY = Math.floor(tileY);\r\n                    screenPos.x = tileX * this._map.tileWidth + (tileY & 1) * this._tileWidthHalf;\r\n                    screenPos.y = tileY * this._tileHeightHalf;\r\n                    break;\r\n                case IMap.TiledMap.ORIENTATION_ORTHOGONAL:\r\n                    screenPos.x = tileX * this._map.tileWidth;\r\n                    screenPos.y = tileY * this._map.tileHeight;\r\n                    break;\r\n                case IMap.TiledMap.ORIENTATION_HEXAGONAL:\r\n                    tileX = Math.floor(tileX);\r\n                    tileY = Math.floor(tileY);\r\n                    var tTileHeight: number = this._map.tileHeight * 2 / 3;\r\n                    screenPos.x = (tileX * this._map.tileWidth + tileY % 2 * this._tileWidthHalf) % this._map.gridWidth;\r\n                    screenPos.y = (tileY * tTileHeight) % this._map.gridHeight;\r\n                    break;\r\n            }\r\n            //地图坐标转换成屏幕坐标\r\n            screenPos.x = (screenPos.x + this._map.viewPortX) * this._map.scale;\r\n            screenPos.y = (screenPos.y + this._map.viewPortY) * this._map.scale;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 通过屏幕坐标来获取选中格子的数据\r\n     * @param\tscreenX 屏幕坐标x\r\n     * @param\tscreenY 屏幕坐标y\r\n     * @return\r\n     */\r\n    getTileDataByScreenPos(screenX: number, screenY: number): number {\r\n        var tData: number = 0;\r\n        if (this.getTilePositionByScreenPos(screenX, screenY, this._tempMapPos)) {\r\n            tData = this.getTileData(Math.floor(this._tempMapPos.x), Math.floor(this._tempMapPos.y));\r\n        }\r\n        return tData;\r\n    }\r\n\r\n    /**\r\n     * 通过屏幕坐标来获取选中格子的索引\r\n     * @param\tscreenX 屏幕坐标x\r\n     * @param\tscreenY 屏幕坐标y\r\n     * @param\tresult 把计算好的格子坐标，放到此对象中\r\n     * @return\r\n     */\r\n    getTilePositionByScreenPos(screenX: number, screenY: number, result: Point = null): boolean {\r\n        //转换成地图坐标\r\n        screenX = screenX / this._map.scale - this._map.viewPortX;\r\n        screenY = screenY / this._map.scale - this._map.viewPortY;\r\n        var tTileW: number = this._map.tileWidth;\r\n        var tTileH: number = this._map.tileHeight;\r\n\r\n        var tV: number = 0;\r\n        var tU: number = 0;\r\n        switch (this._map.orientation) {\r\n            case IMap.TiledMap.ORIENTATION_ISOMETRIC://45度角\r\n                var tDirX: number = screenX - this._map.width / 2;\r\n                var tDirY: number = screenY;\r\n                tV = -(tDirX / tTileW - tDirY / tTileH);\r\n                tU = tDirX / tTileW + tDirY / tTileH;\r\n                if (result) {\r\n                    result.x = tU;\r\n                    result.y = tV;\r\n                }\r\n                return true;\r\n                break;\r\n            case IMap.TiledMap.ORIENTATION_STAGGERED://45度交错地图\r\n                if (result) {\r\n                    var cx: number, cy: number, rx: number, ry: number;\r\n                    cx = Math.floor(screenX / tTileW) * tTileW + tTileW / 2;        //计算出当前X所在的以tileWidth为宽的矩形的中心的X坐标\r\n                    cy = Math.floor(screenY / tTileH) * tTileH + tTileH / 2;//计算出当前Y所在的以tileHeight为高的矩形的中心的Y坐标\r\n\r\n                    rx = (screenX - cx) * tTileH / 2;\r\n                    ry = (screenY - cy) * tTileW / 2;\r\n\r\n                    if (Math.abs(rx) + Math.abs(ry) <= tTileW * tTileH / 4) {\r\n                        tU = Math.floor(screenX / tTileW);\r\n                        tV = Math.floor(screenY / tTileH) * 2;\r\n                    } else {\r\n                        screenX = screenX - tTileW / 2;\r\n                        tU = Math.floor(screenX / tTileW) + 1;\r\n                        screenY = screenY - tTileH / 2;\r\n                        tV = Math.floor(screenY / tTileH) * 2 + 1;\r\n                    }\r\n                    result.x = tU - (tV & 1);\r\n                    result.y = tV;\r\n                }\r\n                return true;\r\n                break;\r\n            case IMap.TiledMap.ORIENTATION_ORTHOGONAL://直角\r\n                tU = screenX / tTileW;\r\n                tV = screenY / tTileH;\r\n                if (result) {\r\n                    result.x = tU;\r\n                    result.y = tV;\r\n                }\r\n                return true;\r\n                break;\r\n            case IMap.TiledMap.ORIENTATION_HEXAGONAL://六边形\r\n                var tTileHeight: number = tTileH * 2 / 3;\r\n                tV = screenY / tTileHeight;\r\n                tU = (screenX - tV % 2 * this._tileWidthHalf) / tTileW;\r\n                if (result) {\r\n                    result.x = tU;\r\n                    result.y = tV;\r\n                }\r\n                break;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /***********************************************************************************************/\r\n    /**\r\n     * 得到一个GridSprite\r\n     * @param\tgridX 当前Grid的X轴索引\r\n     * @param\tgridY 当前Grid的Y轴索引\r\n     * @return  一个GridSprite对象\r\n     */\r\n    getDrawSprite(gridX: number, gridY: number): GridSprite {\r\n        var tSprite: GridSprite = new GridSprite();\r\n        tSprite.relativeX = gridX * this._map.gridWidth;\r\n        tSprite.relativeY = gridY * this._map.gridHeight;\r\n        tSprite.initData(this._map);\r\n        this._gridSpriteArray.push(tSprite);\r\n        return tSprite;\r\n    }\r\n\r\n    /**\r\n     * 更新此层中块的坐标\r\n     * 手动刷新的目的是，保持层级的宽和高保持最小，加快渲染\r\n     */\r\n    updateGridPos(): void {\r\n        var tSprite: GridSprite;\r\n        for (var i: number = 0; i < this._gridSpriteArray.length; i++) {\r\n            tSprite = this._gridSpriteArray[i];\r\n            if ((tSprite.visible || tSprite.isAloneObject) && tSprite.drawImageNum > 0) {\r\n                tSprite.updatePos();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 把tile画到指定的显示对象上\r\n     * @param\tgridSprite 被指定显示的目标\r\n     * @param\ttileX 格子的X轴坐标\r\n     * @param\ttileY 格子的Y轴坐标\r\n     * @return\r\n     */\r\n    drawTileTexture(gridSprite: GridSprite, tileX: number, tileY: number): boolean {\r\n        if (tileY >= 0 && tileY < this._map.numRowsTile && tileX >= 0 && tileX < this._map.numColumnsTile) {\r\n            var tIndex: number = tileY * this._map.numColumnsTile + tileX;\r\n            var tMapData: any[] = this._mapData;\r\n            if (tMapData != null && tIndex < tMapData.length) {\r\n                if (tMapData[tIndex] != 0) {\r\n                    var tTileTexSet: TileTexSet = this._map.getTexture(tMapData[tIndex]);\r\n                    if (tTileTexSet) {\r\n                        var tX: number = 0;\r\n                        var tY: number = 0;\r\n                        var tTexture: Texture = tTileTexSet.texture;\r\n                        switch (this._map.orientation) {\r\n                            case IMap.TiledMap.ORIENTATION_STAGGERED://45度交错地图\r\n                                tX = tileX * this._map.tileWidth % this._map.gridWidth + (tileY & 1) * this._tileWidthHalf;\r\n                                tY = tileY * this._tileHeightHalf % this._map.gridHeight;\r\n                                break;\r\n                            case IMap.TiledMap.ORIENTATION_ORTHOGONAL://直角\r\n                                tX = tileX * this._map.tileWidth % this._map.gridWidth;\r\n                                tY = tileY * this._map.tileHeight % this._map.gridHeight;\r\n                                break;\r\n                            case IMap.TiledMap.ORIENTATION_ISOMETRIC://45度角\r\n                                tX = (this._mapWidthHalf + (tileX - tileY) * this._tileWidthHalf) % this._map.gridWidth;\r\n                                tY = ((tileX + tileY) * this._tileHeightHalf) % this._map.gridHeight;\r\n                                break;\r\n                            case IMap.TiledMap.ORIENTATION_HEXAGONAL://六边形\r\n                                var tTileHeight: number = this._map.tileHeight * 2 / 3;\r\n                                tX = (tileX * this._map.tileWidth + tileY % 2 * this._tileWidthHalf) % this._map.gridWidth;\r\n                                tY = (tileY * tTileHeight) % this._map.gridHeight;\r\n                                break;\r\n                        }\r\n                        if (tTileTexSet.isAnimation) {\r\n                            var tAnimationSprite: TileAniSprite = new TileAniSprite();\r\n                            tAnimationSprite.x = tX;\r\n                            tAnimationSprite.y = tY;\r\n                            tAnimationSprite.setTileTextureSet(tIndex.toString(), tTileTexSet);\r\n                            gridSprite.addAniSprite(tAnimationSprite);\r\n                            gridSprite.addChild(tAnimationSprite);\r\n                            gridSprite.isHaveAnimation = true;\r\n                        } else {\r\n                            //gridSprite.graphics.drawImage(tTileTexSet.texture, tX + tTileTexSet.offX, tY + tTileTexSet.offY, tTexture.width, tTexture.height);\r\n                            gridSprite.graphics.drawImage(tTileTexSet.texture, tX + tTileTexSet.offX, tY + tTileTexSet.offY);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 清理当前对象\r\n     */\r\n    clearAll(): void {\r\n        this._map = null;\r\n        this._mapData = null;\r\n        this._tileWidthHalf = 0;\r\n        this._tileHeightHalf = 0;\r\n        this._mapWidthHalf = 0;\r\n        this._mapHeightHalf = 0;\r\n        this.layerName = null;\r\n        var i: number = 0;\r\n        if (this._objDic) {\r\n            for (var p in this._objDic) {\r\n                delete this._objDic[p];\r\n            }\r\n            this._objDic = null;\r\n        }\r\n        if (this._dataDic) {\r\n            for (p in this._dataDic) {\r\n                delete this._dataDic[p];\r\n            }\r\n            this._dataDic = null;\r\n        }\r\n        var tGridSprite: GridSprite;\r\n        for (i = 0; i < this._gridSpriteArray.length; i++) {\r\n            tGridSprite = this._gridSpriteArray[i];\r\n            tGridSprite.clearAll();\r\n        }\r\n        this._properties = null;\r\n        this._tempMapPos = null;\r\n        this.tarLayer = null;\r\n    }\r\n}\r\n\r\n","import { TileAniSprite } from \"./TileAniSprite\";\r\nimport { Texture } from \"../resource/Texture\";\r\nimport { ILaya } from \"../../ILaya\";\r\n\r\n\r\n\r\n/**\r\n * 此类是子纹理类，也包括同类动画的管理\r\n * TiledMap会把纹理分割成无数子纹理，也可以把其中的某块子纹理替换成一个动画序列\r\n * 本类的实现就是如果发现子纹理被替换成一个动画序列，animationKey会被设为true\r\n * 即animationKey为true,就使用TileAniSprite来做显示，把动画序列根据时间画到TileAniSprite上\r\n * @author ...\r\n */\r\nexport class TileTexSet {\r\n\r\n    /**唯一标识*/\r\n    gid: number = -1;\r\n    /**子纹理的引用*/\r\n    texture: Texture;\r\n    /**纹理显示时的坐标偏移X*/\r\n    offX: number = 0;\r\n    /**纹理显示时的坐标偏移Y*/\r\n    offY: number = 0;\r\n\r\n    //下面是动画支持需要的\r\n    /**当前要播放动画的纹理序列*/\r\n    textureArray: any[] = null;\r\n    /** 当前动画每帧的时间间隔*/\r\n    durationTimeArray: any[] = null;\r\n    /** 动画播放的总时间 */\r\n    animationTotalTime: number = 0;\r\n    /**true表示当前纹理，是一组动画，false表示当前只有一个纹理*/\r\n    isAnimation: boolean = false;\r\n\r\n    private _spriteNum: number = 0;\t\t\t\t//当前动画有多少个显示对象\r\n    private _aniDic: any = null;\t\t\t//通过显示对象的唯一名字，去保存显示显示对象\r\n    private _frameIndex: number = 0;\t\t\t//当前动画播放到第几帧\r\n\r\n    private _time: number = 0;\t\t\t\t\t//距离上次动画刷新，过了多少长时间\r\n    private _interval: number = 0;\t\t\t\t//每帧刷新的时间间隔\r\n    private _preFrameTime: number = 0;\t\t\t//上一帧刷新的时间戳\r\n\r\n    /**\r\n     * 加入一个动画显示对象到此动画中\r\n     * @param\taniName\t//显示对象的名字\r\n     * @param\tsprite\t//显示对象\r\n     */\r\n    addAniSprite(aniName: string, sprite: TileAniSprite): void {\r\n        if (this.animationTotalTime == 0) {\r\n            return;\r\n        }\r\n        if (this._aniDic == null) {\r\n            this._aniDic = {};\r\n        }\r\n        if (this._spriteNum == 0) {\r\n            //每3帧刷新一下吧，每帧刷新可能太耗了\r\n            ILaya.timer.frameLoop(3, this, this.animate);\r\n            this._preFrameTime = ILaya.Browser.now();\r\n            this._frameIndex = 0;\r\n            this._time = 0;\r\n            this._interval = 0;\r\n        }\r\n        this._spriteNum++;\r\n        this._aniDic[aniName] = sprite;\r\n        if (this.textureArray && this._frameIndex < this.textureArray.length) {\r\n            var tTileTextureSet: TileTexSet = this.textureArray[this._frameIndex];\r\n            this.drawTexture(sprite, tTileTextureSet);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 把动画画到所有注册的SPRITE上\r\n     */\r\n    private animate(): void {\r\n        if (this.textureArray && this.textureArray.length > 0 && this.durationTimeArray && this.durationTimeArray.length > 0) {\r\n            var tNow: number = ILaya.Browser.now();\r\n            this._interval = tNow - this._preFrameTime;\r\n            this._preFrameTime = tNow;\r\n            if (this._interval > this.animationTotalTime) {\r\n                this._interval = this._interval % this.animationTotalTime;\r\n            }\r\n            this._time += this._interval;\r\n            var tTime: number = this.durationTimeArray[this._frameIndex];\r\n            while (this._time > tTime) {\r\n                this._time -= tTime;\r\n                this._frameIndex++;\r\n                if (this._frameIndex >= this.durationTimeArray.length || this._frameIndex >= this.textureArray.length) {\r\n                    this._frameIndex = 0;\r\n                }\r\n                var tTileTextureSet: TileTexSet = this.textureArray[this._frameIndex];\r\n                var tSprite: TileAniSprite;\r\n                for (var p in this._aniDic) {\r\n                    tSprite = this._aniDic[p];\r\n                    this.drawTexture(tSprite, tTileTextureSet);\r\n                }\r\n                tTime = this.durationTimeArray[this._frameIndex];\r\n            }\r\n        }\r\n    }\r\n\r\n    private drawTexture(sprite: TileAniSprite, tileTextSet: TileTexSet): void {\r\n        sprite.graphics.clear(true);\r\n        //sprite.graphics.drawImage(tileTextSet.texture, tileTextSet.offX, tileTextSet.offY, tileTextSet.texture.width, tileTextSet.texture.height);\r\n        sprite.graphics.drawImage(tileTextSet.texture, tileTextSet.offX, tileTextSet.offY);\r\n    }\r\n\r\n    /**\r\n     * 移除不需要更新的SPRITE\r\n     * @param\t_name\r\n     */\r\n    removeAniSprite(_name: string): void {\r\n        if (this._aniDic && this._aniDic[_name]) {\r\n            delete this._aniDic[_name];\r\n            this._spriteNum--\r\n            if (this._spriteNum == 0) {\r\n                ILaya.timer.clear(this, this.animate);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 显示当前动画的使用情况\r\n     */\r\n    showDebugInfo(): string {\r\n        var tInfo: string = null;\r\n        if (this._spriteNum > 0) {\r\n            tInfo = \"TileTextureSet::gid:\" + this.gid.toString() + \" 动画数:\" + this._spriteNum.toString();\r\n        }\r\n        return tInfo;\r\n    }\r\n\r\n    /**\r\n     * 清理\r\n     */\r\n    clearAll(): void {\r\n        this.gid = -1;//唯一标识\r\n        if (this.texture) {\r\n            this.texture.destroy();\r\n            this.texture = null;\r\n        }\r\n        this.offX = 0;\r\n        this.offY = 0;\r\n\r\n        this.textureArray = null;\r\n        this.durationTimeArray = null;\r\n        this.isAnimation = false;\r\n        this._spriteNum = 0;\r\n        this._aniDic = null;\r\n        this._frameIndex = 0;\r\n        this._preFrameTime = 0;\r\n        this._time = 0;\r\n        this._interval = 0;\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { MapLayer } from \"./MapLayer\"\r\nimport { TileTexSet } from \"./TileTexSet\";\r\nimport { GridSprite } from \"./GridSprite\";\r\nimport { TileAniSprite } from \"./TileAniSprite\";\r\nimport { IMap } from \"./IMap\";\r\nimport { Rectangle } from \"../maths/Rectangle\";\r\nimport { Sprite } from \"../display/Sprite\";\r\nimport { Loader } from \"../net/Loader\";\r\nimport { Handler } from \"../utils/Handler\";\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { Texture } from \"../resource/Texture\";\r\nimport { HTMLCanvas } from \"../resource/HTMLCanvas\";\r\nimport { Point } from \"../maths/Point\";\r\nimport { Context } from \"../resource/Context\";\r\n\r\n/**\r\n * tiledMap是整个地图的核心\r\n * 地图以层级来划分地图（例如：地表层，植被层，建筑层）\r\n * 每层又以分块（GridSprite)来处理显示对象，只显示在视口区域的区\r\n * 每块又包括N*N个格子（tile)\r\n * 格子类型又分为动画格子跟图片格子两种\r\n * @author ...\r\n */\r\nexport class TiledMap {\r\n    //地图支持的类型(目前支持四边形地图，菱形地图，六边形地图)\r\n    /**四边形地图*/\r\n    static ORIENTATION_ORTHOGONAL: string = \"orthogonal\";\r\n    /**菱形地图*/\r\n    static ORIENTATION_ISOMETRIC: string = \"isometric\";\r\n    /**45度交错地图*/\r\n    static ORIENTATION_STAGGERED: string = \"staggered\";\r\n    /**六边形地图*/\r\n    static ORIENTATION_HEXAGONAL: string = \"hexagonal\";\r\n    //地图格子（tile）的渲染顺序\r\n    /**地图格子从左上角开始渲染*/\r\n    static RENDERORDER_RIGHTDOWN: string = \"right-down\";\r\n    /**地图格子从左下角开始渲染*/\r\n    static RENDERORDER_RIGHTUP: string = \"right-up\";\r\n    /**地图格子从右上角开始渲染*/\r\n    static RENDERORDER_LEFTDOWN: string = \"left-down\";\r\n    /**地图格子右下角开始渲染*/\r\n    static RENDERORDER_LEFTUP: string = \"left-up\";\r\n\r\n    //json数据\r\n    private _jsonData: any;\r\n    //存放地图中用到的所有子纹理数据\r\n    private _tileTexSetArr: any[] = [];\r\n    //主纹理数据，主要在释放纹理资源时使用\r\n    private _texArray: any[] = [];\r\n    //地图信息中的一些基本数据\r\n    private _x: number = 0; //地图的坐标\r\n    private _y: number = 0;\r\n    //_width = _mapTileW * _mapW\r\n    //_height = _mapTileH * _mapH\r\n    private _width: number = 0; //地图的宽度\r\n    private _height: number = 0; //地图的高度\r\n    private _mapW: number = 0; //地图的横向格子数\r\n    private _mapH: number = 0; //地图的竖向格子数\r\n    private _mapTileW: number = 0; //tile的宽度\r\n    private _mapTileH: number = 0; //tile的高度\r\n\r\n    //用来存放地图的视口信息\r\n    private _rect: Rectangle = new Rectangle();\r\n    //用来存放地图的视口扩充区域\r\n    private _paddingRect: Rectangle = new Rectangle();\r\n    //地图的显示对象\r\n    private _mapSprite: Sprite = null; //地图的显示对象\r\n    private _layerArray: any[] = []; //这里保存所有的MapLayer对象\r\n    private _renderLayerArray: any[] = [];//这里保存需要渲染的MapLayer对象\r\n    private _gridArray: any[] = []; //保存所有的块数据\r\n    //地图块相关的\r\n    private _showGridKey: boolean = false; //是否显示块边界线（用来调试用）\r\n    private _totalGridNum: number = 0; //一层中的GridSprite的总数\r\n    private _gridW: number = 0; //地图的横向块数\r\n    private _gridH: number = 0; //地图的坚向块数\r\n    private _gridWidth: number = 450; //块的默认宽度\r\n    private _gridHeight: number = 450; //块的默认高度\r\n\r\n    private _jsonLoader: Loader = null; //用来加载JSON文件用的LOADER\r\n    private _loader: Loader = null; //用来加载纹理数据用的LOADER\r\n    private _tileSetArray: any[] = []; //用来存放还需要哪些儿纹理等待加载\r\n    private _currTileSet: TileSet = null; //正在加载的纹理需要的数据源\r\n    private _completeHandler: Handler = null; //地图创建完成的回调函数\r\n    //用来裁剪块的区域（有当前视口和上次视口显示多少的块，就能哪些儿块需要显示或隐藏\r\n    private _mapRect: GRect = new GRect(); //当前视口显示的块范围\r\n    private _mapLastRect: GRect = new GRect(); //上次视口显示的块范围\r\n    private _index: number = 0;\r\n    private _animationDic: any = {}; //需要创建的动画数据\r\n    private _properties: any; //当前地图的自定义属性\r\n    private _tileProperties: any = {}; //图块属性\r\n    private _tileProperties2: any = {};\r\n    //默认的地图类型（具体要看JSON文件）\r\n    private _orientation: string = \"orthogonal\";\r\n    //默认的tile渲染顺序（具体要看JSON文件）\r\n    private _renderOrder: string = \"right-down\";\r\n    //调试用的颜色组合\r\n    private _colorArray: any[] = [\"FF\", \"00\", \"33\", \"66\"];\r\n    //缩放相关的操作\r\n    private _scale: number = 1;\r\n    private _pivotScaleX: number = 0.5;\r\n    private _pivotScaleY: number = 0.5;\r\n    private _centerX: number = 0;\r\n    private _centerY: number = 0;\r\n    /**@internal */\r\n    _viewPortX: number = 0;\r\n    /**@internal */\r\n    _viewPortY: number = 0;\r\n    private _viewPortWidth: number = 0;\r\n    private _viewPortHeight: number = 0;\r\n    //是否开启线性取样\r\n    private _enableLinear: boolean = true;\r\n    //资源的相对路径\r\n    private _resPath: string;\r\n    private _pathArray: any[];\r\n    //把地图限制在显示区域\r\n    private _limitRange: boolean = false;\r\n    /**\r\n     * 是否自动缓存没有动画的地块\r\n     */\r\n    autoCache: boolean = true;\r\n    /**\r\n     * 自动缓存类型,地图较大时建议使用normal\r\n     */\r\n    autoCacheType: string = \"normal\";\r\n    /**\r\n     * 是否合并图层,开启合并图层时，图层属性内可添加layer属性，运行时将会将相邻的layer属性相同的图层进行合并以提高性能\r\n     */\r\n    enableMergeLayer: boolean = false;\r\n    /**\r\n     * 是否移除被覆盖的格子,地块可添加type属性，type不为0时表示不透明，被不透明地块遮挡的地块将会被剔除以提高性能\r\n     */\r\n    removeCoveredTile: boolean = false;\r\n    /**\r\n     * 是否显示大格子里显示的贴图数量\r\n     */\r\n    showGridTextureCount: boolean = false;\r\n\r\n    /**\r\n     * 是否调整地块边缘消除缩放导致的缝隙\r\n     */\r\n    antiCrack: boolean = true;\r\n\r\n    /**\r\n     * 是否在加载完成之后cache所有大格子\r\n     */\r\n    cacheAllAfterInit: boolean = false;\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    /**\r\n     * 创建地图\r\n     * @param\tmapName \t\tJSON文件名字\r\n     * @param\tviewRect \t\t视口区域\r\n     * @param\tcompleteHandler 地图创建完成的回调函数\r\n     * @param\tviewRectPadding 视口扩充区域，把视口区域上、下、左、右扩充一下，防止视口移动时的穿帮\r\n     * @param\tgridSize \t\tgrid大小\r\n     * @param\tenableLinear \t是否开启线性取样（为false时，可以解决地图黑线的问题，但画质会锐化）\r\n     * @param\tlimitRange\t\t把地图限制在显示区域\r\n     */\r\n    createMap(mapName: string, viewRect: Rectangle, completeHandler: Handler, viewRectPadding: Rectangle = null, gridSize: Point = null, enableLinear: boolean = true, limitRange: boolean = false): void {\r\n        this._enableLinear = enableLinear;\r\n        this._limitRange = limitRange;\r\n        this._rect.x = viewRect.x;\r\n        this._rect.y = viewRect.y;\r\n        this._rect.width = viewRect.width;\r\n        this._rect.height = viewRect.height;\r\n        this._viewPortWidth = viewRect.width / this._scale;\r\n        this._viewPortHeight = viewRect.height / this._scale;\r\n        this._completeHandler = completeHandler;\r\n        if (viewRectPadding) {\r\n            this._paddingRect.copyFrom(viewRectPadding);\r\n        }\r\n        else {\r\n            this._paddingRect.setTo(0, 0, 0, 0);\r\n        }\r\n        if (gridSize) {\r\n            this._gridWidth = gridSize.x;\r\n            this._gridHeight = gridSize.y;\r\n        }\r\n        var tIndex: number = mapName.lastIndexOf(\"/\");\r\n        if (tIndex > -1) {\r\n            this._resPath = mapName.substr(0, tIndex);\r\n            this._pathArray = this._resPath.split(\"/\");\r\n        }\r\n        else {\r\n            this._resPath = \"\";\r\n            this._pathArray = [];\r\n        }\r\n\r\n        this._jsonLoader = new Loader();\r\n        this._jsonLoader.once(\"complete\", this, this.onJsonComplete);\r\n        this._jsonLoader.load(mapName, Loader.JSON, false);\r\n    }\r\n\r\n    /**\r\n     * json文件读取成功后，解析里面的纹理数据，进行加载\r\n     * @param\te JSON数据\r\n     */\r\n    private onJsonComplete(e: any): void {\r\n        this._mapSprite = new Sprite();\r\n        ILaya.stage.addChild(this._mapSprite);\r\n        var tJsonData: any = this._jsonData = e;\r\n\r\n        this._properties = tJsonData.properties;\r\n        this._orientation = tJsonData.orientation;\r\n        this._renderOrder = tJsonData.renderorder;\r\n        this._mapW = tJsonData.width;\r\n        this._mapH = tJsonData.height;\r\n\r\n        this._mapTileW = tJsonData.tilewidth;\r\n        this._mapTileH = tJsonData.tileheight;\r\n\r\n        this._width = this._mapTileW * this._mapW;\r\n        this._height = this._mapTileH * this._mapH;\r\n\r\n        if (this._orientation == TiledMap.ORIENTATION_STAGGERED) {\r\n            this._height = (0.5 + this._mapH * 0.5) * this._mapTileH;\r\n        }\r\n\r\n        this._mapLastRect.top = this._mapLastRect.bottom = this._mapLastRect.left = this._mapLastRect.right = -1;\r\n\r\n        var tArray: any[] = tJsonData.tilesets;\r\n        var tileset: any;\r\n        var tTileSet: TileSet;\r\n        var i: number = 0;\r\n        for (i = 0; i < tArray.length; i++) {\r\n            tileset = tArray[i];\r\n            tTileSet = new TileSet();\r\n            tTileSet.init(tileset);\r\n            if (tTileSet.properties && tTileSet.properties.ignore) continue;\r\n            this._tileProperties[i] = tTileSet.tileproperties;\r\n            this.addTileProperties(tTileSet.tileproperties);\r\n            this._tileSetArray.push(tTileSet);\r\n            //动画数据\r\n            var tTiles: any = tileset.tiles;\r\n            if (tTiles) {\r\n                for (var p in tTiles) {\r\n                    var tAnimation: any[] = tTiles[p].animation;\r\n                    if (tAnimation) {\r\n                        var tAniData: TileMapAniData = new TileMapAniData();\r\n                        this._animationDic[p] = tAniData;\r\n                        tAniData.image = tileset.image;\r\n                        for (var j: number = 0; j < tAnimation.length; j++) {\r\n                            var tAnimationItem: any = tAnimation[j];\r\n                            tAniData.mAniIdArray.push(tAnimationItem.tileid);\r\n                            tAniData.mDurationTimeArray.push(tAnimationItem.duration);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        this._tileTexSetArr.push(null);\r\n        if (this._tileSetArray.length > 0) {\r\n            tTileSet = this._currTileSet = this._tileSetArray.shift();\r\n            this._loader = new Loader();\r\n            this._loader.once(\"complete\", this, this.onTextureComplete);\r\n            var tPath: string = this.mergePath(this._resPath, tTileSet.image);\r\n            this._loader.load(tPath, Loader.IMAGE, false);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 合并路径\r\n     * @param\tresPath\r\n     * @param\trelativePath\r\n     * @return\r\n     */\r\n    private mergePath(resPath: string, relativePath: string): string {\r\n        var tResultPath: string = \"\";\r\n        var tImageArray: any[] = relativePath.split(\"/\");\r\n        var tParentPathNum: number = 0;\r\n        var i: number = 0;\r\n        for (i = tImageArray.length - 1; i >= 0; i--) {\r\n            if (tImageArray[i] == \"..\") {\r\n                tParentPathNum++;\r\n            }\r\n        }\r\n        if (tParentPathNum == 0) {\r\n            if (this._pathArray.length > 0) {\r\n                tResultPath = resPath + \"/\" + relativePath;\r\n            }\r\n            else {\r\n                tResultPath = relativePath;\r\n            }\r\n\r\n            return tResultPath;\r\n        }\r\n        var tSrcNum: number = this._pathArray.length - tParentPathNum;\r\n        if (tSrcNum < 0) {\r\n            console.log(\"[error]path does not exist\", this._pathArray, tImageArray, resPath, relativePath);\r\n        }\r\n        for (i = 0; i < tSrcNum; i++) {\r\n            if (i == 0) {\r\n                tResultPath += this._pathArray[i];\r\n            }\r\n            else {\r\n                tResultPath = tResultPath + \"/\" + this._pathArray[i];\r\n            }\r\n        }\r\n        for (i = tParentPathNum; i < tImageArray.length; i++) {\r\n            tResultPath = tResultPath + \"/\" + tImageArray[i];\r\n        }\r\n        return tResultPath;\r\n    }\r\n\r\n    private _texutreStartDic: any = {};\r\n    /**\r\n     * 纹理加载完成，如果所有的纹理加载，开始初始化地图\r\n     * @param\te 纹理数据\r\n     */\r\n    private onTextureComplete(e: any): void {\r\n        var json: any = this._jsonData;\r\n        var tTexture: Texture = e;\r\n        if (!this._enableLinear) {\r\n            (tTexture.bitmap as any).minFifter = 0x2600; //TODO any\r\n            (tTexture.bitmap as any).magFifter = 0x2600; // TODO any\r\n        }\r\n        this._texArray.push(tTexture);\r\n        var tSubTexture: Texture = null;\r\n\r\n        //var tVersion:int = json.viersion;\r\n        var tTileSet: TileSet = this._currTileSet;\r\n        var tTileTextureW: number = tTileSet.tilewidth;\r\n        var tTileTextureH: number = tTileSet.tileheight;\r\n        var tImageWidth: number = tTileSet.imagewidth;\r\n        var tImageHeight: number = tTileSet.imageheight;\r\n        var tFirstgid: number = tTileSet.firstgid;\r\n\r\n        var tTileWNum: number = Math.floor((tImageWidth - tTileSet.margin - tTileTextureW) / (tTileTextureW + tTileSet.spacing)) + 1;\r\n        var tTileHNum: number = Math.floor((tImageHeight - tTileSet.margin - tTileTextureH) / (tTileTextureH + tTileSet.spacing)) + 1;\r\n\r\n        var tTileTexSet: TileTexSet = null;\r\n        this._texutreStartDic[tTileSet.image] = this._tileTexSetArr.length;\r\n        for (var i: number = 0; i < tTileHNum; i++) {\r\n            for (var j: number = 0; j < tTileWNum; j++) {\r\n                tTileTexSet = new TileTexSet();\r\n                tTileTexSet.offX = tTileSet.titleoffsetX;\r\n                tTileTexSet.offY = tTileSet.titleoffsetY - (tTileTextureH - this._mapTileH);\r\n                //tTileTexSet.texture = Texture.create(tTexture, tTileSet.margin + (tTileTextureW + tTileSet.spacing) * j, tTileSet.margin + (tTileTextureH + tTileSet.spacing) * i, tTileTextureW, tTileTextureH);\r\n                tTileTexSet.texture = Texture.createFromTexture(tTexture, tTileSet.margin + (tTileTextureW + tTileSet.spacing) * j, tTileSet.margin + (tTileTextureH + tTileSet.spacing) * i, tTileTextureW, tTileTextureH);\r\n                if (this.antiCrack)\r\n                    this.adptTexture(tTileTexSet.texture);\r\n                this._tileTexSetArr.push(tTileTexSet);\r\n                tTileTexSet.gid = this._tileTexSetArr.length;\r\n            }\r\n        }\r\n\r\n        if (this._tileSetArray.length > 0) {\r\n            tTileSet = this._currTileSet = this._tileSetArray.shift();\r\n            this._loader.once(\"complete\", this, this.onTextureComplete);\r\n            var tPath: string = this.mergePath(this._resPath, tTileSet.image);\r\n            this._loader.load(tPath, Loader.IMAGE, false);\r\n        }\r\n        else {\r\n            this._currTileSet = null;\r\n            this.initMap();\r\n        }\r\n    }\r\n\r\n    private adptTexture(tex: Texture): void {\r\n        if (!tex) return;\r\n        var pX: number = tex.uv[0];\r\n        var pX1: number = tex.uv[2];\r\n        var pY: number = tex.uv[1];\r\n        var pY1: number = tex.uv[7];\r\n        var dW: number = 1 / tex.bitmap.width;\r\n        var dH: number = 1 / tex.bitmap.height;\r\n        var Tex: any = tex;\r\n        Tex.uv[0] = Tex.uv[6] = pX + dW;\r\n        Tex.uv[2] = Tex.uv[4] = pX1 - dW;\r\n        Tex.uv[1] = Tex.uv[3] = pY + dH;\r\n        Tex.uv[5] = Tex.uv[7] = pY1 - dH;\r\n    }\r\n\r\n    /**\r\n     * 初始化地图\r\n     */\r\n    private initMap(): void {\r\n        var i: number, n: number;\r\n        for (var p in this._animationDic) {\r\n            var tAniData: TileMapAniData = this._animationDic[p];\r\n            var gStart: number;\r\n            gStart = this._texutreStartDic[tAniData.image];\r\n            var tTileTexSet: TileTexSet = this.getTexture(parseInt(p) + gStart);\r\n            if (tAniData.mAniIdArray.length > 0) {\r\n                tTileTexSet.textureArray = [];\r\n                tTileTexSet.durationTimeArray = tAniData.mDurationTimeArray;\r\n                tTileTexSet.isAnimation = true;\r\n                tTileTexSet.animationTotalTime = 0;\r\n                for (i = 0, n = tTileTexSet.durationTimeArray.length; i < n; i++) {\r\n                    tTileTexSet.animationTotalTime += tTileTexSet.durationTimeArray[i];\r\n                }\r\n                for (i = 0, n = tAniData.mAniIdArray.length; i < n; i++) {\r\n                    var tTexture: TileTexSet = this.getTexture(tAniData.mAniIdArray[i] + gStart);\r\n                    tTileTexSet.textureArray.push(tTexture);\r\n                }\r\n            }\r\n        }\r\n\r\n        this._gridWidth = Math.floor(this._gridWidth / this._mapTileW) * this._mapTileW;\r\n        this._gridHeight = Math.floor(this._gridHeight / this._mapTileH) * this._mapTileH;\r\n        if (this._gridWidth < this._mapTileW) {\r\n            this._gridWidth = this._mapTileW;\r\n        }\r\n        if (this._gridHeight < this._mapTileH) {\r\n            this._gridHeight = this._mapTileH;\r\n        }\r\n\r\n        this._gridW = Math.ceil(this._width / this._gridWidth);\r\n        this._gridH = Math.ceil(this._height / this._gridHeight);\r\n        this._totalGridNum = this._gridW * this._gridH;\r\n        for (i = 0; i < this._gridH; i++) {\r\n            var tGridArray: any[] = [];\r\n            this._gridArray.push(tGridArray);\r\n            for (var j: number = 0; j < this._gridW; j++) {\r\n                tGridArray.push(null);\r\n            }\r\n        }\r\n\r\n        var tLayerArray: any[] = this._jsonData.layers;\r\n        var isFirst: boolean = true;\r\n        var tTarLayerID: number = 1;\r\n        var tLayerTarLayerName: string;\r\n        var preLayerTarName: string;\r\n        var preLayer: MapLayer;\r\n\r\n        //创建地图层级\r\n        for (var tLayerLoop: number = 0; tLayerLoop < tLayerArray.length; tLayerLoop++) {\r\n            var tLayerData: any = tLayerArray[tLayerLoop];\r\n            if (tLayerData.visible == true) //如果不显示，那么也没必要创建\r\n            {\r\n                var tMapLayer: MapLayer = new MapLayer();\r\n                tMapLayer.init(tLayerData, this);\r\n                if (!this.enableMergeLayer) {\r\n                    this._mapSprite.addChild(tMapLayer);\r\n                    this._renderLayerArray.push(tMapLayer);\r\n                } else {\r\n                    tLayerTarLayerName = tMapLayer.getLayerProperties(\"layer\");\r\n                    isFirst = isFirst || (!preLayer) || (tLayerTarLayerName != preLayerTarName);\r\n                    if (isFirst) {\r\n                        isFirst = false;\r\n                        tMapLayer.tarLayer = tMapLayer;\r\n                        preLayer = tMapLayer;\r\n                        this._mapSprite.addChild(tMapLayer);\r\n                        this._renderLayerArray.push(tMapLayer);\r\n                    } else {\r\n                        tMapLayer.tarLayer = preLayer;\r\n                    }\r\n                    preLayerTarName = tLayerTarLayerName;\r\n                }\r\n\r\n\r\n                this._layerArray.push(tMapLayer);\r\n            }\r\n        }\r\n        if (this.removeCoveredTile) {\r\n            this.adptTiledMapData();\r\n        }\r\n        if (this.cacheAllAfterInit) {\r\n            this.cacheAllGrid();\r\n        }\r\n        this.moveViewPort(this._rect.x, this._rect.y);\r\n\r\n        if (this._completeHandler != null) {\r\n            this._completeHandler.run();\r\n        }\r\n        //这里应该发送消息，通知上层，地图创建完成\r\n    }\r\n\r\n    private addTileProperties(tileDataDic: any): void {\r\n        var key: string;\r\n        for (key in tileDataDic) {\r\n            this._tileProperties2[key] = tileDataDic[key];\r\n        }\r\n    }\r\n\r\n    getTileUserData(id: number, sign: string, defaultV: any = null): any {\r\n        if (!this._tileProperties2 || !this._tileProperties2[id] || !(sign in this._tileProperties2[id])) return defaultV;\r\n        return this._tileProperties2[id][sign];\r\n    }\r\n\r\n    private adptTiledMapData(): void {\r\n        var i: number, len: number;\r\n        len = this._layerArray.length;\r\n        var tLayer: MapLayer;\r\n        var noNeeds: any = {};\r\n        var tDatas: any[];\r\n        for (i = len - 1; i >= 0; i--) {\r\n            tLayer = this._layerArray[i];\r\n            tDatas = tLayer._mapData;\r\n            if (!tDatas) continue;\r\n            this.removeCoverd(tDatas, noNeeds);\r\n            this.collectCovers(tDatas, noNeeds, i);\r\n        }\r\n    }\r\n\r\n    private removeCoverd(datas: any[], noNeeds: any): void {\r\n        var i: number, len: number;\r\n        len = datas.length;\r\n        for (i = 0; i < len; i++) {\r\n            if (noNeeds[i]) {\r\n                datas[i] = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    private collectCovers(datas: any[], noNeeds: any, layer: number): void {\r\n        var i: number, len: number;\r\n        len = datas.length;\r\n        var tTileData: number;\r\n        var isCover: number;\r\n        for (i = 0; i < len; i++) {\r\n            tTileData = datas[i];\r\n            if (tTileData > 0) {\r\n                isCover = this.getTileUserData(tTileData - 1, \"type\", 0);\r\n                if (isCover > 0) {\r\n                    noNeeds[i] = tTileData;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 得到一块指定的地图纹理\r\n     * @param\tindex 纹理的索引值，默认从1开始\r\n     * @return\r\n     */\r\n    getTexture(index: number): TileTexSet {\r\n        if (index < this._tileTexSetArr.length) {\r\n            return this._tileTexSetArr[index];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 得到地图的自定义属性\r\n     * @param\tname\t\t属性名称\r\n     * @return\r\n     */\r\n    getMapProperties(name: string): any {\r\n        if (this._properties) {\r\n            return this._properties[name];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 得到tile自定义属性\r\n     * @param\tindex\t\t地图块索引\r\n     * @param\tid\t\t\t具体的TileSetID\r\n     * @param\tname\t\t属性名称\r\n     * @return\r\n     */\r\n    getTileProperties(index: number, id: number, name: string): any {\r\n        if (this._tileProperties[index] && this._tileProperties[index][id]) {\r\n            return this._tileProperties[index][id][name];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 通过纹理索引，生成一个可控制物件\r\n     * @param\tindex 纹理的索引值，默认从1开始\r\n     * @return\r\n     */\r\n    getSprite(index: number, width: number, height: number): GridSprite {\r\n        if (0 < this._tileTexSetArr.length) {\r\n            var tGridSprite: GridSprite = new GridSprite();\r\n            tGridSprite.initData(this, true);\r\n            tGridSprite.size(width, height);\r\n            var tTileTexSet: TileTexSet = this._tileTexSetArr[index];\r\n            if (tTileTexSet != null && tTileTexSet.texture != null) {\r\n                if (tTileTexSet.isAnimation) {\r\n                    var tAnimationSprite: TileAniSprite = new TileAniSprite();\r\n                    this._index++;\r\n                    tAnimationSprite.setTileTextureSet(this._index.toString(), tTileTexSet);\r\n                    tGridSprite.addAniSprite(tAnimationSprite);\r\n                    tGridSprite.addChild(tAnimationSprite);\r\n                }\r\n                else {\r\n                    tGridSprite.graphics.drawImage(tTileTexSet.texture, 0, 0, width, height);\r\n                }\r\n                tGridSprite.drawImageNum++;\r\n            }\r\n            return tGridSprite;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 设置视口的缩放中心点（例如：scaleX= scaleY= 0.5,就是以视口中心缩放）\r\n     * @param\tscaleX\r\n     * @param\tscaleY\r\n     */\r\n    setViewPortPivotByScale(scaleX: number, scaleY: number): void {\r\n        this._pivotScaleX = scaleX;\r\n        this._pivotScaleY = scaleY;\r\n    }\r\n\r\n    /**\r\n     * 设置地图缩放\r\n     * @param\tscale\r\n     */\r\n    set scale(scale: number) {\r\n        if (scale <= 0)\r\n            return;\r\n        this._scale = scale;\r\n        this._viewPortWidth = this._rect.width / scale;\r\n        this._viewPortHeight = this._rect.height / scale;\r\n        this._mapSprite.scale(this._scale, this._scale);\r\n        this.updateViewPort();\r\n    }\r\n\r\n    /**\r\n     * 得到当前地图的缩放\r\n     */\r\n    get scale(): number {\r\n        return this._scale;\r\n    }\r\n\r\n    /**\r\n     * 移动视口\r\n     * @param\tmoveX 视口的坐标x\r\n     * @param\tmoveY 视口的坐标y\r\n     */\r\n    moveViewPort(moveX: number, moveY: number): void {\r\n        this._x = -moveX;\r\n        this._y = -moveY;\r\n        this._rect.x = moveX;\r\n        this._rect.y = moveY;\r\n        this.updateViewPort();\r\n    }\r\n\r\n    /**\r\n     * 改变视口大小\r\n     * @param\tmoveX\t视口的坐标x\r\n     * @param\tmoveY\t视口的坐标y\r\n     * @param\twidth\t视口的宽\r\n     * @param\theight\t视口的高\r\n     */\r\n    changeViewPort(moveX: number, moveY: number, width: number, height: number): void {\r\n        if (moveX == this._rect.x && moveY == this._rect.y && width == this._rect.width && height == this._rect.height) return;\r\n        this._x = -moveX;\r\n        this._y = -moveY;\r\n        this._rect.x = moveX;\r\n        this._rect.y = moveY;\r\n        this._rect.width = width;\r\n        this._rect.height = height;\r\n        this._viewPortWidth = width / this._scale;\r\n        this._viewPortHeight = height / this._scale;\r\n        this.updateViewPort();\r\n    }\r\n\r\n    /**\r\n     * 在锚点的基础上计算，通过宽和高，重新计算视口\r\n     * @param\twidth\t\t新视口宽\r\n     * @param\theight\t\t新视口高\r\n     * @param\trect\t\t返回的结果\r\n     * @return\r\n     */\r\n    changeViewPortBySize(width: number, height: number, rect: Rectangle = null): Rectangle {\r\n        if (rect == null) {\r\n            rect = new Rectangle();\r\n        }\r\n        this._centerX = this._rect.x + this._rect.width * this._pivotScaleX;\r\n        this._centerY = this._rect.y + this._rect.height * this._pivotScaleY;\r\n        rect.x = this._centerX - width * this._pivotScaleX;\r\n        rect.y = this._centerY - height * this._pivotScaleY;\r\n        rect.width = width;\r\n        rect.height = height;\r\n        this.changeViewPort(rect.x, rect.y, rect.width, rect.height);\r\n        return rect;\r\n    }\r\n\r\n    /**\r\n     * 刷新视口\r\n     */\r\n    private updateViewPort(): void {\r\n        //_rect.x和rect.y是内部坐标，会自动叠加缩放\r\n        this._centerX = this._rect.x + this._rect.width * this._pivotScaleX;\r\n        this._centerY = this._rect.y + this._rect.height * this._pivotScaleY;\r\n        var posChanged: boolean = false;\r\n        var preValue: number = this._viewPortX;\r\n        this._viewPortX = this._centerX - this._rect.width * this._pivotScaleX / this._scale;\r\n        if (preValue != this._viewPortX) {\r\n            posChanged = true;\r\n        } else {\r\n            preValue = this._viewPortY;\r\n        }\r\n        this._viewPortY = this._centerY - this._rect.height * this._pivotScaleY / this._scale;\r\n        if (!posChanged && preValue != this._viewPortY) {\r\n            posChanged = true;\r\n        }\r\n        if (this._limitRange) {\r\n            var tRight: number = this._viewPortX + this._viewPortWidth;\r\n            if (tRight > this._width) {\r\n                this._viewPortX = this._width - this._viewPortWidth;\r\n            }\r\n            var tBottom: number = this._viewPortY + this._viewPortHeight;\r\n            if (tBottom > this._height) {\r\n                this._viewPortY = this._height - this._viewPortHeight;\r\n            }\r\n            if (this._viewPortX < 0) {\r\n                this._viewPortX = 0;\r\n            }\r\n            if (this._viewPortY < 0) {\r\n                this._viewPortY = 0;\r\n            }\r\n        }\r\n        var tPaddingRect: Rectangle = this._paddingRect;\r\n        this._mapRect.top = Math.floor((this._viewPortY - tPaddingRect.y) / this._gridHeight);\r\n        this._mapRect.bottom = Math.floor((this._viewPortY + this._viewPortHeight + tPaddingRect.height + tPaddingRect.y) / this._gridHeight);\r\n        this._mapRect.left = Math.floor((this._viewPortX - tPaddingRect.x) / this._gridWidth);\r\n        this._mapRect.right = Math.floor((this._viewPortX + this._viewPortWidth + tPaddingRect.width + tPaddingRect.x) / this._gridWidth);\r\n        if (this._mapRect.top != this._mapLastRect.top || this._mapRect.bottom != this._mapLastRect.bottom || this._mapRect.left != this._mapLastRect.left || this._mapRect.right != this._mapLastRect.right) {\r\n            this.clipViewPort();\r\n            this._mapLastRect.top = this._mapRect.top;\r\n            this._mapLastRect.bottom = this._mapRect.bottom;\r\n            this._mapLastRect.left = this._mapRect.left;\r\n            this._mapLastRect.right = this._mapRect.right;\r\n            posChanged = true;\r\n        }\r\n\r\n        if (!posChanged) return;\r\n\r\n        var tMapLayer: MapLayer;\r\n        var len: number = this._renderLayerArray.length;\r\n        for (var i: number = 0; i < len; i++) {\r\n            tMapLayer = this._renderLayerArray[i];\r\n            if (tMapLayer._gridSpriteArray.length > 0)\r\n                tMapLayer.updateGridPos();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * GRID裁剪\r\n     */\r\n    private clipViewPort(): void {\r\n        var tSpriteNum: number = 0;\r\n        var tSprite: Sprite;\r\n        var tIndex: number = 0;\r\n        var tSub: number = 0;\r\n        var tAdd: number = 0;\r\n        var i: number, j: number;\r\n        if (this._mapRect.left > this._mapLastRect.left) {\r\n            //裁剪\r\n            tSub = this._mapRect.left - this._mapLastRect.left;\r\n            if (tSub > 0) {\r\n                for (j = this._mapLastRect.left; j < this._mapLastRect.left + tSub; j++) {\r\n                    for (i = this._mapLastRect.top; i <= this._mapLastRect.bottom; i++) {\r\n                        this.hideGrid(j, i);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            //增加\r\n            tAdd = Math.min(this._mapLastRect.left, this._mapRect.right + 1) - this._mapRect.left;\r\n            if (tAdd > 0) {\r\n                for (j = this._mapRect.left; j < this._mapRect.left + tAdd; j++) {\r\n                    for (i = this._mapRect.top; i <= this._mapRect.bottom; i++) {\r\n                        this.showGrid(j, i);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (this._mapRect.right > this._mapLastRect.right) {\r\n            //增加\r\n            tAdd = this._mapRect.right - this._mapLastRect.right;\r\n            if (tAdd > 0) {\r\n                for (j = Math.max(this._mapLastRect.right + 1, this._mapRect.left); j <= this._mapLastRect.right + tAdd; j++) {\r\n                    for (i = this._mapRect.top; i <= this._mapRect.bottom; i++) {\r\n                        this.showGrid(j, i);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            //裁剪\r\n            tSub = this._mapLastRect.right - this._mapRect.right\r\n            if (tSub > 0) {\r\n                for (j = this._mapRect.right + 1; j <= this._mapRect.right + tSub; j++) {\r\n                    for (i = this._mapLastRect.top; i <= this._mapLastRect.bottom; i++) {\r\n                        this.hideGrid(j, i);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (this._mapRect.top > this._mapLastRect.top) {\r\n            //裁剪\r\n            tSub = this._mapRect.top - this._mapLastRect.top;\r\n            if (tSub > 0) {\r\n                for (i = this._mapLastRect.top; i < this._mapLastRect.top + tSub; i++) {\r\n                    for (j = this._mapLastRect.left; j <= this._mapLastRect.right; j++) {\r\n                        this.hideGrid(j, i);\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n        else {\r\n            //增加\r\n            tAdd = Math.min(this._mapLastRect.top, this._mapRect.bottom + 1) - this._mapRect.top;\r\n            if (tAdd > 0) {\r\n                for (i = this._mapRect.top; i < this._mapRect.top + tAdd; i++) {\r\n                    for (j = this._mapRect.left; j <= this._mapRect.right; j++) {\r\n                        this.showGrid(j, i);\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n        if (this._mapRect.bottom > this._mapLastRect.bottom) {\r\n            //增加\r\n            tAdd = this._mapRect.bottom - this._mapLastRect.bottom;\r\n            if (tAdd > 0) {\r\n                for (i = Math.max(this._mapLastRect.bottom + 1, this._mapRect.top); i <= this._mapLastRect.bottom + tAdd; i++) {\r\n                    for (j = this._mapRect.left; j <= this._mapRect.right; j++) {\r\n                        this.showGrid(j, i);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            //裁剪\r\n            tSub = this._mapLastRect.bottom - this._mapRect.bottom\r\n            if (tSub > 0) {\r\n                for (i = this._mapRect.bottom + 1; i <= this._mapRect.bottom + tSub; i++) {\r\n                    for (j = this._mapLastRect.left; j <= this._mapLastRect.right; j++) {\r\n                        this.hideGrid(j, i);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 显示指定的GRID\r\n     * @param\tgridX\r\n     * @param\tgridY\r\n     */\r\n    private showGrid(gridX: number, gridY: number): void {\r\n        if (gridX < 0 || gridX >= this._gridW || gridY < 0 || gridY >= this._gridH) {\r\n            return;\r\n        }\r\n        var i: number, j: number;\r\n        var tGridSprite: GridSprite\r\n        var tTempArray: any[] = this._gridArray[gridY][gridX];\r\n        if (tTempArray == null) {\r\n            tTempArray = this.getGridArray(gridX, gridY);\r\n        }\r\n        else {\r\n            for (i = 0; i < tTempArray.length && i < this._layerArray.length; i++) {\r\n                var tLayerSprite: Sprite = this._layerArray[i];\r\n                if (tLayerSprite && tTempArray[i]) {\r\n                    tGridSprite = tTempArray[i];\r\n                    if (tGridSprite.visible == false && tGridSprite.drawImageNum > 0) {\r\n                        tGridSprite.show();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private cacheAllGrid(): void {\r\n        var i: number, j: number;\r\n        var tempArr: any[];\r\n        for (i = 0; i < this._gridW; i++) {\r\n            for (j = 0; j < this._gridH; j++) {\r\n                tempArr = this.getGridArray(i, j);\r\n                this.cacheGridsArray(tempArr);\r\n            }\r\n        }\r\n\r\n    }\r\n    private static _tempCanvas: any;\r\n    private cacheGridsArray(arr: any[]): void {\r\n        var canvas: any;\r\n        if (!TiledMap._tempCanvas) {\r\n            TiledMap._tempCanvas = new HTMLCanvas();\r\n            var tx: Context = TiledMap._tempCanvas.context;\r\n            if (!tx) {\r\n                tx = TiledMap._tempCanvas.getContext('2d');\t//如果是webGL的话，这个会返回WebGLContext2D\r\n\r\n                //tx.__tx = 0;\r\n                //tx.__ty = 0;\r\n            }\r\n        }\r\n        canvas = TiledMap._tempCanvas;\r\n        canvas.context.asBitmap = false\r\n\r\n\r\n        var i: number, len: number;\r\n        len = arr.length;\r\n        var tGrid: GridSprite;\r\n        for (i = 0; i < len; i++) {\r\n            tGrid = arr[i];\r\n            canvas.clear();\r\n            canvas.size(1, 1);\r\n            tGrid.render(canvas.context, 0, 0);\r\n            tGrid.hide();\r\n        }\r\n        canvas.clear();\r\n        canvas.size(1, 1);\r\n    }\r\n\r\n    private getGridArray(gridX: number, gridY: number): any[] {\r\n        var i: number, j: number;\r\n        var tGridSprite: GridSprite\r\n        var tTempArray: any[] = this._gridArray[gridY][gridX];\r\n        if (tTempArray == null) {\r\n            tTempArray = this._gridArray[gridY][gridX] = [];\r\n\r\n            var tLeft: number = 0;\r\n            var tRight: number = 0;\r\n            var tTop: number = 0;\r\n            var tBottom: number = 0;\r\n\r\n            var tGridWidth: number = this._gridWidth\r\n            var tGridHeight: number = this._gridHeight;\r\n            switch (this.orientation) {\r\n                case TiledMap.ORIENTATION_ISOMETRIC: //45度角\r\n                    tLeft = Math.floor(gridX * tGridWidth);\r\n                    tRight = Math.floor(gridX * tGridWidth + tGridWidth);\r\n                    tTop = Math.floor(gridY * tGridHeight);\r\n                    tBottom = Math.floor(gridY * tGridHeight + tGridHeight);\r\n                    var tLeft1: number, tRight1: number, tTop1: number, tBottom1: number;\r\n                    break;\r\n                case TiledMap.ORIENTATION_STAGGERED: //45度交错地图\r\n                    tLeft = Math.floor(gridX * tGridWidth / this._mapTileW);\r\n                    tRight = Math.floor((gridX * tGridWidth + tGridWidth) / this._mapTileW);\r\n                    tTop = Math.floor(gridY * tGridHeight / (this._mapTileH / 2));\r\n                    tBottom = Math.floor((gridY * tGridHeight + tGridHeight) / (this._mapTileH / 2));\r\n                    break;\r\n                case TiledMap.ORIENTATION_ORTHOGONAL: //直角\r\n                    tLeft = Math.floor(gridX * tGridWidth / this._mapTileW);\r\n                    tRight = Math.floor((gridX * tGridWidth + tGridWidth) / this._mapTileW);\r\n                    tTop = Math.floor(gridY * tGridHeight / this._mapTileH);\r\n                    tBottom = Math.floor((gridY * tGridHeight + tGridHeight) / this._mapTileH);\r\n                    break;\r\n                case TiledMap.ORIENTATION_HEXAGONAL: //六边形\r\n                    var tHeight: number = this._mapTileH * 2 / 3;\r\n                    tLeft = Math.floor(gridX * tGridWidth / this._mapTileW);\r\n                    tRight = Math.ceil((gridX * tGridWidth + tGridWidth) / this._mapTileW);\r\n                    tTop = Math.floor(gridY * tGridHeight / tHeight);\r\n                    tBottom = Math.ceil((gridY * tGridHeight + tGridHeight) / tHeight);\r\n                    break;\r\n\r\n            }\r\n\r\n            var tLayer: MapLayer = null;\r\n            var tTGridSprite: GridSprite;\r\n            var tDrawMapLayer: MapLayer;\r\n            for (var z: number = 0; z < this._layerArray.length; z++) {\r\n                tLayer = this._layerArray[z];\r\n\r\n                if (this.enableMergeLayer) {\r\n                    if (tLayer.tarLayer != tDrawMapLayer) {\r\n                        tTGridSprite = null;\r\n                        tDrawMapLayer = tLayer.tarLayer;\r\n                    }\r\n                    if (!tTGridSprite) {\r\n                        tTGridSprite = tDrawMapLayer.getDrawSprite(gridX, gridY);\r\n                        tTempArray.push(tTGridSprite);\r\n                        //tDrawMapLayer.addChild(tTGridSprite);\r\n                    }\r\n                    tGridSprite = tTGridSprite;\r\n                }\r\n                else {\r\n                    tGridSprite = tLayer.getDrawSprite(gridX, gridY);\r\n                    tTempArray.push(tGridSprite);\r\n                }\r\n\r\n                var tColorStr: string;\r\n                if (this._showGridKey) {\r\n                    tColorStr = \"#\";\r\n                    tColorStr += this._colorArray[Math.floor(Math.random() * this._colorArray.length)];\r\n                    tColorStr += this._colorArray[Math.floor(Math.random() * this._colorArray.length)];\r\n                    tColorStr += this._colorArray[Math.floor(Math.random() * this._colorArray.length)];\r\n                }\r\n                switch (this.orientation) {\r\n                    case TiledMap.ORIENTATION_ISOMETRIC: //45度角\r\n                        var tHalfTileHeight: number = this.tileHeight / 2;\r\n                        var tHalfTileWidth: number = this.tileWidth / 2;\r\n                        var tHalfMapWidth: number = this._width / 2;\r\n                        tTop1 = Math.floor(tTop / tHalfTileHeight);\r\n                        tBottom1 = Math.floor(tBottom / tHalfTileHeight);\r\n                        tLeft1 = this._mapW + Math.floor((tLeft - tHalfMapWidth) / tHalfTileWidth);\r\n                        tRight1 = this._mapW + Math.floor((tRight - tHalfMapWidth) / tHalfTileWidth);\r\n\r\n                        var tMapW: number = this._mapW * 2;\r\n                        var tMapH: number = this._mapH * 2;\r\n\r\n                        if (tTop1 < 0) {\r\n                            tTop1 = 0;\r\n                        }\r\n                        if (tTop1 >= tMapH) {\r\n                            tTop1 = tMapH - 1;\r\n                        }\r\n                        if (tBottom1 < 0) {\r\n                            tBottom = 0;\r\n                        }\r\n                        if (tBottom1 >= tMapH) {\r\n                            tBottom1 = tMapH - 1;\r\n                        }\r\n                        tGridSprite.zOrder = this._totalGridNum * z + gridY * this._gridW + gridX;\r\n                        for (i = tTop1; i < tBottom1; i++) {\r\n                            for (j = 0; j <= i; j++) {\r\n                                var tIndexX: number = i - j;\r\n                                var tIndexY: number = j;\r\n                                var tIndexValue: number = (tIndexX - tIndexY) + this._mapW;\r\n                                if (tIndexValue > tLeft1 && tIndexValue <= tRight1) {\r\n                                    if (tLayer.drawTileTexture(tGridSprite, tIndexX, tIndexY)) {\r\n                                        tGridSprite.drawImageNum++;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        break;\r\n                    case TiledMap.ORIENTATION_STAGGERED: //45度交错地图\r\n                        tGridSprite.zOrder = z * this._totalGridNum + gridY * this._gridW + gridX;\r\n                        for (i = tTop; i < tBottom; i++) {\r\n                            for (j = tLeft; j < tRight; j++) {\r\n                                if (tLayer.drawTileTexture(tGridSprite, j, i)) {\r\n                                    tGridSprite.drawImageNum++;\r\n                                }\r\n                            }\r\n                        }\r\n                        break;\r\n                    case TiledMap.ORIENTATION_ORTHOGONAL: //直角\r\n                    case TiledMap.ORIENTATION_HEXAGONAL: //六边形\r\n                        switch (this._renderOrder) {\r\n                            case TiledMap.RENDERORDER_RIGHTDOWN:\r\n                                tGridSprite.zOrder = z * this._totalGridNum + gridY * this._gridW + gridX;\r\n                                for (i = tTop; i < tBottom; i++) {\r\n                                    for (j = tLeft; j < tRight; j++) {\r\n                                        if (tLayer.drawTileTexture(tGridSprite, j, i)) {\r\n                                            tGridSprite.drawImageNum++;\r\n                                        }\r\n                                    }\r\n                                }\r\n                                break;\r\n                            case TiledMap.RENDERORDER_RIGHTUP:\r\n                                tGridSprite.zOrder = z * this._totalGridNum + (this._gridH - 1 - gridY) * this._gridW + gridX;\r\n                                for (i = tBottom - 1; i >= tTop; i--) {\r\n                                    for (j = tLeft; j < tRight; j++) {\r\n                                        if (tLayer.drawTileTexture(tGridSprite, j, i)) {\r\n                                            tGridSprite.drawImageNum++;\r\n                                        }\r\n                                    }\r\n                                }\r\n                                break;\r\n                            case TiledMap.RENDERORDER_LEFTDOWN:\r\n                                tGridSprite.zOrder = z * this._totalGridNum + gridY * this._gridW + (this._gridW - 1 - gridX);\r\n                                for (i = tTop; i < tBottom; i++) {\r\n                                    for (j = tRight - 1; j >= tLeft; j--) {\r\n                                        if (tLayer.drawTileTexture(tGridSprite, j, i)) {\r\n                                            tGridSprite.drawImageNum++;\r\n                                        }\r\n                                    }\r\n                                }\r\n                                break;\r\n                            case TiledMap.RENDERORDER_LEFTUP:\r\n                                tGridSprite.zOrder = z * this._totalGridNum + (this._gridH - 1 - gridY) * this._gridW + (this._gridW - 1 - gridX);\r\n                                for (i = tBottom - 1; i >= tTop; i--) {\r\n                                    for (j = tRight - 1; j >= tLeft; j--) {\r\n                                        if (tLayer.drawTileTexture(tGridSprite, j, i)) {\r\n                                            tGridSprite.drawImageNum++;\r\n                                        }\r\n                                    }\r\n                                }\r\n                                break;\r\n                        }\r\n                        break;\r\n                }\r\n                //没动画了GRID，保存为图片\r\n                if (!tGridSprite.isHaveAnimation) {\r\n                    tGridSprite.autoSize = true;\r\n                    if (this.autoCache)\r\n                        tGridSprite.cacheAs = this.autoCacheType;\r\n                    tGridSprite.autoSize = false;\r\n                }\r\n\r\n                if (!this.enableMergeLayer) {\r\n                    if (tGridSprite.drawImageNum > 0) {\r\n                        tLayer.addChild(tGridSprite);\r\n                    }\r\n                    if (this._showGridKey) {\r\n                        tGridSprite.graphics.drawRect(0, 0, tGridWidth, tGridHeight, null, tColorStr);\r\n                    }\r\n                } else {\r\n                    if (tTGridSprite && tTGridSprite.drawImageNum > 0 && tDrawMapLayer) {\r\n                        tDrawMapLayer.addChild(tTGridSprite);\r\n                    }\r\n                }\r\n\r\n\r\n            }\r\n            if (this.enableMergeLayer && this.showGridTextureCount) {\r\n                if (tTGridSprite) {\r\n                    tTGridSprite.graphics.fillText(tTGridSprite.drawImageNum + \"\", 20, 20, null, \"#ff0000\", \"left\");\r\n                }\r\n            }\r\n        }\r\n        return tTempArray;\r\n    }\r\n\r\n    /**\r\n     * 隐藏指定的GRID\r\n     * @param\tgridX\r\n     * @param\tgridY\r\n     */\r\n    private hideGrid(gridX: number, gridY: number): void {\r\n        if (gridX < 0 || gridX >= this._gridW || gridY < 0 || gridY >= this._gridH) {\r\n            return;\r\n        }\r\n        var tTempArray: any[] = this._gridArray[gridY][gridX];\r\n        if (tTempArray) {\r\n            var tGridSprite: GridSprite;\r\n            for (var i: number = 0; i < tTempArray.length; i++) {\r\n                tGridSprite = tTempArray[i];\r\n                if (tGridSprite.drawImageNum > 0) {\r\n                    if (tGridSprite != null) {\r\n                        tGridSprite.hide();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 得到对象层上的某一个物品\r\n     * @param\tlayerName   层的名称\r\n     * @param\tobjectName\t所找物品的名称\r\n     * @return\r\n     */\r\n    getLayerObject(layerName: string, objectName: string): GridSprite {\r\n        var tLayer: MapLayer = null;\r\n        for (var i: number = 0; i < this._layerArray.length; i++) {\r\n            tLayer = this._layerArray[i];\r\n            if (tLayer.layerName == layerName) {\r\n                break;\r\n            }\r\n        }\r\n        if (tLayer) {\r\n            return tLayer.getObjectByName(objectName);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 销毁地图\r\n     */\r\n    destroy(): void {\r\n        this._orientation = TiledMap.ORIENTATION_ORTHOGONAL;\r\n        //json数据\r\n        this._jsonData = null;\r\n\r\n        var i: number = 0;\r\n        var j: number = 0;\r\n        var z: number = 0;\r\n\r\n        this._gridArray = []; //??这里因为跟LAYER中的数据重复，所以不做处理\r\n        //清除子纹理\r\n        var tTileTexSet: TileTexSet;\r\n        for (i = 0; i < this._tileTexSetArr.length; i++) {\r\n            tTileTexSet = this._tileTexSetArr[i];\r\n            if (tTileTexSet) {\r\n                tTileTexSet.clearAll();\r\n            }\r\n        }\r\n        this._tileTexSetArr = [];\r\n        //清除主纹理\r\n        var tTexture: Texture;\r\n        for (i = 0; i < this._texArray.length; i++) {\r\n            tTexture = this._texArray[i];\r\n            tTexture.destroy();\r\n        }\r\n        this._texArray = [];\r\n\r\n        //地图信息中的一些基本数据\r\n        this._width = 0;\r\n        this._height = 0;\r\n        this._mapW = 0;\r\n        this._mapH = 0;\r\n        this._mapTileW = 0;\r\n        this._mapTileH = 0;\r\n\r\n        this._rect.setTo(0, 0, 0, 0);\r\n\r\n        var tLayer: MapLayer;\r\n        for (i = 0; i < this._layerArray.length; i++) {\r\n            tLayer = this._layerArray[i];\r\n            tLayer.clearAll();\r\n        }\r\n\r\n        this._layerArray = [];\r\n        this._renderLayerArray = [];\r\n        if (this._mapSprite) {\r\n            this._mapSprite.destroy();\r\n            this._mapSprite = null;\r\n        }\r\n\r\n        this._jsonLoader = null; //??\r\n        this._loader = null; //??\r\n        //\r\n        var tDic: any = this._animationDic;\r\n        for (var p in tDic) {\r\n            delete tDic[p];\r\n        }\r\n\r\n        this._properties = null;\r\n        tDic = this._tileProperties;\r\n        for (p in tDic) {\r\n            delete tDic[p];\r\n        }\r\n\r\n        this._currTileSet = null;\r\n        this._completeHandler = null;\r\n\r\n        this._mapRect.clearAll();\r\n        this._mapLastRect.clearAll();\r\n\r\n        this._tileSetArray = [];\r\n\r\n        this._gridWidth = 450;\r\n        this._gridHeight = 450;\r\n\r\n        this._gridW = 0;\r\n        this._gridH = 0;\r\n\r\n        this._x = 0;\r\n        this._y = 0;\r\n\r\n        this._index = 0;\r\n\r\n        this._enableLinear = true;\r\n        //资源的相对路径\r\n        this._resPath = null;\r\n        this._pathArray = null;\r\n    }\r\n\r\n    /****************************地图的基本数据***************************/ /**\r\n     * 格子的宽度\r\n     */\r\n    get tileWidth(): number {\r\n        return this._mapTileW;\r\n    }\r\n\r\n    /**\r\n     * 格子的高度\r\n     */\r\n    get tileHeight(): number {\r\n        return this._mapTileH;\r\n    }\r\n\r\n    /**\r\n     * 地图的宽度\r\n     */\r\n    get width(): number {\r\n        return this._width;\r\n    }\r\n\r\n    /**\r\n     * 地图的高度\r\n     */\r\n    get height(): number {\r\n        return this._height;\r\n    }\r\n\r\n    /**\r\n     * 地图横向的格子数\r\n     */\r\n    get numColumnsTile(): number {\r\n        return this._mapW;\r\n    }\r\n\r\n    /**\r\n     * 地图竖向的格子数\r\n     */\r\n    get numRowsTile(): number {\r\n        return this._mapH;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 视口x坐标\r\n     */\r\n    get viewPortX(): number {\r\n        return -this._viewPortX;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 视口的y坐标\r\n     */\r\n    get viewPortY(): number {\r\n        return -this._viewPortY;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 视口的宽度\r\n     */\r\n    get viewPortWidth(): number {\r\n        return this._viewPortWidth;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 视口的高度\r\n     */\r\n    get viewPortHeight(): number {\r\n        return this._viewPortHeight;\r\n    }\r\n\r\n    /**\r\n     * 地图的x坐标\r\n     */\r\n    get x(): number {\r\n        return this._x;\r\n    }\r\n\r\n    /**\r\n     * 地图的y坐标\r\n     */\r\n    get y(): number {\r\n        return this._y;\r\n    }\r\n\r\n    /**\r\n     * 块的宽度\r\n     */\r\n    get gridWidth(): number {\r\n        return this._gridWidth;\r\n    }\r\n\r\n    /**\r\n     * 块的高度\r\n     */\r\n    get gridHeight(): number {\r\n        return this._gridHeight;\r\n    }\r\n\r\n    /**\r\n     * 地图的横向块数\r\n     */\r\n    get numColumnsGrid(): number {\r\n        return this._gridW;\r\n    }\r\n\r\n    /**\r\n     * 地图的坚向块数\r\n     */\r\n    get numRowsGrid(): number {\r\n        return this._gridH;\r\n    }\r\n\r\n    /**\r\n     * 当前地图类型\r\n     */\r\n    get orientation(): string {\r\n        return this._orientation;\r\n    }\r\n\r\n    /**\r\n     * tile渲染顺序\r\n     */\r\n    get renderOrder(): string {\r\n        return this._renderOrder;\r\n    }\r\n\r\n    /*****************************************对外接口**********************************************/\r\n\r\n    /**\r\n     * 整个地图的显示容器\r\n     * @return 地图的显示容器\r\n     */\r\n    mapSprite(): Sprite {\r\n        return this._mapSprite;\r\n    }\r\n\r\n    /**\r\n     * 得到指定的MapLayer\r\n     * @param layerName 要找的层名称\r\n     * @return\r\n     */\r\n    getLayerByName(layerName: string): MapLayer {\r\n        var tMapLayer: MapLayer;\r\n        for (var i: number = 0; i < this._layerArray.length; i++) {\r\n            tMapLayer = this._layerArray[i];\r\n            if (layerName == tMapLayer.layerName) {\r\n                return tMapLayer;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 通过索引得MapLayer\r\n     * @param\tindex 要找的层索引\r\n     * @return\r\n     */\r\n    getLayerByIndex(index: number): MapLayer {\r\n        if (index < this._layerArray.length) {\r\n            return this._layerArray[index];\r\n        }\r\n        return null;\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nclass GRect {\r\n    left: number;\r\n    top: number;\r\n    right: number;\r\n    bottom: number;\r\n\r\n    clearAll(): void {\r\n        this.left = this.top = this.right = this.bottom = 0;\r\n    }\r\n}\r\n\r\n\r\nclass TileMapAniData {\r\n    mAniIdArray: any[] = [];\r\n    mDurationTimeArray: any[] = [];\r\n    mTileTexSetArr: any[] = [];\r\n    image: any;\r\n}\r\n\r\n\r\nclass TileSet {\r\n\r\n    firstgid: number = 0;\r\n    image: string = \"\";\r\n    imageheight: number = 0;\r\n    imagewidth: number = 0;\r\n    margin: number = 0;\r\n    name: number = 0;\r\n    properties: any;\r\n    spacing: number = 0;\r\n    tileheight: number = 0;\r\n    tilewidth: number = 0;\r\n\r\n    titleoffsetX: number = 0;\r\n    titleoffsetY: number = 0;\r\n    tileproperties: any;\r\n\r\n    init(data: any): void {\r\n        this.firstgid = data.firstgid;\r\n        this.image = data.image;\r\n        this.imageheight = data.imageheight;\r\n        this.imagewidth = data.imagewidth;\r\n        this.margin = data.margin;\r\n        this.name = data.name;\r\n        this.properties = data.properties;\r\n        this.spacing = data.spacing;\r\n        this.tileheight = data.tileheight;\r\n        this.tilewidth = data.tilewidth;\r\n\r\n        //自定义属性\r\n        this.tileproperties = data.tileproperties;\r\n        var tTileoffset: any = data.tileoffset;\r\n        if (tTileoffset) {\r\n            this.titleoffsetX = tTileoffset.x;\r\n            this.titleoffsetY = tTileoffset.y;\r\n        }\r\n    }\r\n}\r\n\r\nIMap.TiledMap = TiledMap;"],"names":["Sprite","Point","ILaya","Rectangle","Loader","Texture","HTMLCanvas"],"mappings":"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"}