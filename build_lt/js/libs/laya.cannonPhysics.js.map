{"version":3,"file":"laya.cannonPhysics.js","sources":["../../../src/layaAir/laya/d3/physicsCannon/CannonCollision.ts","../../../src/layaAir/laya/d3/physicsCannon/CannonContactPoint.ts","../../../src/layaAir/laya/d3/physicsCannon/CannonHitResult.ts","../../../src/layaAir/laya/d3/physicsCannon/CannonCollisionTool.ts","../../../src/layaAir/laya/d3/physicsCannon/shape/CannonColliderShape.ts","../../../src/layaAir/laya/d3/physicsCannon/shape/CannonBoxColliderShape.ts","../../../src/layaAir/laya/d3/physicsCannon/shape/CannonSphereColliderShape.ts","../../../src/layaAir/laya/d3/physicsCannon/CannonPhysicsComponent.ts","../../../src/layaAir/laya/d3/physicsCannon/CannonPhysicsTriggerComponent.ts","../../../src/layaAir/laya/d3/physicsCannon/CannonPhysicsCollider.ts","../../../src/layaAir/laya/d3/physicsCannon/CannonPhysicsSettings.ts","../../../src/layaAir/laya/d3/physicsCannon/CannonPhysicsUpdateList.ts","../../../src/layaAir/laya/d3/physicsCannon/CannonPhysicsSimulation.ts","../../../src/layaAir/laya/d3/physicsCannon/CannonRigidbody3D.ts","../../../src/layaAir/laya/d3/physicsCannon/shape/CannonCompoundColliderShape.ts"],"sourcesContent":["import { CannonContactPoint } from \"./CannonContactPoint\";\r\nimport { CannonPhysicsComponent } from \"./CannonPhysicsComponent\"\r\n\t\r\n\t/**\r\n\t * <code>Collision</code> 类用于创建物理碰撞信息。\r\n\t */\r\n\texport class CannonCollision {\r\n\t\t/**@internal */\r\n\t\t _lastUpdateFrame:number = -2147483648/*int.MIN_VALUE*/;\r\n\t\t/**@internal */\r\n\t\t _updateFrame:number = -2147483648/*int.MIN_VALUE*/;\r\n\t\t/**@internal */\r\n\t\t _isTrigger:boolean = false;\r\n\t\t\r\n\t\t/**@internal */\r\n\t\t _colliderA:CannonPhysicsComponent;\r\n\t\t/**@internal */\r\n\t\t _colliderB:CannonPhysicsComponent;\r\n\t\t\r\n\t\t/**@readonly*/\r\n\t\t contacts:CannonContactPoint[] = [];\r\n\t\t/**@readonly*/\r\n\t\t other:CannonPhysicsComponent;\r\n\t\t\r\n\t\t/**\r\n\t\t * 创建一个 <code>Collision</code> 实例。\r\n\t\t */\r\n\t\tconstructor(){\r\n\t\t\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * @internal\r\n\t\t */\r\n\t\t _setUpdateFrame(farme:number):void {\r\n\t\t\tthis._lastUpdateFrame = this._updateFrame;//\r\n\t\t\tthis._updateFrame = farme;\r\n\t\t}\r\n\t\r\n\t}\r\n\r\n\r\n","import { CannonPhysicsComponent } from \"./CannonPhysicsComponent\"\r\nimport { Vector3 } from \"../math/Vector3\"\r\n\r\n/**\r\n * <code>ContactPoint</code> 类用于创建物理碰撞信息。\r\n */\r\nexport class CannonContactPoint {\r\n\t/**@internal */\r\n\t_idCounter: number = 0;\r\n\r\n\t/**@internal */\r\n\t_id: number;\r\n\r\n\t/**碰撞器A。*/\r\n\tcolliderA: CannonPhysicsComponent = null;\r\n\t/**碰撞器B。*/\r\n\tcolliderB: CannonPhysicsComponent = null;\r\n\t/**距离。*/\r\n\tdistance: number = 0;\r\n\t/**法线。*/\r\n\tnormal: Vector3 = new Vector3();\r\n\t/**碰撞器A的碰撞点。*/\r\n\tpositionOnA: Vector3 = new Vector3();\r\n\t/**碰撞器B的碰撞点。*/\r\n\tpositionOnB: Vector3 = new Vector3();\r\n\r\n\t/**\r\n\t * 创建一个 <code>ContactPoint</code> 实例。\r\n\t */\r\n\tconstructor() {\r\n\t\tthis._id = ++this._idCounter;\r\n\t}\r\n\r\n}\r\n\r\n\r\n","import { CannonPhysicsComponent } from \"./CannonPhysicsComponent\"\r\n\timport { Vector3 } from \"../math/Vector3\"\r\n\t\r\n\t/**\r\n\t * <code>HitResult</code> 类用于实现射线检测或形状扫描的结果。\r\n\t */\r\n\texport class CannonHitResult {\r\n\t\t/** 是否成功。 */\r\n\t\t succeeded:boolean = false;\r\n\t\t/** 发生碰撞的碰撞组件。*/\r\n\t\t collider:CannonPhysicsComponent = null;\r\n\t\t/** 碰撞点。*/\r\n\t\t point:Vector3 = new Vector3();\r\n\t\t/** 碰撞法线。*/\r\n\t\t normal:Vector3 = new Vector3();\r\n\t\t/** 碰撞分数。 */\r\n\t\t hitFraction:number = 0;\r\n\t\t\r\n\t\t/**\r\n\t\t * 创建一个 <code>HitResult</code> 实例。\r\n\t\t */\r\n\t\tconstructor(){\r\n\t\t\r\n\t\t}\r\n\t\r\n\t}\r\n\r\n\r\n","import { CannonContactPoint } from \"./CannonContactPoint\";\r\nimport { CannonHitResult } from \"./CannonHitResult\";\r\nimport { CannonCollision } from \"./CannonCollision\";\r\nimport { CannonPhysicsComponent } from \"./CannonPhysicsComponent\";\r\n\r\n/**\r\n * <code>CollisionMap</code> 类用于实现碰撞组合实例图。\r\n */\r\nexport class CannonCollisionTool {\r\n\t/**@internal\t*/\r\n\tprivate _hitResultsPoolIndex: number = 0;\r\n\t/**@internal\t*/\r\n\tprivate _hitResultsPool: CannonHitResult[] = [];\r\n\t/**@internal\t*/\r\n\tprivate _contactPonintsPoolIndex: number = 0;\r\n\t/**@internal\t*/\r\n\tprivate _contactPointsPool: CannonContactPoint[] = [];\r\n\t/**@internal */\r\n\tprivate _collisionsPool: CannonCollision[] = [];\r\n\r\n\t/**@internal */\r\n\tprivate _collisions: any = {};\r\n\r\n\t/**\r\n\t * 创建一个 <code>CollisionMap</code> 实例。\r\n\t */\r\n\tconstructor() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tgetHitResult(): CannonHitResult {\r\n\t\tvar hitResult: CannonHitResult = this._hitResultsPool[this._hitResultsPoolIndex++];\r\n\t\tif (!hitResult) {\r\n\t\t\thitResult = new CannonHitResult();\r\n\t\t\tthis._hitResultsPool.push(hitResult);\r\n\t\t}\r\n\t\treturn hitResult;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\trecoverAllHitResultsPool(): void {\r\n\t\tthis._hitResultsPoolIndex = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tgetContactPoints(): CannonContactPoint {\r\n\t\tvar contactPoint: CannonContactPoint = this._contactPointsPool[this._contactPonintsPoolIndex++];\r\n\t\tif (!contactPoint) {\r\n\t\t\tcontactPoint = new CannonContactPoint();\r\n\t\t\tthis._contactPointsPool.push(contactPoint);\r\n\t\t}\r\n\t\treturn contactPoint;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\trecoverAllContactPointsPool(): void {\r\n\t\tthis._contactPonintsPoolIndex = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tgetCollision(physicComponentA: CannonPhysicsComponent, physicComponentB: CannonPhysicsComponent): CannonCollision {\r\n\t\tvar collision: CannonCollision;\r\n\t\tvar idA: number = physicComponentA.id;\r\n\t\tvar idB: number = physicComponentB.id;\r\n\t\tvar subCollisionFirst: any = this._collisions[idA];\r\n\t\tif (subCollisionFirst)\r\n\t\t\tcollision = subCollisionFirst[idB];\r\n\t\tif (!collision) {\r\n\t\t\tif (!subCollisionFirst) {\r\n\t\t\t\tsubCollisionFirst = {};\r\n\t\t\t\tthis._collisions[idA] = subCollisionFirst;\r\n\t\t\t}\r\n\t\t\tcollision = this._collisionsPool.length === 0 ? new CannonCollision() : this._collisionsPool.pop();\r\n\t\t\tcollision._colliderA = physicComponentA;\r\n\t\t\tcollision._colliderB = physicComponentB;\r\n\t\t\tsubCollisionFirst[idB] = collision;\r\n\t\t}\r\n\t\treturn collision;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\trecoverCollision(collision: CannonCollision): void {\r\n\t\tvar idA: number = collision._colliderA.id;\r\n\t\tvar idB: number = collision._colliderB.id;\r\n\t\tthis._collisions[idA][idB] = null;\r\n\t\tthis._collisionsPool.push(collision);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tgarbageCollection(): void {//TODO:哪里调用\r\n\t\tthis._hitResultsPoolIndex = 0;\r\n\t\tthis._hitResultsPool.length = 0;\r\n\r\n\t\tthis._contactPonintsPoolIndex = 0;\r\n\t\tthis._contactPointsPool.length = 0;\r\n\r\n\t\tthis._collisionsPool.length = 0;\r\n\t\tfor (var subCollisionsKey in this._collisionsPool) {\r\n\t\t\tvar subCollisions: any = this._collisionsPool[subCollisionsKey];\r\n\t\t\tvar wholeDelete: boolean = true;\r\n\t\t\tfor (var collisionKey in subCollisions) {\r\n\t\t\t\tif (subCollisions[collisionKey])\r\n\t\t\t\t\twholeDelete = false;\r\n\t\t\t\telse\r\n\t\t\t\t\tdelete subCollisions[collisionKey];\r\n\t\t\t}\r\n\t\t\tif (wholeDelete)\r\n\t\t\t\tdelete this._collisionsPool[subCollisionsKey];\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n","import { IClone } from \"../../core/IClone\";\r\nimport { Matrix4x4 } from \"../../math/Matrix4x4\";\r\nimport { Quaternion } from \"../../math/Quaternion\";\r\nimport { Vector3 } from \"../../math/Vector3\";\r\nimport { CannonPhysicsComponent } from \"../CannonPhysicsComponent\";\r\n\r\n/**\r\n * <code>ColliderShape</code> 类用于创建形状碰撞器的父类，该类为抽象类。\r\n */\r\nexport class CannonColliderShape implements IClone {\r\n\t/** 形状方向_X轴正向 */\r\n\tstatic SHAPEORIENTATION_UPX: number = 0;\r\n\t/** 形状方向_Y轴正向 */\r\n\tstatic SHAPEORIENTATION_UPY: number = 1;\r\n\t/** 形状方向_Z轴正向 */\r\n\tstatic SHAPEORIENTATION_UPZ: number = 2;\r\n\r\n\t/** @internal */\r\n\tstatic SHAPETYPES_BOX: number = 0;\r\n\t/** @internal */\r\n\tstatic SHAPETYPES_SPHERE: number = 1;\r\n\t/** @internal */\r\n\tstatic SHAPETYPES_CYLINDER: number = 2;\r\n\t/** @internal */\r\n\tstatic SHAPETYPES_CAPSULE: number = 3;\r\n\t/** @internal */\r\n\tstatic SHAPETYPES_CONVEXHULL: number = 4;\r\n\t/** @internal */\r\n\tstatic SHAPETYPES_COMPOUND: number = 5;\r\n\t/** @internal */\r\n\tstatic SHAPETYPES_STATICPLANE: number = 6;\r\n\t/** @internal */\r\n\tstatic SHAPETYPES_CONE: number = 7;\r\n\r\n\t/** @internal */\r\n\tstatic _tempVector30: Vector3 = new Vector3();\r\n\t/** @internal */\r\n\tprotected static _btScale: CANNON.Vec3;\r\n\t/**@internal */\r\n\tprotected static _btVector30: CANNON.Vec3;\r\n\t/**@internal */\r\n\tprotected static _btQuaternion0: CANNON.Quaternion;\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tstatic __init__(): void {\r\n\t\tCannonColliderShape._btScale = new CANNON.Vec3();\r\n\t\tCannonColliderShape._btVector30 = new CANNON.Vec3();\r\n\t\tCannonColliderShape._btQuaternion0 = new CANNON.Quaternion();\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tstatic _createAffineTransformation(trans: Vector3, rot: Quaternion, outE: Float32Array): void {\r\n\r\n\t\tvar x: number = rot.x, y: number = rot.y, z: number = rot.z, w: number = rot.w, x2: number = x + x, y2: number = y + y, z2: number = z + z;\r\n\t\tvar xx: number = x * x2, xy: number = x * y2, xz: number = x * z2, yy: number = y * y2, yz: number = y * z2, zz: number = z * z2;\r\n\t\tvar wx: number = w * x2, wy: number = w * y2, wz: number = w * z2;\r\n\r\n\t\toutE[0] = (1 - (yy + zz));\r\n\t\toutE[1] = (xy + wz);\r\n\t\toutE[2] = (xz - wy);\r\n\t\toutE[3] = 0;\r\n\t\toutE[4] = (xy - wz);\r\n\t\toutE[5] = (1 - (xx + zz));\r\n\t\toutE[6] = (yz + wx);\r\n\t\toutE[7] = 0;\r\n\t\toutE[8] = (xz + wy);\r\n\t\toutE[9] = (yz - wx);\r\n\t\toutE[10] = (1 - (xx + yy));\r\n\t\toutE[11] = 0;\r\n\t\toutE[12] = trans.x;\r\n\t\toutE[13] = trans.y;\r\n\t\toutE[14] = trans.z;\r\n\t\toutE[15] = 1;\r\n\t}\r\n\r\n\t/**@internal */\r\n\t _scale: Vector3 = new Vector3(1, 1, 1);\r\n\r\n\t/**@internal */\r\n\t_btShape: CANNON.Shape;\r\n\t/**@internal */\r\n\t_type: number;//TODO:可以删掉\r\n\t/**@internal */\r\n\t_centerMatrix: Matrix4x4 = new Matrix4x4();\r\n\r\n\t/**@internal */\r\n\t_attatched: boolean = false;\r\n\t/**@internal */\r\n\t_indexInCompound: number = -1;\r\n\t/**@internal */\r\n\t_compoundParent: any = null;\r\n\t/**@internal */\r\n\t_attatchedCollisionObject: CannonPhysicsComponent = null;\r\n\r\n\t/**@internal */\r\n\t_referenceCount: number = 0;\r\n\r\n\t/**@internal */\r\n\tprivate _localOffset: Vector3 = new Vector3(0, 0, 0);\r\n\t/**@internal */\r\n\tprivate _localRotation: Quaternion = new Quaternion(0, 0, 0, 1);\r\n\r\n\tneedsCustomCollisionCallback: boolean = false;//TODO:默认值,TODO:::::::::::::::::::::::::::::::\r\n\r\n\t/**\r\n\t * 碰撞类型。\r\n\t */\r\n\tget type(): number {\r\n\t\treturn this._type;\r\n\t}\r\n\r\n\t/**\r\n\t * Shape的本地偏移。\r\n\t */\r\n\tget localOffset(): Vector3 {\r\n\t\treturn this._localOffset;\r\n\t}\r\n\r\n\tset localOffset(value: Vector3) {\r\n\t\tvalue.cloneTo(this._localOffset); \r\n\t}\r\n\r\n\t/**\r\n\t * Shape的本地旋转。\r\n\t */\r\n\tget localRotation(): Quaternion {\r\n\t\treturn this._localRotation;\r\n\t}\r\n\r\n\tset localRotation(value: Quaternion) {\r\n\t\tthis._localRotation = value;\r\n\t\tif (this._compoundParent)\r\n\t\t\tthis._compoundParent._updateChildTransform(this);\r\n\t}\r\n\r\n\t/**\r\n\t * 创建一个新的 <code>ColliderShape</code> 实例。\r\n\t */\r\n\tconstructor() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\t_setScale(value: Vector3): void {\r\n\t\t//TODO:\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\t_addReference(): void {\r\n\t\tthis._referenceCount++;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\t_removeReference(): void {\r\n\t\tthis._referenceCount--;\r\n\t}\r\n\r\n\t/**\r\n\t * 更新本地偏移,如果修改LocalOffset或LocalRotation需要调用。\r\n\t */\r\n\tupdateLocalTransformations(): void {//TODO:是否需要优化\r\n\t\tif (this._compoundParent) {\r\n\t\t\tvar offset: Vector3 = CannonColliderShape._tempVector30;\r\n\t\t\tVector3.multiply(this.localOffset, this._scale, offset);\r\n\t\t\tCannonColliderShape._createAffineTransformation(offset, this.localRotation, this._centerMatrix.elements);\r\n\t\t} else {\r\n\t\t\tCannonColliderShape._createAffineTransformation(this.localOffset, this.localRotation, this._centerMatrix.elements);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 克隆。\r\n\t * @param\tdestObject 克隆源。\r\n\t */\r\n\tcloneTo(destObject: any): void {\r\n\t\tvar destColliderShape: CannonColliderShape = (<CannonColliderShape>destObject);\r\n\t\tthis._localOffset.cloneTo(destColliderShape.localOffset);\r\n\t\tthis._localRotation.cloneTo(destColliderShape.localRotation);\r\n\t\tdestColliderShape.localOffset = destColliderShape.localOffset;\r\n\t\tdestColliderShape.localRotation = destColliderShape.localRotation;\r\n\t}\r\n\r\n\t/**\r\n\t * 克隆。\r\n\t * @return 克隆副本。\r\n\t */\r\n\tclone(): any {\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * 销毁。\r\n\t */\r\n\tdestroy(): void {\r\n\t\tif (this._btShape) {\r\n\t\t\tthis._btShape = null;\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n\r\n","import { CannonColliderShape } from \"./CannonColliderShape\";\r\nimport { Vector3 } from \"../../math/Vector3\";\r\n\r\n/**\r\n * <code>BoxColliderShape</code> 类用于创建盒子形状碰撞器。\r\n */\r\nexport class CannonBoxColliderShape extends CannonColliderShape {\r\n\t/** @internal */\r\n\tprivate static _btSize: CANNON.Vec3;\r\n\r\n\t/**\r\n\t* @internal\r\n\t*/\r\n\tstatic __init__(): void {\r\n\t\tCannonBoxColliderShape._btSize =new CANNON.Vec3();\r\n\t}\r\n\r\n\t/**@internal */\r\n\tprivate _sizeX: number;\r\n\t/**@internal */\r\n\tprivate _sizeY: number;\r\n\t/**@internal */\r\n\tprivate _sizeZ: number;\r\n\r\n\t/**\r\n\t * X轴尺寸。\r\n\t */\r\n\tget sizeX(): number {\r\n\t\treturn this._sizeX;\r\n\t}\r\n\r\n\t/**\r\n\t * Y轴尺寸。\r\n\t */\r\n\tget sizeY(): number {\r\n\t\treturn this._sizeY;\r\n\t}\r\n\r\n\t/**\r\n\t * Z轴尺寸。\r\n\t */\r\n\tget sizeZ(): number {\r\n\t\treturn this._sizeZ;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * 创建一个新的 <code>BoxColliderShape</code> 实例。\r\n\t * @param sizeX 盒子X轴尺寸。\r\n\t * @param sizeY 盒子Y轴尺寸。\r\n\t * @param sizeZ 盒子Z轴尺寸。\r\n\t */\r\n\tconstructor(sizeX: number = 1.0, sizeY: number = 1.0, sizeZ: number = 1.0) {\r\n\r\n\t\tsuper();\r\n\t\tthis._sizeX = sizeX;\r\n\t\tthis._sizeY = sizeY;\r\n\t\tthis._sizeZ = sizeZ;\r\n\t\tthis._type = CannonColliderShape.SHAPETYPES_BOX;\r\n\t\tvar btsize = new CANNON.Vec3(sizeX/2,sizeY/2,sizeZ/2);\r\n\t\tthis._btShape =new CANNON.Box(btsize);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t * @override\r\n\t */\r\n\t_setScale(scale:Vector3){\r\n\t\tthis._scale.setValue(scale.x,scale.y,scale.z);\r\n\t\t(<CANNON.Box>this._btShape).halfExtents.set(this.sizeX/2*scale.x,this.sizeY/2*scale.y,this.sizeZ/2*scale.z);\r\n\t\t(<CANNON.Box>this._btShape).updateConvexPolyhedronRepresentation();\r\n\t\t(<CANNON.Box>this._btShape).updateBoundingSphereRadius();\r\n\t}\r\n\t/**\r\n\t * @inheritDoc\r\n\t * @override\r\n\t */\r\n\tclone(): any {\r\n\t\tvar dest: CannonBoxColliderShape = new CannonBoxColliderShape(this._sizeX, this._sizeY, this._sizeZ);\r\n\t\tthis.cloneTo(dest);\r\n\t\treturn dest;\r\n\t}\r\n}\r\n\r\n\r\n","import { CannonColliderShape } from \"./CannonColliderShape\";\r\nimport { Vector3 } from \"../../math/Vector3\";\r\n\r\n/**\r\n * <code>SphereColliderShape</code> 类用于创建球形碰撞器。\r\n */\r\nexport class CannonSphereColliderShape extends CannonColliderShape {\r\n\t/** @internal */\r\n\tprivate _radius: number;\r\n\r\n\t/**\r\n\t * 半径。\r\n\t */\r\n\tget radius(): number {\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\t/**\r\n\t * 创建一个新的 <code>SphereColliderShape</code> 实例。\r\n\t * @param radius 半径。\r\n\t */\r\n\tconstructor(radius: number = 0.5) {//TODO:球形旋转无效，需要优化\r\n\r\n\t\tsuper();\r\n\t\tthis._radius = radius;\r\n\t\tthis._type = CannonColliderShape.SHAPETYPES_SPHERE;\r\n\t\tthis._btShape =new CANNON.Sphere(radius);\r\n\t}\r\n\t/**\r\n\t * @inheritDoc\r\n\t * @override\r\n\t */\r\n\t_setScale(scale:Vector3){\r\n\t\tvar max:number = Math.max(scale.x,scale.y,scale.z);\r\n\t\tthis._scale.setValue(max,max,max);\r\n\t\t(<CANNON.Sphere>this._btShape).radius = max*this.radius;\r\n\t\t(<CANNON.Sphere>this._btShape).updateBoundingSphereRadius();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t * @override\r\n\t */\r\n\tclone(): any {\r\n\t\tvar dest: CannonSphereColliderShape = new CannonSphereColliderShape(this._radius);\r\n\t\tthis.cloneTo(dest);\r\n\t\treturn dest;\r\n\t}\r\n\r\n}\r\n\r\n\r\n","\r\nimport { Component } from \"../../components/Component\";\r\nimport { Event } from \"../../events/Event\";\r\nimport { Scene3D } from \"../core/scene/Scene3D\";\r\nimport { Sprite3D } from \"../core/Sprite3D\";\r\nimport { Transform3D } from \"../core/Transform3D\";\r\nimport { Matrix4x4 } from \"../math/Matrix4x4\";\r\nimport { Quaternion } from \"../math/Quaternion\";\r\nimport { Vector3 } from \"../math/Vector3\";\r\nimport { Physics3DUtils } from \"../utils/Physics3DUtils\";\r\nimport { CannonPhysicsSimulation } from \"./CannonPhysicsSimulation\";\r\nimport { CannonBoxColliderShape } from \"./shape/CannonBoxColliderShape\";\r\nimport { CannonColliderShape } from \"./shape/CannonColliderShape\";\r\nimport { CannonSphereColliderShape } from \"./shape/CannonSphereColliderShape\";\r\nimport { CannonCompoundColliderShape } from \"./shape/CannonCompoundColliderShape\";\r\n/**\r\n * <code>PhysicsComponent</code> 类用于创建物理组件的父类。\r\n */\r\nexport class CannonPhysicsComponent extends Component {\r\n\t/** @internal */\r\n\tstatic ACTIVATIONSTATE_ACTIVE_TAG: number = 1;\r\n\t/** @internal */\r\n\tstatic ACTIVATIONSTATE_ISLAND_SLEEPING: number = 2;\r\n\t/** @internal */\r\n\tstatic ACTIVATIONSTATE_WANTS_DEACTIVATION: number = 3;\r\n\t/** @internal */\r\n\tstatic ACTIVATIONSTATE_DISABLE_DEACTIVATION: number = 4;\r\n\t/** @internal */\r\n\tstatic ACTIVATIONSTATE_DISABLE_SIMULATION: number = 5;\r\n\r\n\t/** @internal */\r\n\tstatic COLLISIONFLAGS_STATIC_OBJECT: number = 1;\r\n\t/** @internal */\r\n\tstatic COLLISIONFLAGS_KINEMATIC_OBJECT: number = 2;\r\n\t/** @internal */\r\n\tstatic COLLISIONFLAGS_NO_CONTACT_RESPONSE: number = 4;\r\n\t/** @internal */\r\n\tstatic COLLISIONFLAGS_CUSTOM_MATERIAL_CALLBACK: number = 8;//this allows per-triangle material (friction/restitution)\r\n\t/** @internal */\r\n\tstatic COLLISIONFLAGS_CHARACTER_OBJECT: number = 16;\r\n\t/** @internal */\r\n\tstatic COLLISIONFLAGS_DISABLE_VISUALIZE_OBJECT: number = 32;//disable debug drawing\r\n\t/** @internal */\r\n\tstatic COLLISIONFLAGS_DISABLE_SPU_COLLISION_PROCESSING: number = 64;//disable parallel/SPU processing\r\n\r\n\t/** @internal */\r\n\tprotected static _tempVector30: Vector3 = new Vector3();\r\n\t/** @internal */\r\n\tprotected static _tempQuaternion0: Quaternion = new Quaternion();\r\n\t/** @internal */\r\n\tprotected static _tempQuaternion1: Quaternion = new Quaternion();\r\n\t/** @internal */\r\n\tprotected static _tempMatrix4x40: Matrix4x4 = new Matrix4x4();\r\n\t/** @internal */\r\n\tprotected static _btVector30: CANNON.Vec3;\r\n\t/** @internal */\r\n\tprotected static _btQuaternion0: CANNON.Quaternion;\r\n\r\n\t/** @internal */\r\n\tstatic _physicObjectsMap: any = {};\r\n\t/** @internal */\r\n\tstatic _addUpdateList: boolean = true;\r\n\r\n\t/**\r\n\t* @internal\r\n\t*/\r\n\tstatic __init__(): void {\r\n\t\tCannonPhysicsComponent._btVector30 =new CANNON.Vec3(0,0,0);\r\n\t\tCannonPhysicsComponent._btQuaternion0 = new CANNON.Quaternion(0,0,0,1);\r\n\t}\r\n\r\n\t// /**\r\n\t//  * @internal\r\n\t//  */\r\n\t// private static _createAffineTransformationArray(tranX: number, tranY: number, tranZ: number, rotX: number, rotY: number, rotZ: number, rotW: number, scale: Float32Array, outE: Float32Array): void {\r\n\r\n\t// \tvar x2: number = rotX + rotX, y2: number = rotY + rotY, z2: number = rotZ + rotZ;\r\n\t// \tvar xx: number = rotX * x2, xy: number = rotX * y2, xz: number = rotX * z2, yy: number = rotY * y2, yz: number = rotY * z2, zz: number = rotZ * z2;\r\n\t// \tvar wx: number = rotW * x2, wy: number = rotW * y2, wz: number = rotW * z2, sx: number = scale[0], sy: number = scale[1], sz: number = scale[2];\r\n\r\n\t// \toutE[0] = (1 - (yy + zz)) * sx;\r\n\t// \toutE[1] = (xy + wz) * sx;\r\n\t// \toutE[2] = (xz - wy) * sx;\r\n\t// \toutE[3] = 0;\r\n\t// \toutE[4] = (xy - wz) * sy;\r\n\t// \toutE[5] = (1 - (xx + zz)) * sy;\r\n\t// \toutE[6] = (yz + wx) * sy;\r\n\t// \toutE[7] = 0;\r\n\t// \toutE[8] = (xz + wy) * sz;\r\n\t// \toutE[9] = (yz - wx) * sz;\r\n\t// \toutE[10] = (1 - (xx + yy)) * sz;\r\n\t// \toutE[11] = 0;\r\n\t// \toutE[12] = tranX;\r\n\t// \toutE[13] = tranY;\r\n\t// \toutE[14] = tranZ;\r\n\t// \toutE[15] = 1;\r\n\t// }\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tstatic _creatShape(shapeData: any): CannonColliderShape {\r\n\t\tvar colliderShape: CannonColliderShape;\r\n\t\tswitch (shapeData.type) {\r\n\t\t\tcase \"BoxColliderShape\":\r\n\t\t\t\tvar sizeData: any[] = shapeData.size;\r\n\t\t\t\tcolliderShape = sizeData ? new CannonBoxColliderShape(sizeData[0], sizeData[1], sizeData[2]) : new CannonBoxColliderShape();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"SphereColliderShape\":\r\n\t\t\t\tcolliderShape = new CannonSphereColliderShape(shapeData.radius);\r\n\t\t\t\tbreak;\r\n\t\t\t// case \"CapsuleColliderShape\":\r\n\t\t\t// \tcolliderShape = new CapsuleColliderShape(shapeData.radius, shapeData.height, shapeData.orientation);\r\n\t\t\t// \tbreak;\r\n\t\t\t// case \"MeshColliderShape\":\r\n\t\t\t// \tvar meshCollider: MeshColliderShape = new MeshColliderShape();\r\n\t\t\t// \tshapeData.mesh && (meshCollider.mesh = Loader.getRes(shapeData.mesh));\r\n\t\t\t// \tcolliderShape = meshCollider;\r\n\t\t\t// \tbreak;\r\n\t\t\t// case \"ConeColliderShape\":\r\n\t\t\t// \tcolliderShape = new ConeColliderShape(shapeData.radius, shapeData.height, shapeData.orientation);\r\n\t\t\t// \tbreak;\r\n\t\t\t// case \"CylinderColliderShape\":\r\n\t\t\t// \tcolliderShape = new CylinderColliderShape(shapeData.radius, shapeData.height, shapeData.orientation);\r\n\t\t\t// \tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow \"unknown shape type.\";\r\n\t\t}\r\n\r\n\t\tif (shapeData.center) {\r\n\t\t\tvar localOffset: Vector3 = colliderShape.localOffset;\r\n\t\t\tlocalOffset.fromArray(shapeData.center);\r\n\t\t\tcolliderShape.localOffset = localOffset;\r\n\t\t}\r\n\t\treturn colliderShape;\r\n\t}\r\n\r\n\t// /**\r\n\t//  * @internal\r\n\t//  */\r\n\t// private static physicVector3TransformQuat(source: Vector3, qx: number, qy: number, qz: number, qw: number, out: Vector3): void {\r\n\t// \tvar x: number = source.x, y: number = source.y, z: number = source.z, ix: number = qw * x + qy * z - qz * y, iy: number = qw * y + qz * x - qx * z, iz: number = qw * z + qx * y - qy * x, iw: number = -qx * x - qy * y - qz * z;\r\n\t// \tout.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\r\n\t// \tout.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\r\n\t// \tout.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\r\n\t// }\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tprivate static physicQuaternionMultiply(lx: number, ly: number, lz: number, lw: number, right: Quaternion, out: Quaternion): void {\r\n\t\tvar rx: number = right.x;\r\n\t\tvar ry: number = right.y;\r\n\t\tvar rz: number = right.z;\r\n\t\tvar rw: number = right.w;\r\n\t\tvar a: number = (ly * rz - lz * ry);\r\n\t\tvar b: number = (lz * rx - lx * rz);\r\n\t\tvar c: number = (lx * ry - ly * rx);\r\n\t\tvar d: number = (lx * rx + ly * ry + lz * rz);\r\n\t\tout.x = (lx * rw + rx * lw) + a;\r\n\t\tout.y = (ly * rw + ry * lw) + b;\r\n\t\tout.z = (lz * rw + rz * lw) + c;\r\n\t\tout.w = lw * rw - d;\r\n\t}\r\n\r\n\t/** @internal */\r\n\tprivate _restitution: number = 0.0;\r\n\t/** @internal */\r\n\tprivate _friction: number = 0.5;\r\n\t/** @internal */\r\n\tprotected _collisionGroup: number = Physics3DUtils.COLLISIONFILTERGROUP_DEFAULTFILTER;\r\n\t/** @internal */\r\n\tprotected _canCollideWith: number = Physics3DUtils.COLLISIONFILTERGROUP_ALLFILTER;\r\n\t/** @internal */\r\n\tprotected _colliderShape: CannonColliderShape = null;\r\n\t/** @internal */\r\n\tprotected _transformFlag: number = 2147483647 /*int.MAX_VALUE*/;\r\n\t/** @internal */\r\n\tprotected _controlBySimulation: boolean = false;\r\n\r\n\t/** @internal */\r\n\t_btColliderObject: CANNON.Body;//TODO:不用声明,TODO:删除相关判断\r\n\t/** @internal */\r\n\t_simulation: CannonPhysicsSimulation;\r\n\t/** @internal */\r\n\t_enableProcessCollisions: boolean = true;\r\n\t/** @internal */\r\n\t_inPhysicUpdateListIndex: number = -1;\r\n\r\n\t/** 是否可以缩放Shape。 */\r\n\tcanScaleShape: boolean = true;\r\n\r\n\t/**\r\n\t * 弹力。\r\n\t */\r\n\tget restitution(): number {\r\n\t\treturn this._restitution;\r\n\t}\r\n\r\n\tset restitution(value: number) {\r\n\t\tthis._restitution = value;\r\n\t\tthis._btColliderObject && (this._btColliderObject.material.restitution = value);\r\n\t}\r\n\r\n\t/**\r\n\t * 摩擦力。\r\n\t */\r\n\tget friction(): number {\r\n\t\treturn this._friction;\r\n\t}\r\n\r\n\tset friction(value: number) {\r\n\t\tthis._friction = value;\r\n\t\tthis._btColliderObject && (this._btColliderObject.material.friction = value);\r\n\t}\r\n\r\n\t/**\r\n\t * 碰撞形状。\r\n\t */\r\n\tget colliderShape(): CannonColliderShape {\r\n\t\treturn this._colliderShape;\r\n\t}\r\n\r\n\tset colliderShape(value: CannonColliderShape) {\r\n\t\tvar lastColliderShape: CannonColliderShape = this._colliderShape;\r\n\t\tif (lastColliderShape) {\r\n\t\t\tlastColliderShape._attatched = false;\r\n\t\t\tlastColliderShape._attatchedCollisionObject = null;\r\n\t\t}\r\n\r\n\t\tthis._colliderShape = value;\r\n\t\tif (value) {\r\n\t\t\tif (value._attatched) {\r\n\t\t\t\tthrow \"PhysicsComponent: this shape has attatched to other entity.\";\r\n\t\t\t} else {\r\n\t\t\t\tvalue._attatched = true;\r\n\t\t\t\tvalue._attatchedCollisionObject = this;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._btColliderObject) {\r\n\t\t\t\tif(value.type!=CannonColliderShape.SHAPETYPES_COMPOUND){\r\n\t\t\t\t\tthis._btColliderObject.shapes.length = 0;\r\n\t\t\t\t\tthis._btColliderObject.shapeOffsets.length = 0;\r\n\t\t\t\t\tthis._btColliderObject.shapeOrientations.length = 0;\r\n\t\t\t\t\tvar localOffset = value.localOffset;\r\n\t\t\t\t\tvar scale = value._scale;\r\n\t\t\t\t\tvar vecs:CANNON.Vec3 =new CANNON.Vec3(localOffset.x*scale.x,localOffset.y*scale.y,localOffset.z*scale.z);\r\n\t\t\t\t\tthis._btColliderObject.addShape(this._colliderShape._btShape,vecs);\r\n\t\t\t\t\tthis._btColliderObject.updateBoundingRadius();\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\t(<CannonCompoundColliderShape>value).bindRigidBody(this);\r\n\t\t\t\t}\r\n\t\t\t\tvar canInSimulation: boolean = this._simulation && this._enabled;\r\n\t\t\t\t(canInSimulation && lastColliderShape) && (this._removeFromSimulation());//修改shape必须把Collison从物理世界中移除再重新添加\r\n\t\t\t\tthis._onShapeChange(value);//\r\n\t\t\t\tif (canInSimulation) {\r\n\t\t\t\t\tthis._derivePhysicsTransformation(true);\r\n\t\t\t\t\tthis._addToSimulation();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this._simulation && this._enabled)\r\n\t\t\t\tlastColliderShape && this._removeFromSimulation();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 模拟器。\r\n\t */\r\n\tget simulation(): CannonPhysicsSimulation {\r\n\t\treturn this._simulation;\r\n\t}\r\n\r\n\t/**\r\n\t * 所属碰撞组。\r\n\t */\r\n\tget collisionGroup(): number {\r\n\t\treturn this._collisionGroup;\r\n\t}\r\n\r\n\tset collisionGroup(value: number) {\r\n\t\tif (this._collisionGroup !== value) {\r\n\t\t\tthis._collisionGroup = value;\r\n\t\t\tthis._btColliderObject.collisionFilterGroup = value; \r\n\t\t\tif (this._simulation && this._colliderShape && this._enabled) {\r\n\t\t\t\tthis._removeFromSimulation();\r\n\t\t\t\tthis._addToSimulation();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 可碰撞的碰撞组,基于位运算。\r\n\t */\r\n\tget canCollideWith(): number {\r\n\t\treturn this._canCollideWith;\r\n\t}\r\n\r\n\tset canCollideWith(value: number) {\r\n\t\tif (this._canCollideWith !== value) {\r\n\t\t\tthis._canCollideWith = value;\r\n\t\t\tthis._btColliderObject.collisionFilterMask = value; \r\n\t\t\tif (this._simulation && this._colliderShape && this._enabled) {\r\n\t\t\t\tthis._removeFromSimulation();\r\n\t\t\t\tthis._addToSimulation();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 创建一个 <code>PhysicsComponent</code> 实例。\r\n\t * @param collisionGroup 所属碰撞组。\r\n\t * @param canCollideWith 可产生碰撞的碰撞组。\r\n\t */\r\n\tconstructor(collisionGroup: number, canCollideWith: number) {\r\n\t\tsuper();\r\n\t\tthis._collisionGroup = collisionGroup;\r\n\t\tthis._canCollideWith = canCollideWith;\r\n\t\tCannonPhysicsComponent._physicObjectsMap[this.id] = this;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tprotected _parseShape(shapesData: any[]): void {\r\n\t\tvar shapeCount: number = shapesData.length;\r\n\t\tif (shapeCount === 1) {\r\n\t\t\tvar shape: CannonColliderShape = CannonPhysicsComponent._creatShape(shapesData[0]);\r\n\t\t\tthis.colliderShape = shape;\r\n\t\t} else {\r\n\t\t\t//TODO:\r\n\t\t\t// var compoundShape: CompoundColliderShape = new CompoundColliderShape();\r\n\t\t\t// for (var i: number = 0; i < shapeCount; i++) {\r\n\t\t\t// \tshape = PhysicsComponent._creatShape(shapesData[i]);\r\n\t\t\t// \tcompoundShape.addChildShape(shape);\r\n\t\t\t// }\r\n\t\t\t// this.colliderShape = compoundShape;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tprotected _onScaleChange(scale: Vector3): void {\r\n\t\tthis._colliderShape._setScale(scale);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t * @internal\r\n\t * @override\r\n\t */\r\n\t_onEnable(): void {\r\n\t\t//@ts-ignorets  minerTODO：\r\n\t\tthis._simulation = ((<Scene3D>this.owner._scene))._cannonPhysicsSimulation;\r\n\t\tif (this._colliderShape) {\r\n\t\t\tthis._derivePhysicsTransformation(true);\r\n\t\t\tthis._addToSimulation();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t * @internal\r\n\t * @override\r\n\t */\r\n\tprotected _onDisable(): void {\r\n\t\tif (this._colliderShape) {\r\n\t\t\tthis._removeFromSimulation();\r\n\t\t\t(this._inPhysicUpdateListIndex !== -1) && (this._simulation._physicsUpdateList.remove(this));//销毁前一定会调用 _onDisable()\r\n\t\t}\r\n\t\tthis._simulation = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t * @internal\r\n\t * @override\r\n\t */\r\n\tprotected _onDestroy(): void {\r\n\t\tdelete CannonPhysicsComponent._physicObjectsMap[this.id];\r\n\t\tthis._btColliderObject = null;\r\n\t\tthis._colliderShape.destroy();\r\n\t\tsuper._onDestroy();\r\n\t\tthis._btColliderObject = null;\r\n\t\tthis._colliderShape = null;\r\n\t\tthis._simulation = null;\r\n\t\t(<Sprite3D>this.owner).transform.off(Event.TRANSFORM_CHANGED, this, this._onTransformChanged);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\t_isValid(): boolean {\r\n\t\treturn this._simulation && this._colliderShape && this._enabled;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t * @override\r\n\t * @internal\r\n\t */\r\n\t_parse(data: any): void {\r\n\t\t(data.collisionGroup != null) && (this.collisionGroup = data.collisionGroup);\r\n\t\t(data.canCollideWith != null) && (this.canCollideWith = data.canCollideWith);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\t_setTransformFlag(type: number, value: boolean): void {\r\n\t\tif (value)\r\n\t\t\tthis._transformFlag |= type;\r\n\t\telse\r\n\t\t\tthis._transformFlag &= ~type;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\t_getTransformFlag(type: number): boolean {\r\n\t\treturn (this._transformFlag & type) != 0;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\t_addToSimulation(): void {\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\t_removeFromSimulation(): void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * \t@internal\r\n\t */\r\n\t_derivePhysicsTransformation(force: boolean): void {\r\n\t\tvar btColliderObject: CANNON.Body = this._btColliderObject;\r\n\t\tthis._innerDerivePhysicsTransformation(btColliderObject, force);\r\n\t}\r\n\r\n\t/**\r\n\t * \t@internal\r\n\t *\t通过渲染矩阵更新物理矩阵。\r\n\t */\r\n\t_innerDerivePhysicsTransformation(physicTransformOut: CANNON.Body, force: boolean): void {\r\n\t\tvar transform: Transform3D = ((<Sprite3D>this.owner))._transform;\r\n\r\n\t\tif (force || this._getTransformFlag(Transform3D.TRANSFORM_WORLDPOSITION)) {\r\n\t\t\tvar shapeOffset: Vector3 = this._colliderShape.localOffset;\r\n\t\t\tvar position: Vector3 = transform.position;\r\n\t\t\tvar btPosition: CANNON.Vec3 = CannonPhysicsComponent._btVector30;\r\n\t\t\tif (shapeOffset.x !== 0 || shapeOffset.y !== 0 || shapeOffset.z !== 0) {\r\n\t\t\t\tvar physicPosition: Vector3 = CannonPhysicsComponent._tempVector30;\r\n\t\t\t\tvar worldMat: Matrix4x4 = transform.worldMatrix;\r\n\t\t\t\tVector3.transformCoordinate(shapeOffset, worldMat, physicPosition);\r\n\t\t\t\tbtPosition.set(physicPosition.x,physicPosition.y,physicPosition.z);\r\n\t\t\t} else {\r\n\t\t\t\tbtPosition.set(position.x,position.y,position.z);\r\n\t\t\t}\r\n\t\t\tphysicTransformOut.position.set(btPosition.x,btPosition.y,btPosition.z);\r\n\t\t\tthis._setTransformFlag(Transform3D.TRANSFORM_WORLDPOSITION, false);\r\n\t\t}\r\n\r\n\t\tif (force || this._getTransformFlag(Transform3D.TRANSFORM_WORLDQUATERNION)) {\r\n\t\t\tvar shapeRotation: Quaternion = this._colliderShape.localRotation;\r\n\t\t\tvar btRotation: CANNON.Quaternion= CannonPhysicsComponent._btQuaternion0;\r\n\t\t\tvar rotation: Quaternion = transform.rotation;\r\n\t\t\tif (shapeRotation.x !== 0 || shapeRotation.y !== 0 || shapeRotation.z !== 0 || shapeRotation.w !== 1) {\r\n\t\t\t\tvar physicRotation: Quaternion = CannonPhysicsComponent._tempQuaternion0;\r\n\t\t\t\tCannonPhysicsComponent.physicQuaternionMultiply(rotation.x, rotation.y, rotation.z, rotation.w, shapeRotation, physicRotation);\r\n\t\t\t\tbtRotation.set(physicRotation.x,physicRotation.y,physicRotation.z,physicRotation.w)\r\n\t\t\t} else {\r\n\t\t\t\tbtRotation.set(rotation.x,rotation.y,rotation.z,rotation.w)\r\n\t\t\t}\r\n\t\t\tphysicTransformOut.quaternion.set(btRotation.x,btRotation.y,btRotation.z,btRotation.w); \r\n\t\t\tthis._setTransformFlag(Transform3D.TRANSFORM_WORLDQUATERNION, false);\r\n\t\t}\r\n\r\n\t\tif (force || this._getTransformFlag(Transform3D.TRANSFORM_WORLDSCALE)) {\r\n\t\t\tthis._onScaleChange(transform.getWorldLossyScale());\r\n\t\t\tthis._setTransformFlag(Transform3D.TRANSFORM_WORLDSCALE, false);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t * 通过物理矩阵更新渲染矩阵。\r\n\t */\r\n\t_updateTransformComponent(physicsTransform: CANNON.Body): void {\r\n\t\tvar colliderShape: CannonColliderShape = this._colliderShape;\r\n\t\tvar localOffset: Vector3 = colliderShape.localOffset;\r\n\t\tvar localRotation: Quaternion = colliderShape.localRotation;\r\n\r\n\t\tvar transform: Transform3D = (<Sprite3D>this.owner)._transform;\r\n\t\tvar position: Vector3 = transform.position;\r\n\t\tvar rotation: Quaternion = transform.rotation;\r\n\r\n\t\tvar btPosition:CANNON.Vec3 = physicsTransform.position;\r\n\t\tvar btRotation:CANNON.Quaternion = physicsTransform.quaternion;\r\n\r\n\t\tvar btRotX: number = btRotation.x;\r\n\t\tvar btRotY: number = btRotation.y;\r\n\t\tvar btRotZ: number = btRotation.z;\r\n\t\tvar btRotW: number = btRotation.w;\r\n\r\n\t\tif (localRotation.x !== 0 || localRotation.y !== 0 || localRotation.z !== 0 || localRotation.w !== 1) {\r\n\t\t\tvar invertShapeRotaion: Quaternion = CannonPhysicsComponent._tempQuaternion0;\r\n\t\t\tlocalRotation.invert(invertShapeRotaion);\r\n\t\t\tCannonPhysicsComponent.physicQuaternionMultiply(btRotX, btRotY, btRotZ, btRotW, invertShapeRotaion, rotation);\r\n\t\t} else {\r\n\t\t\trotation.x = btRotX;\r\n\t\t\trotation.y = btRotY;\r\n\t\t\trotation.z = btRotZ;\r\n\t\t\trotation.w = btRotW;\r\n\t\t}\r\n\t\ttransform.rotation = rotation;\r\n\r\n\t\tif (localOffset.x !== 0 || localOffset.y !== 0 || localOffset.z !== 0) {\r\n\t\t\tvar rotShapePosition: Vector3 = CannonPhysicsComponent._tempVector30;\r\n\r\n\t\t\trotShapePosition.x = localOffset.x;\r\n\t\t\trotShapePosition.y = localOffset.y;\r\n\t\t\trotShapePosition.z = localOffset.z;\r\n\t\t\tVector3.transformQuat(rotShapePosition, rotation, rotShapePosition);\r\n\r\n\t\t\tposition.x = btPosition.x-rotShapePosition.x;\r\n\t\t\tposition.y = btPosition.y-rotShapePosition.z;\r\n\t\t\tposition.z = btPosition.z-rotShapePosition.y;\r\n\t\t} else {\r\n\t\t\tposition.x =  btPosition.x;\r\n\t\t\tposition.y = btPosition.y;\r\n\t\t\tposition.z = btPosition.z;\r\n\r\n\t\t}\r\n\t\ttransform.position = position;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\t_onShapeChange(colShape: CannonColliderShape): void {\r\n\t\t//TODO：\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t * @override\r\n\t * @internal\r\n\t */\r\n\t_onAdded(): void {\r\n\t\tthis.enabled = this._enabled;\r\n\t\tthis.restitution = this._restitution;\r\n\t\tthis.friction = this._friction;\r\n\t\t(<Sprite3D>this.owner).transform.on(Event.TRANSFORM_CHANGED, this, this._onTransformChanged);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\t_onTransformChanged(flag: number): void {\r\n\t\tif (CannonPhysicsComponent._addUpdateList || !this._controlBySimulation) {\r\n\t\t\tflag &= Transform3D.TRANSFORM_WORLDPOSITION | Transform3D.TRANSFORM_WORLDQUATERNION | Transform3D.TRANSFORM_WORLDSCALE;//过滤有用TRANSFORM标记\r\n\t\t\tif (flag) {\r\n\t\t\t\tthis._transformFlag |= flag;\r\n\t\t\t\tif (this._isValid() && this._inPhysicUpdateListIndex === -1)//_isValid()表示可使用\r\n\t\t\t\t\tthis._simulation._physicsUpdateList.add(this);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t * @override\r\n\t * @internal\r\n\t */\r\n\t_cloneTo(dest: Component): void {\r\n\t\tvar destPhysicsComponent: CannonPhysicsComponent = <CannonPhysicsComponent>dest;\r\n\t\tdestPhysicsComponent.restitution = this._restitution;\r\n\t\tdestPhysicsComponent.friction = this._friction;\r\n\t\tdestPhysicsComponent.collisionGroup = this._collisionGroup;\r\n\t\tdestPhysicsComponent.canCollideWith = this._canCollideWith;\r\n\t\tdestPhysicsComponent.canScaleShape = this.canScaleShape;\r\n\t\t(this._colliderShape) && (destPhysicsComponent.colliderShape = this._colliderShape.clone());\r\n\t}\r\n}\r\n\r\n","import { Component } from \"../../components/Component\"\r\nimport { CannonPhysicsComponent } from \"./CannonPhysicsComponent\"\r\n\r\n/**\r\n * <code>PhysicsTriggerComponent</code> 类用于创建物理触发器组件。\r\n */\r\nexport class CannonPhysicsTriggerComponent extends CannonPhysicsComponent {\r\n\t/** @internal */\r\n\tprivate _isTrigger: boolean = false;\r\n\r\n\t/**\r\n\t * 是否为触发器。\r\n\t */\r\n\tget isTrigger(): boolean {\r\n\t\treturn this._isTrigger;\r\n\t}\r\n\r\n\tset isTrigger(value: boolean) {\r\n\t\tthis._isTrigger = value;\r\n\t\tif (this._btColliderObject) {\r\n\t\t\tthis._btColliderObject.isTrigger = value;\r\n\t\t\tif (value) {\r\n\t\t\t\tvar flag = this._btColliderObject.type;\r\n\t\t\t\t//TODO:可能要改\r\n\t\t\t\tthis._btColliderObject.collisionResponse = false;\r\n\t\t\t\tif((flag&CANNON.Body.STATIC)===0)\r\n\t\t\t\tthis._btColliderObject.type |= CANNON.Body.STATIC;\r\n\t\t\t} else {\r\n\t\t\t\t//TODO：可能要改\r\n\t\t\t\tthis._btColliderObject.collisionResponse = true;\r\n\t\t\t\tif((flag &CANNON.Body.STATIC) !== 0)\r\n\t\t\t\tthis._btColliderObject.type ^= CANNON.Body.STATIC;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 创建一个 <code>PhysicsTriggerComponent</code> 实例。\r\n\t * @param collisionGroup 所属碰撞组。\r\n\t * @param canCollideWith 可产生碰撞的碰撞组。\r\n\t */\r\n\tconstructor(collisionGroup: number, canCollideWith: number) {\r\n\t\tsuper(collisionGroup, canCollideWith);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t * @override\r\n\t * @internal\r\n\t */\r\n\t_onAdded(): void {\r\n\t\tsuper._onAdded();\r\n\t\tthis.isTrigger = this._isTrigger;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t * @override\r\n\t * @internal\r\n\t */\r\n\t_cloneTo(dest: Component): void {\r\n\t\tsuper._cloneTo(dest);\r\n\t\t(<CannonPhysicsTriggerComponent>dest).isTrigger = this._isTrigger;\r\n\t}\r\n}\r\n\r\n","import { CannonPhysicsTriggerComponent } from \"./CannonPhysicsTriggerComponent\";\r\n\r\n/**\r\n * <code>PhysicsCollider</code> 类用于创建物理碰撞器。\r\n */\r\nexport class CannonPhysicsCollider extends CannonPhysicsTriggerComponent {\r\n\r\n\t/**\r\n\t * 创建一个 <code>PhysicsCollider</code> 实例。\r\n\t * @param collisionGroup 所属碰撞组。\r\n\t * @param canCollideWith 可产生碰撞的碰撞组。\r\n\t */\r\n\tconstructor(collisionGroup: number = -1, canCollideWith: number = -1) {\r\n\t\tsuper(collisionGroup, canCollideWith);\r\n\t\tthis._enableProcessCollisions = false;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t * @override\r\n\t * @internal\r\n\t */\r\n\t_addToSimulation(): void {\r\n\t\tthis._simulation._addPhysicsCollider(this);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t * @override\r\n\t * @internal\r\n\t */\r\n\t_removeFromSimulation(): void {\r\n\t\tthis._simulation._removePhysicsCollider(this);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t * @override\r\n\t * @internal\r\n\t */\r\n\t_parse(data: any): void {\r\n\t\t//TODO:\r\n\t\t(data.friction != null) && (this.friction = data.friction);\r\n\t\t//(data.rollingFriction != null) && (this.rollingFriction = data.rollingFriction);\r\n\t\t(data.restitution != null) && (this.restitution = data.restitution);\r\n\t\t(data.isTrigger != null) && (this.isTrigger = data.isTrigger);\r\n\t\tsuper._parse(data);\r\n\t\tthis._parseShape(data.shapes);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t * @override\r\n\t * @internal\r\n\t */\r\n\t_onAdded(): void {\r\n\t\tthis._btColliderObject = new CANNON.Body();\r\n\t\tthis._btColliderObject.material = new CANNON.Material();\r\n\t\tthis._btColliderObject.layaID = this._id;\r\n\t\tthis._btColliderObject.type = CANNON.Body.STATIC;\r\n\t\tthis._btColliderObject.collisionFilterGroup = this._collisionGroup;\r\n\t\tthis._btColliderObject.collisionFilterMask = this._canCollideWith;\r\n\t\tsuper._onAdded();\r\n\t}\r\n}\r\n\r\n\r\n","/**\r\n\t * <code>PhysicsSettings</code> 类用于创建物理配置信息。\r\n\t */\r\nexport class CannonPhysicsSettings {\r\n\t/**标志集合。*/\r\n\tflags: number = 0;\r\n\r\n\t/**物理引擎在一帧中用于补偿减速的最大次数。*/\r\n\tmaxSubSteps: number = 3;\r\n\r\n\t/**物理模拟器帧的间隔时间。*/\r\n\tfixedTimeStep: number = 1.0 / 60.0;\r\n\t/**物理松弛系数 */\r\n\tcontactEquationRelaxation = 10;\r\n\t/** 刚度系数 */\r\n\tcontactEquationStiffness = 1e6;\r\n\t/**\r\n\t * 创建一个 <code>PhysicsSettings</code> 实例。\r\n\t */\r\n\tconstructor() {\r\n\t\t\r\n\t}\r\n\r\n}\r\n\r\n\r\n","import { CannonPhysicsComponent } from \"./CannonPhysicsComponent\";\r\nimport { SingletonList } from \"../component/SingletonList\"\r\nimport { ISingletonElement } from \"../../resource/ISingletonElement\";\r\n\t\r\n\t/**\r\n\t * <code>PhysicsUpdateList</code> 类用于实现物理更新队列。\r\n\t */\r\n\texport class CannonPhysicsUpdateList extends SingletonList<ISingletonElement> {\r\n\t\t\r\n\t\t/**\r\n\t\t * 创建一个新的 <code>PhysicsUpdateList</code> 实例。\r\n\t\t */\r\n\t\tconstructor(){super();\r\n\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * @internal\r\n\t\t */\r\n\t\t add(element:CannonPhysicsComponent):void {\r\n\t\t\tvar index:number = element._inPhysicUpdateListIndex;\r\n\t\t\tif (index !== -1)\r\n\t\t\t\tthrow \"PhysicsUpdateList:element has  in  PhysicsUpdateList.\";\r\n\t\t\tthis._add(element);\r\n\t\t\telement._inPhysicUpdateListIndex = this.length++;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * @internal\r\n\t\t */\r\n\t\t remove(element:CannonPhysicsComponent):void {\r\n\t\t\tvar index:number = element._inPhysicUpdateListIndex;\r\n\t\t\tthis.length--;\r\n\t\t\tif (index !== this.length) {\r\n\t\t\t\tvar end:any = this.elements[this.length];\r\n\t\t\t\tthis.elements[index] = end;\r\n\t\t\t\tend._inPhysicUpdateListIndex = index;\r\n\t\t\t}\r\n\t\t\telement._inPhysicUpdateListIndex = -1;\r\n\t\t}\r\n\t\r\n\t}\r\n\r\n\r\n","import { Stat } from \"../../utils/Stat\";\r\nimport { Script3D } from \"../component/Script3D\";\r\nimport { Sprite3D } from \"../core/Sprite3D\";\r\nimport { Ray } from \"../math/Ray\";\r\nimport { Vector3 } from \"../math/Vector3\";\r\nimport { Physics3DUtils } from \"../utils/Physics3DUtils\";\r\nimport { CannonPhysicsUpdateList } from \"./CannonPhysicsUpdateList\";\r\nimport { CannonCollision } from \"./CannonCollision\";\r\nimport { CannonCollisionTool } from \"./CannonCollisionTool\";\r\nimport { CannonContactPoint } from \"./CannonContactPoint\";\r\nimport { CannonHitResult } from \"./CannonHitResult\";\r\nimport { CannonPhysicsCollider } from \"./CannonPhysicsCollider\";\r\nimport { CannonPhysicsComponent } from \"./CannonPhysicsComponent\";\r\nimport { CannonPhysicsSettings } from \"./CannonPhysicsSettings\";\r\nimport { CannonRigidbody3D } from \"./CannonRigidbody3D\";\r\n\r\n/**\r\n * <code>Simulation</code> 类用于创建物理模拟器。\r\n */\r\nexport class CannonPhysicsSimulation {\r\n\t/** @internal */\r\n\tstatic PHYSICSENGINEFLAGS_NONE: number = 0x0;\r\n\t/** @internal */\r\n\tstatic PHYSICSENGINEFLAGS_COLLISIONSONLY: number = 0x1;\r\n\t/** @internal */\r\n\tstatic PHYSICSENGINEFLAGS_SOFTBODYSUPPORT: number = 0x2;\r\n\t/** @internal */\r\n\tstatic PHYSICSENGINEFLAGS_MULTITHREADED: number = 0x4;\r\n\t/** @internal */\r\n\tstatic PHYSICSENGINEFLAGS_USEHARDWAREWHENPOSSIBLE: number = 0x8;\r\n\r\n\t/** @internal */\r\n\tstatic SOLVERMODE_RANDMIZE_ORDER: number = 1;\r\n\t/** @internal */\r\n\tstatic SOLVERMODE_FRICTION_SEPARATE: number = 2;\r\n\t/** @internal */\r\n\tstatic SOLVERMODE_USE_WARMSTARTING: number = 4;\r\n\t/** @internal */\r\n\tstatic SOLVERMODE_USE_2_FRICTION_DIRECTIONS: number = 16;\r\n\t/** @internal */\r\n\tstatic SOLVERMODE_ENABLE_FRICTION_DIRECTION_CACHING: number = 32;\r\n\t/** @internal */\r\n\tstatic SOLVERMODE_DISABLE_VELOCITY_DEPENDENT_FRICTION_DIRECTION: number = 64;\r\n\t/** @internal */\r\n\tstatic SOLVERMODE_CACHE_FRIENDLY: number = 128;\r\n\t/** @internal */\r\n\tstatic SOLVERMODE_SIMD: number = 256;\r\n\t/** @internal */\r\n\tstatic SOLVERMODE_INTERLEAVE_CONTACT_AND_FRICTION_CONSTRAINTS: number = 512;\r\n\t/** @internal */\r\n\tstatic SOLVERMODE_ALLOW_ZERO_LENGTH_FRICTION_DIRECTIONS: number = 1024;\r\n\r\n\t/** @internal */\r\n\tprivate static _btTempVector30: CANNON.Vec3;\r\n\t/** @internal */\r\n\tprivate static _btTempVector31: CANNON.Vec3;\r\n\t/** @internal */\r\n\tprivate static _tempVector30: Vector3 = new Vector3();\r\n\r\n\t/*是否禁用所有模拟器。*/\r\n\tstatic disableSimulation: boolean = false;\r\n\r\n\t/**\r\n\t* @internal\r\n\t*/\r\n\tstatic __init__(): void {\r\n\t\tCannonPhysicsSimulation._btTempVector30 = new CANNON.Vec3(0,0,0);\r\n\t\tCannonPhysicsSimulation._btTempVector31 = new CANNON.Vec3(0,0,0);;\r\n\t}\r\n\r\n\t/**\r\n\t * 创建限制刚体运动的约束条件。\r\n\t */\r\n\tstatic createConstraint(): void {//TODO: 两种重载函数\r\n\t\t//TODO:\r\n\t}\r\n\r\n\t/** @internal */\r\n\tprivate _btDiscreteDynamicsWorld: CANNON.World;\r\n\t/** @internal */\r\n\tprivate _btBroadphase: CANNON.NaiveBroadphase;\r\n\t/** @internal */\r\n\tprivate _gravity: Vector3 = new Vector3(0, -10, 0);\r\n\t/** @internal */\r\n\tprivate _iterations:number;\r\n\t/** @internal */\r\n\tprivate _btClosestRayResultCallback: CANNON.RaycastResult = new CANNON.RaycastResult();\r\n\t/** @internal */\r\n\tprivate _btRayoption:any = {};\r\n\r\n\t/** @internal */\r\n\tprivate _collisionsUtils:CannonCollisionTool = new CannonCollisionTool();\r\n\t/** @internal */\r\n\tprivate _previousFrameCollisions: CannonCollision[] = [];\r\n\t/** @internal */\r\n\tprivate _currentFrameCollisions: CannonCollision[] = [];\r\n\t/** @internal */\r\n\t_physicsUpdateList: CannonPhysicsUpdateList = new CannonPhysicsUpdateList();\r\n\t// /**@internal\t*/\r\n\t// _characters: CharacterController[] = [];\r\n\t/**@internal\t*/\r\n\t_updatedRigidbodies: number = 0;\r\n\r\n\t/**物理引擎在一帧中用于补偿减速的最大次数：模拟器每帧允许的最大模拟次数，如果引擎运行缓慢,可能需要增加该次数，否则模拟器会丢失“时间\",引擎间隔时间小于maxSubSteps*fixedTimeStep非常重要。*/\r\n\tmaxSubSteps: number = 1;\r\n\t/**物理模拟器帧的间隔时间:通过减少fixedTimeStep可增加模拟精度，默认是1.0 / 60.0。*/\r\n\tfixedTimeStep: number = 1.0 / 60.0;\r\n\r\n\t/**\r\n\t * 是否进行连续碰撞检测。CCD\r\n\t */\r\n\tget continuousCollisionDetection(): boolean {\r\n\t\t//有没有这个东西\r\n\t\treturn false\r\n\t}\r\n\r\n\tset continuousCollisionDetection(value: boolean) {\r\n\t\t//TODO\r\n\t\tthrow \"Simulation:Cannon physical engine does not support this feature\";\r\n\t}\r\n\r\n\t/**\r\n\t * 获取重力。\r\n\t */\r\n\tget gravity(): Vector3 {\r\n\t\tif (!this._btDiscreteDynamicsWorld)\r\n\t\t\tthrow \"Simulation:Cannot perform this action when the physics engine is set to CollisionsOnly\";\r\n\t\treturn this._gravity;\r\n\t}\r\n\r\n\tset gravity(value: Vector3) {\r\n\t\tif (!this._btDiscreteDynamicsWorld)\r\n\t\t\tthrow \"Simulation:Cannot perform this action when the physics engine is set to CollisionsOnly\";\r\n\t\tthis._gravity = value;\r\n\t\tthis._btDiscreteDynamicsWorld.gravity.set(value.x,value.y,value.z);\r\n\t}\r\n\r\n\t/**\r\n\t * 获取重力。\r\n\t */\r\n\tget solverIterations(): number {\r\n\t\tif (!(this._btDiscreteDynamicsWorld&&this._btDiscreteDynamicsWorld.solver))\r\n\t\t\tthrow \"Simulation:Cannot perform this action when the physics engine is set to CollisionsOnly\";\r\n\t\treturn this._iterations;\r\n\t}\r\n\r\n\tset solverIterations(value:number){\r\n\t\tif (!(this._btDiscreteDynamicsWorld&&this._btDiscreteDynamicsWorld.solver))\r\n\t\t\tthrow \"Simulation:Cannot perform this action when the physics engine is set to CollisionsOnly\";\r\n\t\t(<CANNON.GSSolver>this._btDiscreteDynamicsWorld.solver).iterations = value;\r\n\t\tthis._iterations = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tget speculativeContactRestitution(): boolean {\r\n\t\t//TODO:miner\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tset speculativeContactRestitution(value: boolean) {\r\n\t\t//TODO:miner\r\n\t}\r\n\t\r\n\r\n\t/**\r\n\t * @internal\r\n\t * 创建一个 <code>Simulation</code> 实例。\r\n\t */\r\n\tconstructor(configuration: CannonPhysicsSettings, flags: number = 0) {\r\n\t\tthis.maxSubSteps = configuration.maxSubSteps;\r\n\t\tthis.fixedTimeStep = configuration.fixedTimeStep;\r\n\r\n\t\tthis._btDiscreteDynamicsWorld = new CANNON.World();\r\n\t\tthis._btBroadphase =new CANNON.NaiveBroadphase();\r\n\t\tthis._btDiscreteDynamicsWorld.broadphase = this._btBroadphase;\r\n\r\n\t\tthis._btDiscreteDynamicsWorld.defaultContactMaterial.contactEquationRelaxation = configuration.contactEquationRelaxation;\r\n\t\tthis._btDiscreteDynamicsWorld.defaultContactMaterial.contactEquationStiffness = configuration.contactEquationStiffness;\r\n\t\tthis.gravity = this._gravity;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\t_simulate(deltaTime: number): void {\r\n\t\tthis._updatedRigidbodies = 0;\r\n\t\tif (this._btDiscreteDynamicsWorld){\r\n\t\t\tthis._btDiscreteDynamicsWorld.callBackBody.length = 0;\r\n\t\t\tthis._btDiscreteDynamicsWorld.allContacts.length = 0;\r\n\t\t\tthis._btDiscreteDynamicsWorld.step(this.fixedTimeStep,deltaTime,this.maxSubSteps);\r\n\t\t}\r\n\t\tvar callBackBody:CANNON.Body[] = this._btDiscreteDynamicsWorld.callBackBody;\r\n\t\t\r\n\t\tfor(var i:number = 0,n = callBackBody.length;i<n;i++){\r\n\t\t\tvar cannonBody:CANNON.Body = callBackBody[i];\r\n\t\t\tvar rigidbody:CannonRigidbody3D = CannonPhysicsComponent._physicObjectsMap[cannonBody.layaID];\r\n\t\t\trigidbody._simulation._updatedRigidbodies++;\r\n\t\t\trigidbody._updateTransformComponent(rigidbody._btColliderObject);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\t_destroy(): void {\r\n\t\t//TODO:移除调所有的RigidBody\r\n\t\tthis._btDiscreteDynamicsWorld = null;\r\n\t\tthis._btBroadphase = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\t_addPhysicsCollider(component: CannonPhysicsCollider): void {\r\n\t\tthis._btDiscreteDynamicsWorld.addBody(component._btColliderObject);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\t_removePhysicsCollider(component: CannonPhysicsCollider): void {\r\n\t\tthis._btDiscreteDynamicsWorld.removeBody(component._btColliderObject);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\t_addRigidBody(rigidBody: CannonRigidbody3D): void {\r\n\t\tif (!this._btDiscreteDynamicsWorld)\r\n\t\t\tthrow \"Simulation:Cannot perform this action when the physics engine is set to CollisionsOnly\";\r\n\t\tthis._btDiscreteDynamicsWorld.addBody(rigidBody._btColliderObject);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\t_removeRigidBody(rigidBody: CannonRigidbody3D): void {\r\n\t\tif (!this._btDiscreteDynamicsWorld)\r\n\t\t\tthrow \"Simulation:Cannot perform this action when the physics engine is set to CollisionsOnly\";\r\n\t\tthis._btDiscreteDynamicsWorld.removeBody(rigidBody._btColliderObject);\r\n\t}\r\n\t/**\r\n\t * 射线检测第一个碰撞物体。\r\n\t * @param\tfrom 起始位置。\r\n\t * @param\tto 结束位置。\r\n\t * @param\tout 碰撞结果。\r\n\t * @param   collisonGroup 射线所属碰撞组。\r\n\t * @param   collisionMask 与射线可产生碰撞的组。\r\n\t * @return \t是否成功。\r\n\t */\r\n\traycastFromTo(from: Vector3, to: Vector3, out: CannonHitResult = null, collisonGroup: number = Physics3DUtils.COLLISIONFILTERGROUP_ALLFILTER, collisionMask: number = Physics3DUtils.COLLISIONFILTERGROUP_ALLFILTER): boolean {\r\n\t\tvar rayResultCall: CANNON.RaycastResult = this._btClosestRayResultCallback;\r\n\t\trayResultCall.hasHit = false;\r\n\t\tvar rayOptions:any = this._btRayoption;\r\n\t\tvar rayFrom: CANNON.Vec3 = CannonPhysicsSimulation._btTempVector30;\r\n\t\tvar rayTo: CANNON.Vec3 = CannonPhysicsSimulation._btTempVector31;\r\n\t\trayFrom.set(from.x,from.y,from.z);\r\n\t\trayTo.set(to.x,to.y,to.z);\r\n\t\trayOptions.skipBackfaces = true;\r\n\t\trayOptions.collisionFilterMask = collisionMask;\r\n\t\trayOptions.collisionFilterGroup = collisonGroup;\r\n\t\trayOptions.result = rayResultCall;\r\n\t\tthis._btDiscreteDynamicsWorld.raycastClosest(rayFrom,rayTo,rayOptions,rayResultCall);\r\n\t\tif(rayResultCall.hasHit){\r\n\t\t\tif(out){\r\n\t\t\t\tout.succeeded = true;\r\n\t\t\t\tout.collider = CannonPhysicsComponent._physicObjectsMap[rayResultCall.body.layaID];\r\n\t\t\t\tvar point:Vector3 = out.point;\r\n\t\t\t\tvar normal:Vector3 = out.normal;\r\n\t\t\t\tvar resultPoint:CANNON.Vec3 = rayResultCall.hitPointWorld;\r\n\t\t\t\tvar resultNormal:CANNON.Vec3 = rayResultCall.hitNormalWorld;\r\n\t\t\t\tpoint.setValue(resultPoint.x,resultPoint.y,resultPoint.z);\r\n\t\t\t\tnormal.setValue(resultNormal.x,resultNormal.y,resultNormal.z)\r\n\t\t\t}\r\n\t\t\treturn true\r\n\t\t}else{\r\n\t\t\tout.succeeded = false;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * 射线检测所有碰撞的物体。\r\n\t * @param\tfrom 起始位置。\r\n\t * @param\tto 结束位置。\r\n\t * @param\tout 碰撞结果[数组元素会被回收]。\r\n\t * @param   collisonGroup 射线所属碰撞组。\r\n\t * @param   collisionMask 与射线可产生碰撞的组。\r\n\t * @return \t是否成功。\r\n\t */\r\n\traycastAllFromTo(from: Vector3, to: Vector3, out: CannonHitResult[], collisonGroup: number = Physics3DUtils.COLLISIONFILTERGROUP_ALLFILTER, collisionMask: number = Physics3DUtils.COLLISIONFILTERGROUP_ALLFILTER): boolean {\r\n\t\tvar rayOptions:any = this._btRayoption;\r\n\t\tvar rayFrom: CANNON.Vec3 = CannonPhysicsSimulation._btTempVector30;\r\n\t\tvar rayTo: CANNON.Vec3 = CannonPhysicsSimulation._btTempVector31;\r\n\t\trayFrom.set(from.x,from.y,from.z);\r\n\t\trayTo.set(to.x,to.y,to.z);\r\n\t\trayOptions.skipBackfaces = true;\r\n\t\trayOptions.collisionFilterMask = collisionMask;\r\n\t\trayOptions.collisionFilterGroup = collisonGroup;\r\n\t\tout.length = 0;\r\n\t\tthis._btDiscreteDynamicsWorld.raycastAll(rayFrom,rayTo,rayOptions,function(result:CANNON.RaycastResult){\r\n\t\t\tvar hitResult: CannonHitResult = this._collisionsUtils.getHitResult();\r\n\t\t\tout.push(hitResult);\r\n\t\t\thitResult.succeeded = true\r\n\t\t\thitResult.collider = CannonPhysicsComponent._physicObjectsMap[result.body.layaID];\r\n\t\t\t//TODO:out.hitFraction\r\n\t\t\tvar point:Vector3 = hitResult.point;\r\n\t\t\tvar normal:Vector3 = hitResult.normal;\r\n\t\t\tvar resultPoint:CANNON.Vec3 = result.hitPointWorld;\r\n\t\t\tvar resultNormal:CANNON.Vec3 = result.hitNormalWorld;\r\n\t\t\tpoint.setValue(resultPoint.x,resultPoint.y,resultPoint.z);\r\n\t\t\tnormal.setValue(resultNormal.x,resultNormal.y,resultNormal.z);\r\n\t\t});\r\n\t\tif(out.length!=0)\r\n\t\t\treturn true;\r\n\t\telse\r\n\t\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t *  射线检测第一个碰撞物体。\r\n\t * @param  \tray        射线\r\n\t * @param  \toutHitInfo 与该射线发生碰撞的第一个碰撞器的碰撞信息\r\n\t * @param  \tdistance   射线长度,默认为最大值\r\n\t * @param   collisonGroup 射线所属碰撞组。\r\n\t * @param   collisionMask 与射线可产生碰撞的组。\r\n\t * @return \t是否检测成功。\r\n\t */\r\n\trayCast(ray: Ray, outHitResult: CannonHitResult = null, distance: number = 2147483647/*Int.MAX_VALUE*/, collisonGroup: number = Physics3DUtils.COLLISIONFILTERGROUP_ALLFILTER, collisionMask: number = Physics3DUtils.COLLISIONFILTERGROUP_ALLFILTER): boolean {\r\n\t\tvar from: Vector3 = ray.origin;\r\n\t\tvar to: Vector3 = CannonPhysicsSimulation._tempVector30;\r\n\t\tVector3.normalize(ray.direction, to);\r\n\t\tVector3.scale(to, distance, to);\r\n\t\tVector3.add(from, to, to);\r\n\t\treturn this.raycastFromTo(from, to, outHitResult, collisonGroup, collisionMask);\r\n\t}\r\n\r\n\t/**\r\n\t * 射线检测所有碰撞的物体。\r\n\t * @param  \tray        射线\r\n\t * @param  \tout 碰撞结果[数组元素会被回收]。\r\n\t * @param  \tdistance   射线长度,默认为最大值\r\n\t * @param   collisonGroup 射线所属碰撞组。\r\n\t * @param   collisionMask 与射线可产生碰撞的组。\r\n\t * @return \t是否检测成功。\r\n\t */\r\n\trayCastAll(ray: Ray, out: CannonHitResult[], distance: number = 2147483647/*Int.MAX_VALUE*/, collisonGroup: number = Physics3DUtils.COLLISIONFILTERGROUP_ALLFILTER, collisionMask: number = Physics3DUtils.COLLISIONFILTERGROUP_ALLFILTER): boolean {\r\n\t\tvar from: Vector3 = ray.origin;\r\n\t\tvar to: Vector3 = CannonPhysicsSimulation._tempVector30;\r\n\t\tVector3.normalize(ray.direction, to);\r\n\t\tVector3.scale(to, distance, to);\r\n\t\tVector3.add(from, to, to);\r\n\t\treturn this.raycastAllFromTo(from, to, out, collisonGroup, collisionMask);\r\n\t}\r\n\r\n\t\r\n\t/**\r\n\t * 添加刚体运动的约束条件。\r\n\t * @param constraint 约束。\r\n\t * @param disableCollisionsBetweenLinkedBodies 是否禁用\r\n\t */\r\n\t// addConstraint(constraint: CannonConstraintComponent, disableCollisionsBetweenLinkedBodies: boolean = false): void {\r\n\t// \tif (!this._btDiscreteDynamicsWorld)\r\n\t// \t\tthrow \"Cannot perform this action when the physics engine is set to CollisionsOnly\";\r\n\t// \t// this._nativeDiscreteDynamicsWorld.addConstraint(constraint._nativeConstraint, disableCollisionsBetweenLinkedBodies);\r\n\t// \t// Physics3D._bullet.btCollisionWorld_addConstraint(this._btDiscreteDynamicsWorld,constraint._btConstraint,disableCollisionsBetweenLinkedBodies);\r\n\t// \t// this._currentConstraint[constraint.id] = constraint;\r\n\t// \t//TODO:还没做\r\n\t// \tthis._btDiscreteDynamicsWorld.addConstraint(constraint._btConstraint);\r\n\t// \tthis._currentConstraint[constraint.id] = constraint;\r\n\t// }\r\n\r\n\t/**\r\n\t * 移除刚体运动的约束条件。\r\n\t */\r\n\t// removeConstraint(constraint: CannonConstraintComponent): void {\r\n\t// \tif (!this._btDiscreteDynamicsWorld)\r\n\t// \t\tthrow \"Cannot perform this action when the physics engine is set to CollisionsOnly\";\r\n\t// \t// this._nativeDiscreteDynamicsWorld.removeConstraint(constraint._nativeConstraint);\r\n\t// \t// Physics3D._bullet.btCollisionWorld_removeConstraint(this._btDiscreteDynamicsWorld, constraint._btConstraint);\r\n\t// \t// delete this._currentConstraint[constraint.id];\r\n\t// \t//TODO:还没做\r\n\t// \tthis._btDiscreteDynamicsWorld.removeConstraint(constraint._btConstraint);\r\n\t// \tdelete this._currentConstraint[constraint.id];\r\n\t// }\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\t_updatePhysicsTransformFromRender(): void {\r\n\t\tvar elements: any = this._physicsUpdateList.elements;\r\n\t\tfor (var i: number = 0, n: number = this._physicsUpdateList.length; i < n; i++) {\r\n\t\t\tvar physicCollider: CannonPhysicsComponent = elements[i];\r\n\t\t\tphysicCollider._derivePhysicsTransformation(false);\r\n\t\t\tphysicCollider._inPhysicUpdateListIndex = -1;//置空索引\r\n\t\t}\r\n\t\tthis._physicsUpdateList.length = 0;//清空物理更新队列\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\t_updateCollisions(): void {\r\n\t\tthis._collisionsUtils.recoverAllContactPointsPool();\r\n\t\tvar previous: CannonCollision[] = this._currentFrameCollisions;\r\n\t\tthis._currentFrameCollisions = this._previousFrameCollisions;\r\n\t\tthis._currentFrameCollisions.length = 0;\r\n\t\tthis._previousFrameCollisions = previous;\r\n\t\t\r\n\t\tvar loopCount: number = Stat.loopCount;\r\n\t\tvar allContacts:CANNON.ContactEquation[] = this._btDiscreteDynamicsWorld.allContacts;\r\n\t\tvar numManifolds:number = allContacts.length;\r\n\t\tfor (var i: number = 0; i < numManifolds; i++) {\t\r\n\t\t\tvar contactEquation:CANNON.ContactEquation = allContacts[i];\r\n\t\t\tvar componentA = CannonPhysicsComponent._physicObjectsMap[contactEquation.bi.layaID];\r\n\t\t\tvar componentB = CannonPhysicsComponent._physicObjectsMap[contactEquation.bj.layaID];\r\n\t\t\tvar collision: CannonCollision = null;\r\n\t\t\tvar isFirstCollision: boolean;//可能同时返回A和B多次,需要过滤\r\n\t\t\tvar contacts: CannonContactPoint[] = null;\r\n\t\t\tvar isTrigger: boolean = componentA.isTrigger || componentB.isTrigger;\r\n\t\t\tif (isTrigger && (((<Sprite3D>componentA.owner))._needProcessTriggers || ((<Sprite3D>componentB.owner))._needProcessTriggers)) {\r\n\t\t\t\tcollision = this._collisionsUtils.getCollision(componentA,componentB);\r\n\t\t\t\tcontacts = collision.contacts;\r\n\t\t\t\tisFirstCollision = collision._updateFrame !== loopCount;\r\n\t\t\t\tif (isFirstCollision) {\r\n\t\t\t\t\tcollision._isTrigger = true;\r\n\t\t\t\t\tcontacts.length = 0;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t} else if (((<Sprite3D>componentA.owner))._needProcessCollisions || ((<Sprite3D>componentB.owner))._needProcessCollisions) {\r\n\t\t\t\tif (componentA._enableProcessCollisions || componentB._enableProcessCollisions) {//例：A和B均为运动刚体或PhysicCollider\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar contactPoint: CannonContactPoint = this._collisionsUtils.getContactPoints();\r\n\t\t\t\t\tcontactPoint.colliderA = componentA;\r\n\t\t\t\t\tcontactPoint.colliderB = componentB;\r\n\t\t\t\t\tvar normal:Vector3 = contactPoint.normal;\r\n\t\t\t\t\tvar positionOnA:Vector3 = contactPoint.positionOnA;\r\n\t\t\t\t\tvar positionOnB:Vector3 = contactPoint.positionOnB;\r\n\t\t\t\t\tvar connectNormal:CANNON.Vec3 = contactEquation.ni;\r\n\t\t\t\t\tvar connectOnA:CANNON.Vec3 = contactEquation.ri;\r\n\t\t\t\t\tvar connectOnB:CANNON.Vec3 = contactEquation.rj;\r\n\t\t\t\t\t\r\n\t\t\t\t\tnormal.setValue(connectNormal.x,connectNormal.y,connectNormal.z);\r\n\t\t\t\t\tpositionOnA.setValue(connectOnA.x,connectOnA.y,connectOnA.z);\r\n\t\t\t\t\tpositionOnB.setValue(connectOnB.x,connectOnB.y,-connectOnB.z);\r\n\t\t\t\t\tcollision = this._collisionsUtils.getCollision(componentA,componentB);\r\n\t\t\t\t\tcontacts = collision.contacts;\r\n\t\t\t\t\tisFirstCollision = collision._updateFrame !== loopCount;\r\n\t\t\t\t\tif (isFirstCollision) {\r\n\t\t\t\t\t\tcollision._isTrigger = false;\r\n\t\t\t\t\t\tcontacts.length = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcontacts.push(contactPoint);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (collision && isFirstCollision) {\r\n\t\t\t\tthis._currentFrameCollisions.push(collision);\r\n\t\t\t\tcollision._setUpdateFrame(loopCount);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\t_eventScripts(): void {\r\n\t\tvar loopCount: number = Stat.loopCount;\r\n\t\tfor (var i: number = 0, n: number = this._currentFrameCollisions.length; i < n; i++) {\r\n\t\t\tvar curFrameCol: CannonCollision = this._currentFrameCollisions[i];\r\n\t\t\tvar colliderA: CannonPhysicsComponent = curFrameCol._colliderA;\r\n\t\t\tvar colliderB: CannonPhysicsComponent = curFrameCol._colliderB;\r\n\t\t\tif (colliderA.destroyed || colliderB.destroyed)//前一个循环可能会销毁后面循环的同一物理组件\r\n\t\t\t\tcontinue;\r\n\t\t\tif (loopCount - curFrameCol._lastUpdateFrame === 1) {\r\n\t\t\t\tvar ownerA: Sprite3D = (<Sprite3D>colliderA.owner);\r\n\t\t\t\tvar scriptsA: Script3D[] = ownerA._scripts;\r\n\t\t\t\tif (scriptsA) {\r\n\t\t\t\t\tif (curFrameCol._isTrigger) {\r\n\t\t\t\t\t\tif (ownerA._needProcessTriggers) {\r\n\t\t\t\t\t\t\tfor (var j: number = 0, m: number = scriptsA.length; j < m; j++)\r\n\t\t\t\t\t\t\t\t//@ts-ignorets  minerTODO：\r\n\t\t\t\t\t\t\t\tscriptsA[j].onTriggerStay(colliderB);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (ownerA._needProcessCollisions) {\r\n\t\t\t\t\t\t\tfor (j = 0, m = scriptsA.length; j < m; j++) {\r\n\t\t\t\t\t\t\t\tcurFrameCol.other = colliderB;\r\n\t\t\t\t\t\t\t\t//@ts-ignorets  minerTODO：\r\n\t\t\t\t\t\t\t\tscriptsA[j].onCollisionStay(curFrameCol);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tvar ownerB: Sprite3D = (<Sprite3D>colliderB.owner);\r\n\t\t\t\tvar scriptsB: Script3D[] = ownerB._scripts;\r\n\t\t\t\tif (scriptsB) {\r\n\t\t\t\t\tif (curFrameCol._isTrigger) {\r\n\t\t\t\t\t\tif (ownerB._needProcessTriggers) {\r\n\t\t\t\t\t\t\tfor (j = 0, m = scriptsB.length; j < m; j++)\r\n\t\t\t\t\t\t\t\t//@ts-ignorets  minerTODO：\r\n\t\t\t\t\t\t\t\tscriptsB[j].onTriggerStay(colliderA);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (ownerB._needProcessCollisions) {\r\n\t\t\t\t\t\t\tfor (j = 0, m = scriptsB.length; j < m; j++) {\r\n\t\t\t\t\t\t\t\tcurFrameCol.other = colliderA;\r\n\t\t\t\t\t\t\t\t//@ts-ignorets  minerTODO：\r\n\t\t\t\t\t\t\t\tscriptsB[j].onCollisionStay(curFrameCol);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\townerA = (<Sprite3D>colliderA.owner);\r\n\t\t\t\tscriptsA = ownerA._scripts;\r\n\t\t\t\tif (scriptsA) {\r\n\t\t\t\t\tif (curFrameCol._isTrigger) {\r\n\t\t\t\t\t\tif (ownerA._needProcessTriggers) {\r\n\t\t\t\t\t\t\tfor (j = 0, m = scriptsA.length; j < m; j++)\r\n\t\t\t\t\t\t\t\t//@ts-ignorets  minerTODO：\r\n\t\t\t\t\t\t\t\tscriptsA[j].onTriggerEnter(colliderB);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (ownerA._needProcessCollisions) {\r\n\t\t\t\t\t\t\tfor (j = 0, m = scriptsA.length; j < m; j++) {\r\n\t\t\t\t\t\t\t\tcurFrameCol.other = colliderB;\r\n\t\t\t\t\t\t\t\t\t//@ts-ignorets  minerTODO：\r\n\t\t\t\t\t\t\t\tscriptsA[j].onCollisionEnter(curFrameCol);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\townerB = (<Sprite3D>colliderB.owner);\r\n\t\t\t\tscriptsB = ownerB._scripts;\r\n\t\t\t\tif (scriptsB) {\r\n\t\t\t\t\tif (curFrameCol._isTrigger) {\r\n\t\t\t\t\t\tif (ownerB._needProcessTriggers) {\r\n\t\t\t\t\t\t\tfor (j = 0, m = scriptsB.length; j < m; j++)\r\n\t\t\t\t\t\t\t\t//@ts-ignorets  minerTODO：\r\n\t\t\t\t\t\t\t\tscriptsB[j].onTriggerEnter(colliderA);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (ownerB._needProcessCollisions) {\r\n\t\t\t\t\t\t\tfor (j = 0, m = scriptsB.length; j < m; j++) {\r\n\t\t\t\t\t\t\t\tcurFrameCol.other = colliderA;\r\n\t\t\t\t\t\t\t\t\t//@ts-ignorets  minerTODO：\r\n\t\t\t\t\t\t\t\tscriptsB[j].onCollisionEnter(curFrameCol);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (i = 0, n = this._previousFrameCollisions.length; i < n; i++) {\r\n\t\t\tvar preFrameCol: CannonCollision = this._previousFrameCollisions[i];\r\n\t\t\tvar preColliderA: CannonPhysicsComponent = preFrameCol._colliderA;\r\n\t\t\tvar preColliderB: CannonPhysicsComponent = preFrameCol._colliderB;\r\n\t\t\tif (preColliderA.destroyed || preColliderB.destroyed)\r\n\t\t\t\tcontinue;\r\n\t\t\tif (loopCount - preFrameCol._updateFrame === 1) {\r\n\t\t\t\tthis._collisionsUtils.recoverCollision(preFrameCol);//回收collision对象\r\n\t\t\t\townerA = (<Sprite3D>preColliderA.owner);\r\n\t\t\t\tscriptsA = ownerA._scripts;\r\n\t\t\t\tif (scriptsA) {\r\n\t\t\t\t\tif (preFrameCol._isTrigger) {\r\n\t\t\t\t\t\tif (ownerA._needProcessTriggers) {\r\n\t\t\t\t\t\t\tfor (j = 0, m = scriptsA.length; j < m; j++)\r\n\t\t\t\t\t\t\t\t//@ts-ignorets  minerTODO：\r\n\t\t\t\t\t\t\t\tscriptsA[j].onTriggerExit(preColliderB);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (ownerA._needProcessCollisions) {\r\n\t\t\t\t\t\t\tfor (j = 0, m = scriptsA.length; j < m; j++) {\r\n\t\t\t\t\t\t\t\tpreFrameCol.other = preColliderB;\r\n\t\t\t\t\t\t\t\t//@ts-ignorets  minerTODO：\r\n\t\t\t\t\t\t\t\tscriptsA[j].onCollisionExit(preFrameCol);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\townerB = (<Sprite3D>preColliderB.owner);\r\n\t\t\t\tscriptsB = ownerB._scripts;\r\n\t\t\t\tif (scriptsB) {\r\n\t\t\t\t\tif (preFrameCol._isTrigger) {\r\n\t\t\t\t\t\tif (ownerB._needProcessTriggers) {\r\n\t\t\t\t\t\t\tfor (j = 0, m = scriptsB.length; j < m; j++)\r\n\t\t\t\t\t\t\t\t//@ts-ignorets  minerTODO：\r\n\t\t\t\t\t\t\t\tscriptsB[j].onTriggerExit(preColliderA);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (ownerB._needProcessCollisions) {\r\n\t\t\t\t\t\t\tfor (j = 0, m = scriptsB.length; j < m; j++) {\r\n\t\t\t\t\t\t\t\tpreFrameCol.other = preColliderA;\r\n\t\t\t\t\t\t\t\t//@ts-ignorets  minerTODO：\r\n\t\t\t\t\t\t\t\tscriptsB[j].onCollisionExit(preFrameCol);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 清除力。\r\n\t */\r\n\tclearForces(): void {\r\n\t\tif (!this._btDiscreteDynamicsWorld)\r\n\t\t\tthrow \"Cannot perform this action when the physics engine is set to CollisionsOnly\";\r\n\t}\r\n\r\n}\r\n\r\n\r\n","import { Component } from \"../../components/Component\";\r\nimport { Vector3 } from \"../math/Vector3\";\r\nimport { Physics3DUtils } from \"../utils/Physics3DUtils\";\r\n\r\nimport { CannonColliderShape } from \"./shape/CannonColliderShape\";\r\nimport { CannonPhysicsCollider } from \"./CannonPhysicsCollider\";\r\n\r\n//import { CannonConstraintComponent } from \"./Cannonconstraints/ConstraintComponent\";\r\n\r\n/**\r\n * <code>Rigidbody3D</code> 类用于创建刚体碰撞器。\r\n */\r\nexport class CannonRigidbody3D extends CannonPhysicsCollider {\r\n\t/*\r\n\t * 刚体类型_静态。\r\n\t * 设定为永远不会移动刚体,引擎也不会自动更新。\r\n\t * 如果你打算移动物理,建议使用TYPE_KINEMATIC。\r\n\t */\r\n\tstatic TYPE_STATIC: number = 0;\r\n\t/*\r\n\t * 刚体类型_动态。\r\n\t * 可以通过forces和impulsesy移动刚体,并且不需要修改移动转换。\r\n\t */\r\n\tstatic TYPE_DYNAMIC: number = 1;\r\n\t/*\r\n\t * 刚体类型_运动。\r\n\t * 可以移动刚体,物理引擎会自动处理动态交互。\r\n\t * 注意：和静态或其他类型刚体不会产生动态交互。\r\n\t */\r\n\tstatic TYPE_KINEMATIC: number = 2;\r\n\t/** @internal */\r\n\tstatic _BT_DISABLE_WORLD_GRAVITY: number = 1;\r\n\t/** @internal */\r\n\tstatic _BT_ENABLE_GYROPSCOPIC_FORCE: number = 2;\r\n\t/** @internal */\r\n\tprivate static _btTempVector30: CANNON.Vec3;\r\n\t/** @internal */\r\n\tprivate static _btTempVector31: CANNON.Vec3;\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tstatic __init__(): void {\r\n\t\tCannonRigidbody3D._btTempVector30 =new CANNON.Vec3();\r\n\t\tCannonRigidbody3D._btTempVector31 = new CANNON.Vec3();\r\n\t}\r\n\t/** @internal */\r\n\tprivate _isKinematic: boolean = false;\r\n\t/** @internal */\r\n\tprivate _mass: number = 1.0;\r\n\t/** @internal */\r\n\tprivate _gravity: Vector3 = new Vector3(0, -10, 0);\r\n\t/** @internal */\r\n\tprivate _angularDamping: number = 0.0;\r\n\t/** @internal */\r\n\tprivate _linearDamping: number = 0.0;\r\n\t/** @internal */\r\n\tprivate _totalTorque: Vector3 = new Vector3(0, 0, 0);\r\n\t/** @internal */\r\n\tprivate _totalForce: Vector3 = new Vector3(0, 0, 0);\r\n\t/** @internal */\r\n\tprivate _linearVelocity: Vector3 = new Vector3();\r\n\t/** @internal */\r\n\tprivate _angularVelocity: Vector3 = new Vector3();\r\n\t/**\r\n\t * 质量。\r\n\t */\r\n\tget mass(): number {\r\n\t\treturn this._mass;\r\n\t}\r\n\r\n\tset mass(value: number) {\r\n\t\tvalue = Math.max(value, 1e-07);//质量最小为1e-07\r\n\t\tthis._mass = value;\r\n\t\t(this._isKinematic) || (this._updateMass(value));\r\n\t}\r\n\r\n\t/**\r\n\t * 是否为运动物体，如果为true仅可通过transform属性移动物体,而非其他力相关属性。\r\n\t */\r\n\tget isKinematic(): boolean {\r\n\t\treturn this._isKinematic;\r\n\t}\r\n\r\n\tset isKinematic(value: boolean) {\r\n\t\tthis._isKinematic = value;\r\n\t\tthis._controlBySimulation = !value;//isKinematic not controll by Simulation\r\n\t\tvar canInSimulation: boolean = !!(this._simulation && this._enabled && this._colliderShape);\r\n\t\tcanInSimulation && this._removeFromSimulation();\r\n\t\tvar natColObj: CANNON.Body = this._btColliderObject;\r\n\t\tvar flags = natColObj.type;\r\n\t\tif (value) {\r\n\t\t\tflags = flags | CANNON.Body.KINEMATIC;\r\n\t\t\tnatColObj.type = flags;\r\n\t\t\tthis._enableProcessCollisions = false;\r\n\t\t\tthis._updateMass(0);//必须设置Mass为0来保证InverMass为0\r\n\t\t} else {\r\n\t\t\tif ((flags & CANNON.Body.KINEMATIC) > 0)\r\n\t\t\t\tflags = flags ^ CANNON.Body.KINEMATIC;\r\n\t\t\t\tnatColObj.allowSleep = true;\r\n\t\t\t\tnatColObj.type = flags;\r\n\t\t\tthis._enableProcessCollisions = true;\r\n\t\t\tthis._updateMass(this._mass);\r\n\t\t}\r\n\t\tnatColObj.velocity.set(0.0,0.0,0.0);\r\n\t\tnatColObj.angularVelocity.set(0.0,0.0,0.0);\r\n\t\tcanInSimulation && this._addToSimulation();\r\n\t}\r\n\r\n\t/**\r\n\t * 刚体的线阻力。\r\n\t */\r\n\tget linearDamping(): number {\r\n\t\treturn this._linearDamping;\r\n\t}\r\n\r\n\tset linearDamping(value: number) {\r\n\t\tthis._linearDamping = value;\r\n\t\tif (this._btColliderObject)\r\n\t\t\tthis._btColliderObject.linearDamping = value;\r\n\t}\r\n\r\n\t/**\r\n\t * 刚体的角阻力。\r\n\t */\r\n\tget angularDamping(): number {\r\n\t\treturn this._angularDamping;\r\n\t}\r\n\r\n\tset angularDamping(value: number) {\r\n\t\tthis._angularDamping = value;\r\n\t\tif (this._btColliderObject)\r\n\t\t\tthis._btColliderObject.angularDamping = value;\r\n\t}\r\n\r\n\t/**\r\n\t * 总力。\r\n\t */\r\n\tget totalForce(): Vector3 {\r\n\t\tif (this._btColliderObject) {\r\n\t\t\tvar btTotalForce:CANNON.Vec3= this.btColliderObject.force;\r\n\t\t\tthis.totalForce.setValue(btTotalForce.x,btTotalForce.y,btTotalForce.z);\r\n\t\t\treturn this._totalForce;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * 线速度\r\n\t */\r\n\tget linearVelocity(): Vector3 {\r\n\t\tif (this._btColliderObject){\r\n\t\t\tvar phylinear:CANNON.Vec3 = this.btColliderObject.velocity;\r\n\t\t\tthis._linearVelocity.setValue(phylinear.x,phylinear.y,phylinear.z);\r\n\t\t}\r\n\t\treturn this._linearVelocity;\r\n\t}\r\n\r\n\tset linearVelocity(value: Vector3) {\r\n\t\tthis._linearVelocity = value;\r\n\t\tif (this._btColliderObject) {\r\n\t\t\tvar btValue: CANNON.Vec3= this.btColliderObject.velocity;\r\n\t\t\t(this.isSleeping)&&(this.wakeUp());\r\n\t\t\tbtValue.set(value.x,value.y,value.z);\r\n\t\t\tthis.btColliderObject.velocity = btValue;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 角速度。\r\n\t */\r\n\tget angularVelocity(): Vector3 {\r\n\t\tif (this._btColliderObject)\r\n\t\t{\r\n\t\t\tvar phtqua:CANNON.Vec3 = this._btColliderObject.angularVelocity;\r\n\t\t\tthis.angularVelocity.setValue(phtqua.x,phtqua.y,phtqua.z);\r\n\t\t}\r\n\t\treturn this._angularVelocity;\r\n\t}\r\n\r\n\tset angularVelocity(value: Vector3) {\r\n\t\tthis._angularVelocity = value;\r\n\t\tif (this._btColliderObject) {\r\n\t\t\tvar btValue: CANNON.Vec3= this.btColliderObject.angularVelocity;\r\n\t\t\t(this.isSleeping)&&(this.wakeUp());\r\n\t\t\tbtValue.set(value.x,value.y,value.z);\r\n\t\t\tthis.btColliderObject.velocity = btValue;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 刚体所有扭力。\r\n\t */\r\n\tget totalTorque(): Vector3 {\r\n\t\tif (this._btColliderObject) {\r\n\t\t\tvar btTotalTorque:CANNON.Vec3 = this._btColliderObject.torque;\r\n\t\t\tthis._totalTorque.setValue(btTotalTorque.x,btTotalTorque.y,btTotalTorque.z);\r\n\t\t\treturn this._totalTorque;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * 是否处于睡眠状态。\r\n\t */\r\n\tget isSleeping(): boolean {\r\n\t\tif (this._btColliderObject)\r\n\t\t\treturn this._btColliderObject.sleepState!=CANNON.Body.AWAKE;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * 刚体睡眠的线速度阈值。\r\n\t */\r\n\tget sleepLinearVelocity(): number {\r\n\t\treturn this._btColliderObject.sleepSpeedLimit;\r\n\t}\r\n\r\n\tset sleepLinearVelocity(value: number) {\r\n\t\tthis._btColliderObject.sleepSpeedLimit = value;\r\n\t}\r\n\r\n\tget btColliderObject():CANNON.Body{\r\n\t\treturn this._btColliderObject;\r\n\t}\r\n\r\n\t/**\r\n\t * 创建一个 <code>RigidBody3D</code> 实例。\r\n\t * @param collisionGroup 所属碰撞组。\r\n\t * @param canCollideWith 可产生碰撞的碰撞组。\r\n\t */\r\n\tconstructor(collisionGroup: number = -1, canCollideWith: number = Physics3DUtils.COLLISIONFILTERGROUP_ALLFILTER) {\r\n\t\tsuper(collisionGroup, canCollideWith);\r\n\t\tthis._controlBySimulation = true;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tprivate _updateMass(mass: number): void {\r\n\t\tif (this._btColliderObject && this._colliderShape) {\r\n\t\t\tthis._btColliderObject.mass = mass;\r\n\t\t\tthis._btColliderObject.updateMassProperties();\r\n\t\t\tthis._btColliderObject.updateSolveMassProperties();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t * @override\r\n\t * @internal\r\n\t */\r\n\tprotected _onScaleChange(scale: Vector3): void {\r\n\t\tsuper._onScaleChange(scale);\r\n\t\tthis._updateMass(this._isKinematic ? 0 : this._mass);//修改缩放需要更新惯性\r\n\t}\r\n\r\n\t/**\r\n\t * \t@internal\r\n\t */\r\n\t_derivePhysicsTransformation(force: boolean): void {\r\n\t\t//TODO：\r\n\t\t this._innerDerivePhysicsTransformation(this.btColliderObject, force);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t * @override\r\n\t * @internal\r\n\t */\r\n\t_onAdded(): void {\r\n\t\tvar btRigid: CANNON.Body = new CANNON.Body();\r\n\t\tbtRigid.material = new CANNON.Material();\r\n\t\tbtRigid.layaID = this.id;\r\n\t\tbtRigid.collisionFilterGroup = this.collisionGroup;\r\n\t\tbtRigid.collisionFilterMask = this._canCollideWith;\r\n\t\tthis._btColliderObject = btRigid;\r\n\t\tsuper._onAdded();\r\n\t\tthis.mass = this._mass;\r\n\t\tthis.linearDamping = this._linearDamping;\r\n\t\tthis.angularDamping = this._angularDamping;\r\n\t\tthis.isKinematic = this._isKinematic;\r\n\t\tif(!this.isKinematic)\r\n\t\t\tthis._btColliderObject.type = CANNON.Body.DYNAMIC;\r\n\t\telse\r\n\t\t\tthis._btColliderObject.type = CANNON.Body.KINEMATIC;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t * @override\r\n\t * @internal\r\n\t */\r\n\t_onShapeChange(colShape: CannonColliderShape): void {\r\n\t\tsuper._onShapeChange(colShape);\t\t\r\n\t\tif (this._isKinematic) {\r\n\t\t\tthis._updateMass(0);\r\n\t\t} else {\r\n\t\t\tthis._updateMass(this._mass);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t * @override\r\n\t * @internal\r\n\t */\r\n\t_parse(data: any): void {\r\n\t\t(data.friction != null) && (this.friction = data.friction);\r\n\t\t(data.restitution != null) && (this.restitution = data.restitution);\r\n\t\t(data.isTrigger != null) && (this.isTrigger = data.isTrigger);\r\n\t\t(data.mass != null) && (this.mass = data.mass);\r\n\t\t(data.isKinematic != null) && (this.isKinematic = data.isKinematic);\r\n\t\t(data.linearDamping != null) && (this.linearDamping = data.linearDamping);\r\n\t\t(data.angularDamping != null) && (this.angularDamping = data.angularDamping);\r\n\t\tsuper._parse(data);\r\n\t\tthis._parseShape(data.shapes);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t * @internal\r\n\t * @override\r\n\t */\r\n\tprotected _onDestroy(): void {\r\n\t\r\n\t\tsuper._onDestroy();\r\n\t\tthis._gravity = null;\r\n\t\tthis._totalTorque = null;\r\n\t\tthis._linearVelocity = null;\r\n\t\tthis._angularVelocity = null;\r\n\t}\r\n\t\t\t\r\n\t/**\r\n\t * @inheritDoc\r\n\t * @override\r\n\t * @internal\r\n\t */\r\n\t_addToSimulation(): void {\r\n\t\tthis._simulation._addRigidBody(this);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t * @override\r\n\t * @internal\r\n\t */\r\n\t_removeFromSimulation(): void {\r\n\t\tthis._simulation._removeRigidBody(this);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t * @override\r\n\t * @internal\r\n\t */\r\n\t_cloneTo(dest: Component): void {\r\n\t\tsuper._cloneTo(dest);\r\n\t\tvar destRigidbody3D: CannonRigidbody3D = (<CannonRigidbody3D>dest);\r\n\t\tdestRigidbody3D.isKinematic = this._isKinematic;\r\n\t\tdestRigidbody3D.mass = this._mass;\r\n\t\tdestRigidbody3D.angularDamping = this._angularDamping;\r\n\t\tdestRigidbody3D.linearDamping = this._linearDamping;\r\n\t\tdestRigidbody3D.linearVelocity = this._linearVelocity;\r\n\t\tdestRigidbody3D.angularVelocity = this._angularVelocity;\r\n\t}\r\n\r\n\t/**\r\n\t * 应用作用力。\r\n\t * @param\tforce 作用力。\r\n\t * @param\tlocalOffset 偏移,如果为null则为中心点\r\n\t */\r\n\tapplyForce(force: Vector3, localOffset: Vector3 = null): void {\r\n\t\tif (this._btColliderObject == null)\r\n\t\t\tthrow \"Attempted to call a Physics function that is avaliable only when the Entity has been already added to the Scene.\";\r\n\t\tvar btForce: CANNON.Vec3 = CannonRigidbody3D._btTempVector30;\r\n\t\tbtForce.set(force.x,force.y,force.z);\r\n\t\tvar btOffset :CANNON.Vec3 = CannonRigidbody3D._btTempVector31;\r\n\t\tif(localOffset)\r\n\t\t\tbtOffset.set(localOffset.x,localOffset.y,localOffset.z);\r\n\t\telse\r\n\t\t\tbtOffset.set(0.0,0.0,0.0);\r\n\t\tthis.btColliderObject.applyLocalForce(btForce,btOffset);\r\n\t}\r\n\r\n\t/**\r\n\t * 应用扭转力。\r\n\t * @param\ttorque 扭转力。\r\n\t */\r\n\tapplyTorque(torque: Vector3): void {\r\n\t\tif (this._btColliderObject == null)\r\n\t\t\tthrow \"Attempted to call a Physics function that is avaliable only when the Entity has been already added to the Scene.\";\r\n\t\tvar btTorque: CANNON.Vec3 = CannonRigidbody3D._btTempVector30;\r\n\t\tbtTorque.set(torque.x,torque.y,torque.z);\r\n\t\tvar oriTorque:CANNON.Vec3 = this.btColliderObject.torque;\r\n\t\toriTorque.set(oriTorque.x+btTorque.x,oriTorque.y+btTorque.y,oriTorque.z+btTorque.z);\r\n\t\tthis.btColliderObject.torque = oriTorque;\r\n\t}\r\n\r\n\t/**\r\n\t * 应用冲量。\r\n\t * @param\timpulse 冲量。\r\n\t * @param   localOffset 偏移,如果为null则为中心点。\r\n\t */\r\n\tapplyImpulse(impulse: Vector3, localOffset: Vector3 = null): void {\r\n\t\tif (this._btColliderObject == null)\r\n\t\t\tthrow \"Attempted to call a Physics function that is avaliable only when the Entity has been already added to the Scene.\";\r\n\t\tif (this._btColliderObject == null)\r\n\t\t\tthrow \"Attempted to call a Physics function that is avaliable only when the Entity has been already added to the Scene.\";\r\n\t\tvar btForce: CANNON.Vec3 = CannonRigidbody3D._btTempVector30;\r\n\t\tbtForce.set(impulse.x,impulse.y,impulse.z);\r\n\t\tvar btOffset :CANNON.Vec3 = CannonRigidbody3D._btTempVector31;\r\n\t\tif(localOffset)\r\n\t\t\tbtOffset.set(localOffset.x,localOffset.y,localOffset.z);\r\n\t\telse\r\n\t\t\tbtOffset.set(0.0,0.0,0.0);\r\n\t\tthis.btColliderObject.applyImpulse(btForce,btOffset);\r\n\t}\r\n\r\n\t/**\r\n\t * 唤醒刚体。\r\n\t */\r\n\twakeUp(): void {\r\n\t\tthis._btColliderObject && this._btColliderObject.wakeUp();\r\n\t}\r\n\r\n\t/**\r\n\t *清除应用到刚体上的所有力。\r\n\t */\r\n\tclearForces(): void {\r\n\t\tvar rigidBody:CANNON.Body = this._btColliderObject;\r\n\t\tif (rigidBody == null)\r\n\t\t\tthrow \"Attempted to call a Physics function that is avaliable only when the Entity has been already added to the Scene.\";\r\n\t\trigidBody.velocity.set(0.0,0.0,0.0);\r\n\t\trigidBody.velocity = rigidBody.velocity;\r\n\t\trigidBody.angularVelocity.set(0.0,0.0,0.0);\r\n\t\trigidBody.angularVelocity = rigidBody.angularVelocity;\r\n\r\n\t}\r\n}\r\n\r\n\r\n","import { Quaternion } from \"../../math/Quaternion\";\r\nimport { Vector3 } from \"../../math/Vector3\";\r\nimport { CannonColliderShape } from \"./CannonColliderShape\";\r\nimport { CannonRigidbody3D } from \"../CannonRigidbody3D\";\r\nimport { CannonPhysicsCollider } from \"../CannonPhysicsCollider\";\r\nimport { CannonPhysicsTriggerComponent } from \"../CannonPhysicsTriggerComponent\";\r\nimport { CannonPhysicsComponent } from \"../CannonPhysicsComponent\";\r\n\r\n/**\r\n * <code>CompoundColliderShape</code> 类用于创建盒子形状碰撞器。\r\n */\r\nexport class CannonCompoundColliderShape extends CannonColliderShape {\r\n    \r\n    private static _tempCannonQue:CANNON.Quaternion = new CANNON.Quaternion(0,0,0,1);\r\n    private static _tempCannonVec:CANNON.Vec3 = new CANNON.Vec3(0,0,0);\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tstatic __init__(): void {\r\n\t}\r\n\r\n\t/**@internal */\r\n    private _childColliderShapes: CannonColliderShape[] = [];\r\n    private physicColliderObject:CannonPhysicsComponent;\r\n\t/**\r\n\t * 创建一个新的 <code>CompoundColliderShape</code> 实例。\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n        this._type = CannonColliderShape.SHAPETYPES_COMPOUND;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tprivate _clearChildShape(shape: CannonColliderShape): void {\r\n\t\tshape._attatched = false;\r\n\t\tshape._compoundParent = null;\r\n\t\tshape._indexInCompound = -1;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t * @override\r\n\t * @internal\r\n\t */\r\n\t_addReference(): void {\r\n\t\tthis._referenceCount++;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t * @override\r\n\t * @internal\r\n\t */\r\n\t_removeReference(): void {\r\n\t\tthis._referenceCount--;\r\n\t}\r\n\r\n\taddChildShape(shape: CannonColliderShape,localOffset:Vector3 = null): void {\r\n\t\tif (shape._attatched)\r\n\t\t\tthrow \"CompoundColliderShape: this shape has attatched to other entity.\";\r\n\r\n\t\tshape._attatched = true;\r\n        shape._compoundParent = this;\r\n        //id\r\n\t\tshape._indexInCompound = this._childColliderShapes.length;\r\n\t\tthis._childColliderShapes.push(shape);\r\n        shape.localOffset = localOffset;\r\n        if(this.physicColliderObject)\r\n        {\r\n            CannonCompoundColliderShape._tempCannonQue.set(0,0,0,1);\r\n            CannonCompoundColliderShape._tempCannonVec.set(localOffset.x*this._scale.x,localOffset.y*this._scale.y,localOffset.z*this._scale.z);\r\n            this.physicColliderObject._btColliderObject.addShape(shape._btShape,CannonCompoundColliderShape._tempCannonVec,CANNON.Vec3.ZERO);\r\n        }\r\n\t}\r\n\r\n\t/**\r\n\t * 移除子碰撞器形状。\r\n\t * @param\tshape 子碰撞器形状。\r\n\t */\r\n\tremoveChildShape(shape: CannonColliderShape): void {\r\n\t\tif (shape._compoundParent === this) {\r\n\t\t\tvar index: number = shape._indexInCompound;\r\n\t\t\tthis._clearChildShape(shape);\r\n\t\t\tvar endShape: CannonColliderShape = this._childColliderShapes[this._childColliderShapes.length - 1];\r\n\t\t\tendShape._indexInCompound = index;\r\n\t\t\tthis._childColliderShapes[index] = endShape;\r\n\t\t\tthis._childColliderShapes.pop();\r\n            if(this.physicColliderObject)\r\n                this.bindRigidBody(this.physicColliderObject);\r\n\t\t}\r\n\t}\r\n\r\n    bindRigidBody(rigidbody:CannonPhysicsComponent){\r\n        this.physicColliderObject = rigidbody;\r\n        var body:CANNON.Body = rigidbody._btColliderObject;\r\n        body.shapes.length = 0;\r\n        body.shapeOffsets.length = 0;\r\n        body.shapeOrientations.length = 0;\r\n        var origoffset:Vector3;\r\n        for(var i = 0,n = this._childColliderShapes.length;i!=n;i++){\r\n            var shape:CannonColliderShape = this._childColliderShapes[i];\r\n            body.shapes.push(shape._btShape);\r\n            origoffset = shape.localOffset;\r\n            body.shapeOffsets.push(new CANNON.Vec3(origoffset.x*this._scale.x,origoffset.y*this._scale.y,origoffset.z*this._scale.z));\r\n            body.shapeOrientations.push(CannonCompoundColliderShape._tempCannonQue);\r\n        }\r\n        body.updateMassProperties();\r\n        body.updateBoundingRadius();\r\n        body.aabbNeedsUpdate = true;\r\n    }\r\n    /**\r\n\t * @inheritDoc\r\n\t * @override\r\n\t */\r\n\t_setScale(scale:Vector3){\r\n\t\tthis._scale.setValue(scale.x,scale.y,scale.z);\r\n        var body:CANNON.Body = this.physicColliderObject._btColliderObject;\r\n        var length = this.getChildShapeCount();\r\n        var shapeoffsets:CANNON.Vec3[] = body.shapeOffsets;\r\n        for(var i:number = 0;i<length;i++){\r\n           var offset:CANNON.Vec3 = shapeoffsets[i];\r\n           var shape:CannonColliderShape = this._childColliderShapes[i];\r\n           shape._setScale(scale);\r\n           var orioffset:Vector3 = shape.localOffset;\r\n           offset.set(orioffset.x*scale.x,orioffset.y*scale.y,orioffset.z*scale.z);\r\n            \r\n        }\r\n        body.updateMassProperties();\r\n        body.updateBoundingRadius();\r\n        body.aabbNeedsUpdate = true;\r\n\t}\r\n\t/**\r\n\t * 获取子形状数量。\r\n\t * @return\r\n\t */\r\n\tgetChildShapeCount(): number {\r\n\t\treturn this._childColliderShapes.length;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t * @override\r\n\t */\r\n\tcloneTo(destObject: any): void {\r\n\t\tvar destCompoundColliderShape: CannonCompoundColliderShape = (<CannonCompoundColliderShape>destObject);\r\n\t\t//destCompoundColliderShape.clearChildShape();\r\n\t\tfor (var i: number = 0, n: number = this._childColliderShapes.length; i < n; i++)\r\n\t\t\tdestCompoundColliderShape.addChildShape(this._childColliderShapes[i].clone());\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t * @override\r\n\t */\r\n\tclone(): any {\r\n\t\tvar dest: CannonCompoundColliderShape = new CannonCompoundColliderShape();\r\n\t\tthis.cloneTo(dest);\r\n\t\treturn dest;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t * @override\r\n\t */\r\n\tdestroy(): void {\r\n\t\tsuper.destroy();\r\n\t\tfor (var i: number = 0, n: number = this._childColliderShapes.length; i < n; i++) {\r\n\t\t\tvar childShape: CannonColliderShape = this._childColliderShapes[i];\r\n\t\t\tif (childShape._referenceCount === 0)\r\n\t\t\t\tchildShape.destroy();\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n\r\n"],"names":["Vector3","Matrix4x4","Quaternion","Component","Physics3DUtils","Event","Transform3D","SingletonList","Stat"],"mappings":"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"}